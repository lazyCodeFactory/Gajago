package com.ssocio.sharing.controller.admin;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.service.admin.AdminLevelService;

/**
 * <pre>
 * 콩통 컨트롤러
 * 콩통 처리를 위한 컨트롤러
 * @author J.K.CHOI
 * @version
 * @since 2015. 7. 17. 오후 7:18:35
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 17.	|	J.K.CHOI	|신규
 * @비고
 * </pre>
 */
@Controller
public class AdminLevelController extends AdminReferController {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminLevelController.class);
	
	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private AdminLevelService adminLevelService;
	
	
	/**
	 * <pre>
	 * 회원레벨 리스트 조회
	 * 회원레벨 리스트 조회
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/admin/level/selectListLevel.do")
	public ModelAndView selectListLevel(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("LEVEL LIST START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		
		LoggerUtil.writeMap(inParam);
		try {
			mav.addObject("list", adminLevelService.selectListLevel(inParam));			//회원레벨 리스트
			mav.addObject("params", inParam);
			mav.setViewName("admin/level/selectListLevel");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * <pre>
	 * 등록화면 이동
	 * 
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/admin/level/insertLevel.do")
	public ModelAndView insertLevel(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("LEVEL INSERT VIEW START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		try {
			mav.addObject("IU", "I");																		//등록(I) or 수정(U) FLAG
			//mav.addObject("selectLevel", adminLevelService.selectLevel(inParam).get("selectLevel"));	//회원레벨 상세조회
			mav.addObject("params", inParam);
			mav.setViewName("admin/level/insertLevel");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * <pre>
	 * 수정화면 이동
	 * 
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/admin/level/updateLevel.do")
	public ModelAndView updateLevel(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("LEVEL UPDATE VIEW START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		try {
			mav.addObject("IU", "U");																		//등록(I) or 수정(U) FLAG
			mav.addObject("selectLevel", adminLevelService.selectLevel(inParam).get("selectLevel"));	//회원레벨 상세조회
			mav.addObject("params", inParam);
			mav.setViewName("admin/level/insertLevel");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	/**
	 * <pre>
	 * 회원레벨 등록
	 * 회원레벨 등록
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 3:18:21
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/admin/level/insertLevelReg.do")
	public String insertLevelReg(MultipartHttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("LEVEL INSERT REG START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		
		try {
			adminLevelService.insertLevelReg(inParam, request);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return "redirect:/admin/level/selectListLevel.do?MBER_REG_GB_CD=" + inParam.get("MBER_REG_GB_CD").toString();
	}
	
	/**
	 * <pre>
	 * 회원레벨 수정
	 * 회원레벨 수정
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 3:30:24
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/admin/level/updateLevelReg.do")
	public String updateLevelReg(MultipartHttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("LEVEL UPDATE REG START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		try {
			adminLevelService.updateLevelReg(inParam, request);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return "redirect:/admin/level/selectListLevel.do?MBER_REG_GB_CD=" + inParam.get("MBER_REG_GB_CD").toString();
	}
	
	/**
	 * <pre>
	 * 회원레벨 삭제
	 * 회원레벨 삭제
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 13 오후 3:18:21
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/admin/level/deleteLevel.do")
	public String deleteLevel(HttpServletRequest request, HttpServletResponse response
			, @RequestParam Map<String, Object> inParam 
			, @RequestParam(value="MBER_LEV_SEQ", required=false) String[] seqArr) throws Exception {
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("LEVEL DELETE REG START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		
		try {
			adminLevelService.deleteLevel(inParam, seqArr);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return "redirect:/admin/level/selectListLevel.do?MBER_REG_GB_CD=" + inParam.get("MBER_REG_GB_CD").toString();
	}
}
