package com.ssocio.sharing.service.admin;

import java.util.Map;

import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.ui.ModelMap;

public interface AdminMenuService {

	/**
	 * <pre>
	 * 메뉴 리스트 조회
	 * 메뉴 리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:32:52
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public ModelMap selectListMenu(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 하위 메뉴 리스트 조회
	 * 메뉴 리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:33:20
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public ModelMap selectListSubMenu(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 메뉴 추가
	 * 메뉴를 추가 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:33:42
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public int insertMenuReg(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 하위메뉴 추가
	 * 하위메뉴를 저장한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:51:58
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public int insertSubMenuReg(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 메뉴 수정
	 * 메뉴를 수정 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 9:22:04
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public int updateMenuReg(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 메뉴 삭제
	 * 메뉴를 삭제 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 10:11:04
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public int deleteMenuReg(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 노출여부 수정
	 * 노출여부를 수정 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 10:27:12
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public int updateViewYnReg(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 정렬순서 수정
	 * 정렬순서를 수정 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 10:46:08
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public int updateSortSeq(String[] arryCode, String[] arrySortSeq) throws Exception;
}
