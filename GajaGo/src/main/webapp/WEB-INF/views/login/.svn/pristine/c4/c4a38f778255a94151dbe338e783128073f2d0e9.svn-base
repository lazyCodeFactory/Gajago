package com.ssocio.sharing.dao.admin;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.dao.DataAccessException;
import org.springframework.stereotype.Component;
import org.springframework.ui.ModelMap;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.cmmn.web.RspnsCnst;
import com.ssocio.sharing.vo.admin.AdminSession;

/**
 * <pre>
 * 공통 Dao
 * 공통 처리 Dao
 * @author S.B.LEE
 * @version
 * @since 2015. 6. 22.. 오후 4:24:10
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 6. 22.	|	S.B.LEE	|신규
 * @쌔애
 * </pre>
 */
@Component
public class AdminCommonDao {
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminCommonDao.class);

	// --------------------------------------------------------------------------
	// # sqlSession 설정
	//   -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
	//   -- 하나만 사용할 경우 @Autowired
	// --------------------------------------------------------------------------
	@Resource(name="sqlSessionAdmin")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}

	/**
	 * <pre>
	 * 관리자 로그인
	 * 관리자의 로그인을 처리한다.
	 * @param paramDto
	 * @return
	 * @throws DataAccessException
	 * @exception
	 * @date 2015. 6. 22. 오후 4:26:25
	 * @author SEOKBAE
	 * @see com.ssocio.sharing.admin.dao
	 * @비고
	 *
	 * </pre>
	 */
	public AdminSession setLogin(Map<String, Object> inParam) throws DataAccessException {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("setLogin Start");
		return (AdminSession)sqlSession.selectOne("adminCommonMapper.setLogin", inParam);
	}


	/**
	 * <pre>
	 * 로그인실패횟수 증가
	 * 로그인실패시 실패횟수를 증가시킵니다.
	 * @param inParam
	 * @throws Exception
	 * @date 2015. 7. 21. 오전 11:00:11
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public void updateLoginFailCnt(Map<String, Object> inParam) throws Exception {
		logger.info("updateLoginFailCnt Start");
		sqlSession.update("adminCommonMapper.updateLoginFailCnt", inParam);
	}

	public List<Map<String, Object>> selectListMenu(Map<String, Object> inParam) throws Exception {
		// // ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListMenu Start");
		List<Map<String, Object>> list = null;
		try {
			list = sqlSession.selectList("adminCommonMapper.selectListMenu", inParam);
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	/**
	 * <pre>
	 * 파일정보 등록
	 * 파일정보를 테이블에 등록한다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 13. 오전 10:02:11
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public String insertFile(Map<String, Object> paramDto) throws Exception {
		logger.info("insertFile Start");

		sqlSession.insert("adminCommonMapper.insertFile", paramDto);

		logger.debug(">>>>>FILE_SEQ : " + paramDto.get("FILE_SEQ").toString());
		//파일SEQ를 넘김
		return StringUtil.nvl(paramDto.get("FILE_SEQ").toString());
	}


	/**
	 * <pre>
	 * 파일정보 조회
	 * 파일정보를 조회합니다.
	 * @param fileSeq
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 16. 오후 5:20:56
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object> selectFileInfo(String fileSeq) throws Exception {
		logger.debug("selectFileInfo Start");
		return sqlSession.selectOne("adminCommonMapper.selectFileInfo", fileSeq);
	}

	/**
	 * <pre>
	 * 파일정보 삭제
	 * 파일정보를삭제합니다.
	 * @param fileSeq
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 18. 오후 5:20:56
	 * @author E.B.Cho
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public void deleteFile(String fileSeq) throws Exception{
		logger.info("deleteFile Start");
		sqlSession.delete("adminCommonMapper.deleteFile", fileSeq);
	}

	public String selectShareUrl() throws Exception{
		return sqlSession.selectOne("adminCommonMapper.selectShareUrl");
	}
}
