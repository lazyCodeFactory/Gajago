package com.ssocio.sharing.service.admin;

import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.ui.ModelMap;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.dao.admin.AdminMenuDao;

/**
 * <pre>
 * 설정 메뉴 서비스
 * 메뉴 처리를 위한 서비스
 * @author S.B.LEE
 * @version
 * @since 2015. 7. 8. 오후 1:55:57
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 8.	|	S.B.LEE	|신규
 * @비고
 * </pre>
 */
@Service
public class AdminMenuServiceImpl extends AdminReferServiceImpl implements AdminMenuService {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminMenuServiceImpl.class);

	// --------------------------------------------------------------------------
	// # DAO 설정
	// --------------------------------------------------------------------------
	@Resource(name="adminMenuDao")
	private AdminMenuDao adminMenuDao;
		
	/**
	 * <pre>
	 * 메뉴 리스트 조회
	 * 메뉴 리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 8. 오후 1:54:46
	 * @author SEOKBAE
	 * @see @see com.ssocio.sharing.service.admin.AdminMenuService#selectListMenu(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public ModelMap selectListMenu(Map<String, Object> inParam) throws Exception {
		logger.debug("AdminMenuServiceImpl.selectListMenu [Start]");
		ModelMap mm = new ModelMap();
		try {
			mm.put("selectListMenu",adminMenuDao.selectListMenu(inParam));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mm;
	}
	
	/**
	 * <pre>
	 * 하위 메뉴 리스트 조회
	 * 메뉴를 리스트를 조회합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 8. 오후 4:35:15
	 * @author SEOKBAE
	 * @see @see com.ssocio.sharing.service.admin.AdminMenuService#selectListSubMenu(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public ModelMap selectListSubMenu(Map<String, Object> inParam) throws Exception {
		logger.debug("AdminMenuServiceImpl.selectListSubMenu [Start]");
		ModelMap mm = new ModelMap();
		try {
			mm.put("selectListSubMenu",adminMenuDao.selectListSubMenu(inParam));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mm;
	}
	
	/**
	 * <pre>
	 * 메뉴 추가
	 * 메뉴를 추가 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 8. 오후 4:34:46
	 * @author SEOKBAE
	 * @see @see com.ssocio.sharing.service.admin.AdminMenuService#insertMenuReg(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public int insertMenuReg(Map<String, Object> inParam) throws Exception {
		logger.debug("AdminMenuServiceImpl.insertHighMenu [Start]");
		int outParam = 0;
		try {
			outParam = adminMenuDao.insertMenuReg(inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 하위메뉴 추가
	 * 하위메뉴를 저장한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 8. 오후 4:52:58
	 * @author SEOKBAE
	 * @see @see com.ssocio.sharing.service.admin.AdminMenuService#insertSubMenuReg(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public int insertSubMenuReg(Map<String, Object> inParam) throws Exception {
		logger.debug("AdminMenuServiceImpl.insertSubMenuReg [Start]");
		int outParam = 0;
		try {
			outParam = adminMenuDao.insertSubMenuReg(inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 메뉴 수정
	 * 메뉴를 수정 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 8. 오후 9:22:54
	 * @author SEOKBAE
	 * @see @see com.ssocio.sharing.service.admin.AdminMenuService#updateMenuReg(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public int updateMenuReg(Map<String, Object> inParam) throws Exception {
		logger.debug("AdminMenuServiceImpl.updateMenuReg [Start]");
		int outParam = 0;
		try {
			outParam = adminMenuDao.updateMenuReg(inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 메뉴 삭제
	 * 메뉴를 삭제합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 8. 오후 10:11:44
	 * @author SEOKBAE
	 * @see @see com.ssocio.sharing.service.admin.AdminMenuService#deleteMenuReg(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public int deleteMenuReg(Map<String, Object> inParam) throws Exception {
		logger.debug("AdminMenuServiceImpl.deleteMenuReg [Start]");
		int outParam = 0;
		try {
			outParam = adminMenuDao.deleteMenuReg(inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 노출여부 수정
	 * 노출여부를 수정 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 8. 오후 10:28:49
	 * @author SEOKBAE
	 * @see @see com.ssocio.sharing.service.admin.AdminMenuService#updateViewYnReg(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public int updateViewYnReg(Map<String, Object> inParam) throws Exception {
		logger.debug("AdminMenuServiceImpl.updateViewYnReg [Start]");
		int outParam = 0;
		try {
			outParam = adminMenuDao.updateViewYnReg(inParam);
			
			//상위메뉴가 N일경우 하위 메뉴 N으로
			if("Y".equals((String)inParam.get("FOR_MENU_YN"))){
				if("N".equals((String)inParam.get("VIEW_YN"))){
					adminMenuDao.updateViewLowYnReg(inParam);
				}
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	@Override
	public int updateSortSeq(String[] arryCode, String[] arrySortSeq) throws Exception {
		logger.debug("AdminMenuServiceImpl.updateSortSeq [Start]");
		int outParam = 0;
		logger.debug("arrySortSeq : " + arrySortSeq.length);
		try {
			for (int i = 0; i < arrySortSeq.length; i++) {
				Map<String, Object> setParam = new HashMap<String,Object>();
				setParam.put("I_SORT", arrySortSeq[i]);
				setParam.put("I_MENU_CD", arryCode[i]);
				LoggerUtil.writeMap(setParam);
				outParam += adminMenuDao.updateSortSeq(setParam);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}

}
