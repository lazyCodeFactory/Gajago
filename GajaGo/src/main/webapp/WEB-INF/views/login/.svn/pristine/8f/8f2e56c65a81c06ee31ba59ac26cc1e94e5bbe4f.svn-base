package com.ssocio.sharing.dao.batch;

import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.web.RspnsCnst;

/**
 * <pre>
 * 설명
 * 설명
 * @author J.K.CHOI
 * @version
 * @since 2015. 7. 17. 오후 7:41:45
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 17.	|	J.K.CHOI	|신규
 * @비고
 * </pre>
 */
@Component
public class BatchMyStatisDao {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(BatchMyStatisDao.class);
	
	/* --------------------------------------------------------------------------
		# sqlSession 설정
		 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
		 -- 하나만 사용할 경우 @Autowired
	   --------------------------------------------------------------------------*/
	
	@Resource(name="sqlSessionMyBatch")
	private SqlSession sqlSessionMyBatch;

	public void setSqlSessionMyBatch(SqlSession sqlSession) {
		this.sqlSessionMyBatch = sqlSession;
	}
	
	/**
	 * 통계
	 * 접속 통계
	 */
	// 최근 저장된 통계 확인
	public String selectBatchStatisAccDateLastDate(String inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("########## selectBatchStatisAccDateLastDate Start ##########");
		String list = null;
		try {
			list =  sqlSessionMyBatch.selectOne("batchMyStatisMapper.selectBatchStatisAccDateLastDate", inParam);
		} catch (Exception e) {
			logger.error("selectBatchStatisAccDateLastDate DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	 }

	// 메뉴별통계일계
	public int insertBatchStatisAccDate(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("########## insertBatchStatisAccDate Start ##########");
		int list = -1;
		try {
			list =  sqlSessionMyBatch.insert("batchMyStatisMapper.insertBatchStatisAccDate", inParam);
		} catch (Exception e) {
			logger.error("insertBatchStatisAccDate DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	// 최근 저장된 통계 확인
		public String selectBatchStatisAccTimeLastDate(String inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("########## selectBatchStatisAccTimeLastDate Start ##########");
			String list = null;
			try {
				list =  sqlSessionMyBatch.selectOne("batchMyStatisMapper.selectBatchStatisAccTimeLastDate", inParam);
			} catch (Exception e) {
				logger.error("selectBatchStatisAccTimeLastDate DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		 }

		// 메뉴별통계일계
		public int insertBatchStatisAccTime(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("########## insertBatchStatisAccTime Start ##########");
			int list = -1;
			try {
				list =  sqlSessionMyBatch.insert("batchMyStatisMapper.insertBatchStatisAccTime", inParam);
			} catch (Exception e) {
				logger.error("insertBatchStatisAccDate DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}
		
		// 최근 저장된 통계 확인
		public String selectBatchStatisAccMenuDateLastDate(String inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("########## selectBatchStatisAccMenuDateLastDate Start ##########");
			String list = null;
			try {
				list =  sqlSessionMyBatch.selectOne("batchMyStatisMapper.selectBatchStatisAccMenuDateLastDate", inParam);
			} catch (Exception e) {
				logger.error("selectBatchStatisAccMenuDateLastDate DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		 }

		// 메뉴별통계일계
		public int insertStatisAccMenuDate(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("########## insertStatisAccMenuDate Start ##########");
			int list = -1;
			try {
				list =  sqlSessionMyBatch.insert("batchMyStatisMapper.insertStatisAccMenuDate", inParam);
			} catch (Exception e) {
				logger.error("insertStatisAccMenuDate DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}
	
	// 최근 저장된 통계 확인
	public String selectBatchStatisAccMenuDateLastTime(String inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("########## selectBatchStatisAccMenuDateLastTime Start ##########");
		String list = null;
		try {
			list =  sqlSessionMyBatch.selectOne("batchMyStatisMapper.selectBatchStatisAccMenuDateLastTime", inParam);
		} catch (Exception e) {
			logger.error("selectBatchStatisAccMenuDateLastTime DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	// 메뉴별통계시계
	public int insertStatisAccMenuTime(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("########## insertStatisAccMenuTime Start ##########");
		int list = -1;
		try {
			list =  sqlSessionMyBatch.insert("batchMyStatisMapper.insertStatisAccMenuTime", inParam);
		} catch (Exception e) {
			logger.error("insertStatisAccMenuTime DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
}
