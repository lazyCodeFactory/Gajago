/**
*	function.js
*/

/**
 * 
 * <pre>
 * 설명 숫자를 3자리 구분해서 콤마 찍어주는 함수.
 * 설명
 * @param value
 * @param init
 * @returns
 * @date 2015. 9. 9. 오전 11:44:07
 * @author WOOK.KIM
 * @see resources/web/js
 * </pre>
 */

function formatNumber(value){
	var len, point, str;  
	  
	value = value + "";  
    point = value.length % 3  
    len = value.length;  

    str = value.substring(0, point);  
    while (point < len) {  
        if (str != "") str += ",";  
        str += value.substring(point, point + 3);  
        point += 3;  
    }  
    return str; 
};

function isNull(value){
	if( value != undefined && value != ''){
		return false;
	}
	
	return true;
}

/**
 * 
 * <pre>
 * 설명 넘버형 변수 초기화
 * 설명
 * @param value
 * @param init
 * @returns
 * @date 2015. 9. 9. 오전 11:44:07
 * @author WOOK.KIM
 * @see resources/web/js
 * </pre>
 */
function nvlInt(value, init){
	var retVal = init;
	if( isNull(value) == false ){
		retVal = parseInt(value);
	}
	
	return retVal;
};

/**
 * Boolean형 변수 초기화
 * <pre>
 * 설명
 * 설명
 * @param value
 * @param init
 * @returns {Boolean}
 * @date 2015. 9. 9. 오전 11:44:38
 * @author WOOK.KIM
 * @see resources/web/js
 * </pre>
 */
function nvlBoolean(value, init){
	var retVal = init;
	if( isNull(value) == false && value == 'Y'){
		retVal = true;
	}
	
	return retVal;	
};

/**
 * 
 * <pre>
 * 설명
 * 설명
 * @param obj : input 객체
 * @param title : 메세지 타이틀
 * @param type : 입력(0), 선택(1)
 * @date 2015. 8. 27. 오후 9:17:20
 * @author WOOK.KIM
 * @see
 * </pre>
 */
function validate(obj, title, type){
	if( obj.val() == ''){
		var txt = "";
		if( type == 0 ){
			txt = title + "을(를) 입력하셔야 합니다." 
		}
		else if( type == 1){
			txt = title + "을(를) 선택하셔야 합니다."
		}
		alert(txt);
		obj.focus();
		return false;
	}
	
	return true;
}

/**
 * 
 * <pre>
 * 설명 Byte수 계산하는 메소드
 * 설명
 * @param txt
 * @date 2015. 8. 27. 오후 9:37:26
 * @author WOOK.KIM
 * @see
 * </pre>
 */
function getBytesLength(txt){
	var cnt = 0;
	for( var i=0 ; i<txt.length ; i++){
		cnt += (txt.charCodeAt(i) > 128) ? 2 : 1;
	}
	
	return cnt;
}

/**
 * 
 * <pre>
 * 설명 숫자이외의 문자가 들어오는지 체크
 * 설명 숫자부분까지만 체크해서 문자열 리턴
 * @param txt
 * @date 2015. 8. 27. 오후 9:37:26
 * @author WOOK.KIM
 * @see
 * </pre>
 */
function isNumeric(txt){
	var ret = '';
	for( var i=0 ; i<txt.length ; i++){
		if(txt.charCodeAt(i) < 48 || txt.charCodeAt(i) > 57 ){
			alert("숫자만 입력할 수 있습니다.");
			break;
		}
		else{
			ret += txt.charCodeAt(i) - 48;
		}
	}
	
	return ret;
}

/**
 * 
 * <pre>
 * 설명 user agent 체크
 * 설명 
 * @param isApp
 * @return 10:android , 20:ios, 30:mobile, 40:pc
 * @date 2015. 8. 27. 오후 9:37:26
 * @author WOOK.KIM
 * @see
 * </pre>
 */
function getRemoteChannel(isApp){
	
	if(isApp){
		if( navigator.userAgent.match('iPhone') || navigator.userAgent.match('iPod')){
			return 20;
		}
		else{
			return 10;
		}
	}
	else{
		if( navigator.userAgent.match('iPhone') 
			|| navigator.userAgent.match('iPod')
			|| navigator.userAgent.match('Android')){
			return 30;
		}
		else{
			return 40;
		}
	}
}


function timeGap(val) {
	
	var rtnGap;
	var curDate = new Date();
	
	var regYear = val.substr(0,4);
	var regMonth = val.substr(5,2);
	var regDay = val.substr(8,2);
	var regHour = val.substr(11,2);
	var regMinute = val.substr(14,2);
	var year = parseInt(curDate.getFullYear(), 10) - parseInt(regYear, 10);
	var month = parseInt(curDate.getMonth()+1, 10) - parseInt(regMonth, 10);	
	var day = parseInt(curDate.getDate(), 10) - parseInt(regDay, 10);
	var hour = parseInt(curDate.getHours(), 10) - parseInt(regHour, 10);
	var minute = parseInt(curDate.getMinutes(), 10) - parseInt(regMinute, 10);
	
	if( year == 0 ){//	같은 년
		if( month == 0){//	같은 달
			if( day == 0 ){	// 같은 날
				if( hour == 0 ){ // 같은 시간
					if(minute == 0){ // 같은 분
						rtnGap = "1분이내";
					}
					else{
						rtnGap = minute + "분전";
					}
				}
				else{
					if( minute < 0){
						if( hour == 1 ){
							rtnGap = (minute + 60) + "분전";
						}
						else{
							rtnGap = (hour-1) + "시간전";
						}
					}
					else{
						rtnGap = hour + "시간전";
					}
				}//	시간
			}
			else{
				if( hour < 0 ){
					if( day == 1){
						rtnGap = (hour + 24) + "시간전";
					}
					else{
						rtnGap = (day - 1) + "일전";
					}
				}
				else{
					rtnGap = day + "일전";
				}
			}//	날
		}
		else{
			if( day < 0 ){
				if( month == 1){
					rtnGap = (day + 30) + "일전";
				}
				else{
					rtnGap = (month - 1) + "개월전";
				}
			}
			else{
				rtnGap = month + "개월전";
			}
		}//	월
	}
	else{
		if(month < 0 ){
			if( year == 1){
				rtnGap = (month + 12) + "개월전";
			}
			else{
				rtnGap = (year - 1) + "년전";
			}
		}
		else{
			rtnGap = year + "년전";
		}
	}
	
	return rtnGap;
	
}

function isAdult(birth, age){
	var sy = parseInt(birth.substring(0, 4));
	var sm = parseInt(birth.substring(4, 6));
	var sd = parseInt(birth.substring(6, 8));
	
	var date = new Date();
	var cy = date.getFullYear();
	var cm = date.getMonth() + 1;
	var cd = date.getDate();
	
	console.log(sy + " : " + sm + " : " + sd);
	console.log(cy + " : " + cm + " : " + cd);
	
	var ty = cy - sy;
	var tm = cm - sm;
	var td = cd - sd;
	
	if( ty < age) return false;
	if( ty > age) return true;

	if( tm > 0 ) return true;
	if( tm < 0 ) return false;
	
	if( td >= 0 ) return true;

	return false;
}

function checkNumber(evt){
	var code = evt.which?evt.which:event.keyCode;
	if(code < 48 || code > 57){
		evt.returnValue = false;
	}
}

// 미니샵 경로 체크
function checkMiniShopPath (str) {
	var pattern = /^[0-9A-Za-z,:,/,.,-]*$/;
	if (!pattern.test(str)) {
		return false;
	}
	return true;
}