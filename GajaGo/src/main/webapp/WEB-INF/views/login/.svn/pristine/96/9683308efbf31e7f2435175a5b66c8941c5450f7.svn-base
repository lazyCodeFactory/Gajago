package com.ssocio.sharing.dao.admin;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.web.RspnsCnst;

/**
 * <pre>
 * 스마트폰 매입 가격 관리
 * 스마트폰 매입 가격 관리를 위한 DAO
 * @author S.B.LEE
 * @version
 * @since 2015. 7. 10. 오후 2:52:56
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 10.	|	S.B.LEE	|신규
 * @비고
 * </pre>
 */
@Component
public class AdminPurcDao {
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminPurcDao.class);
	
	// --------------------------------------------------------------------------
	// # sqlSession 설정
	//	 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
	//	 -- 하나만 사용할 경우 @Autowired
	// --------------------------------------------------------------------------
	@Resource(name="sqlSessionAdmin")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	/**
	 * <pre>
	 * 스마트폰 매입 가격 관리
	 * 스마트폰 매입 가격 관리 리스트 목록을 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 10. 오후 2:53:41
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectListPurc(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListPurc Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminPurcMapper.selectListPurc", inParam);
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	/**
	 * <pre>
	 * 스마트폰 매입 가격 관리
	 * 스마트폰 매입 가격 관리 리스트 목록 카운트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 10. 오후 4:25:27
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int selectListPurcCount(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListPurcCount Start");
		int count = 0;
		try {
			count =  sqlSession.selectOne("adminPurcMapper.selectListPurcCount", inParam);
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return count;
	}
}
