package com.ssocio.sharing.service.admin;

import java.util.Map;

import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.ui.ModelMap;

/**
 * <pre>
 * 스마트폰 쉐어링 주문관리를 위한 인터페이스
 * 스마트폰 쉐어링 주문관리를 위한 인터페이스
 * @author J.S.LEE
 * @version
 * @since 2015. 7. 21. 오후 7:18:30
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 21.	|	S.B.LEE	|신규
 * @비고
 * </pre>
 */
public interface AdminSharingOrderService {

	/**
	 * <pre>
	 * 
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 22. 오전 10:32:57
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.service.admin
	 * @비고
	 * 
	 * </pre>
	*/
	public Object selectListOrderProd(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 교환/반품 리스트 가져오기 
	 * 교환/반품 리스트 가져오기 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 23. 오후 2:25:07
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.service.admin
	 * @비고
	 * 
	 * </pre>
	*/
	public Object selectListChgProd(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 해지신청 리스트 가져오기 
	 * 해지신청 리스트 가져오기 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 23. 오후 5:21:40
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.service.admin
	 * @비고
	 * 
	 * </pre>
	*/
	public Object selectListTermiProd(Map<String, Object> inParam) throws Exception;

	public Object selectOrderDtl(Map<String, Object> inParam)throws Exception;

	public Object selectWaitProdCnt(Map<String, Object> inParam) throws Exception;

	public ModelMap searchUniqueNo(Map<String, Object> inParam) throws Exception;
	
	
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public Object insertOrderTbReg(Map<String, Object> inParam)  throws Exception;

	public ModelMap selectDlvAndOpeninfo(Map<String, Object> inParam) throws Exception;

	public ModelMap selectChgDtlinfo(Map<String, Object> inParam) throws Exception;
	
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public ModelMap updateRftnInfoReg(Map<String, Object> inParam) throws Exception;

	public Object getOrderListExcelDownload(Map<String, Object> inParam)throws Exception;

	public Object ChgOrderexcelDownload(Map<String, Object> inParam)throws Exception;

	public Object selectListCancelProd(Map<String, Object> inParam)throws Exception;
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public ModelMap insertCancelreg(Map<String, Object> inParam)throws Exception;

	public Object selectTermiDtl(Map<String, Object> inParam)throws Exception;
	
	public Object updateTermiInfo(Map<String, Object> inParam)throws Exception;

	public Object getTermiOrderListExcelDownload(Map<String, Object> inParam) throws Exception;

	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public int updateOrdMemoReg(Map<String, Object> inParam)throws Exception;

	/**
	 * <pre>
	 * 결제 내역 조회 
	 * 결제 내역 조회 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 12. 18
	 * @author Y.S.KIM
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public ModelMap selectListSharPay(Map<String, Object> inParam)throws Exception;
	
	/**
	 * <pre>
	 * 결제 내역 조회 
	 * 결제 내역 조회 히스토리
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 12. 21
	 * @author Y.S.KIM
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public ModelMap selectListSharPayHist(Map<String, Object> inParam)throws Exception;
	
	/**
	 * <pre>
	 * 결제 내역 조회 
	 * 결제 내역 조회 엑셀다운로드
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 12. 21
	 * @author Y.S.KIM
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public Object selectListSharPayExcelDownload(Map<String, Object> inParam)throws Exception;

	public Map<String,Object> searchDlvInfo(Map<String, Object> inParam) throws Exception;

	public Object selectUserPayPopup(Map<String, Object> inParam)throws Exception;




}
