package com.ssocio.sharing.dao.admin;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.springframework.ui.ModelMap;

import com.ssocio.sharing.cmmn.web.RspnsCnst;

@Component
public class AdminMenuDao {
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminMenuDao.class);
	
	// --------------------------------------------------------------------------
	// # sqlSession 설정
	//	 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
	//	 -- 하나만 사용할 경우 @Autowired
	// --------------------------------------------------------------------------
	@Resource(name="sqlSessionAdmin")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}

	/**
	 * <pre>
	 * 메뉴 리스트 조회
	 * 대메뉴 리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 3:38:04
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectListMenu(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListMenu Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminMenuMapper.selectListMenu", inParam);
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	/**
	 * <pre>
	 * 하위메뉴 리스트 조회
	 * 메뉴 리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:36:27
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectListSubMenu(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListSubMenu Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminMenuMapper.selectListSubMenu", inParam);
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	/**
	 * <pre>
	 * 대메뉴 추가
	 * 대메뉴를 추가 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 3:38:34
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int insertMenuReg(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("adminMenuMapper.insertMenuReg Start");
		int outParam = 0;
		try {
			outParam =  sqlSession.insert("adminMenuMapper.insertMenuReg", inParam);
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 하위메뉴 추가
	 * 하위메뉴를 추가 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:54:11
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int insertSubMenuReg(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("adminMenuMapper.insertSubMenuReg Start");
		int outParam = 0;
		try {
			outParam =  sqlSession.insert("adminMenuMapper.insertSubMenuReg", inParam);
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 메뉴 수정
	 * 메뉴를 수정 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 9:24:40
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int updateMenuReg(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("adminMenuMapper.updateMenuReg Start");
		int outParam = 0;
		try {
			outParam =  sqlSession.update("adminMenuMapper.updateMenuReg", inParam);
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 메뉴삭제
	 * 메뉴를 삭제 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 10:13:47
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int deleteMenuReg(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("adminMenuMapper.deleteMenuReg Start");
		int outParam = 0;
		try {
			String mode = (String)inParam.get("MODE");
			if ("main".equals(mode)){
				outParam =  sqlSession.delete("adminMenuMapper.deleteMainMenuReg", inParam);
			} else {
				outParam =  sqlSession.delete("adminMenuMapper.deleteSubMenuReg", inParam);
			}
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 노출여부 수정
	 * 노출여부를 수정 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 10:29:52
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int updateViewYnReg(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("adminMenuMapper.updateViewYnReg Start");
		int outParam = 0;
		try {
			outParam =  sqlSession.update("adminMenuMapper.updateViewYnReg", inParam);
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	public int updateViewLowYnReg(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("adminMenuMapper.updateViewLowYnReg Start");
		int outParam = 0;
		try {
			outParam =  sqlSession.update("adminMenuMapper.updateViewLowYnReg", inParam);
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	
	/**
	 * <pre>
	 * 정렬순서 수정
	 * 정렬순서를 수정 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 10:49:22
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int updateSortSeq(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("adminMenuMapper.updateSortSeq Start");
		int outParam = 0;
		try {
			outParam =  sqlSession.update("adminMenuMapper.updateSortSeq", inParam);
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
}
