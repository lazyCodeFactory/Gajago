package com.ssocio.sharing.dao.admin;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.web.RspnsCnst;


@Component
public class AdminSmsDao {
	// --------------------------------------------------------------------------
		// # Log 설정
		// --------------------------------------------------------------------------
		private static final Logger logger = LoggerFactory.getLogger(AdminSmsDao.class);
		
		// --------------------------------------------------------------------------
		// # sqlSession 설정
		//	 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
		//	 -- 하나만 사용할 경우 @Autowired
		// --------------------------------------------------------------------------
		@Resource(name="sqlSessionAdmin")
		private SqlSession sqlSession;

		public void setSqlSession(SqlSession sqlSession) {
			this.sqlSession = sqlSession;
		}

		public List<Map<String, Object>> selectListSms(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListSms Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSmsMapper.selectListSms",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}
		
		public int selectListSmsCount(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListSmsCount Start");
			int count = 0;
			try {
				count =  sqlSession.selectOne("adminSmsMapper.selectListSmsCount", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return count;
		}
		
		public Map<String, Object> selectSms(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectSms Start");
			Map<String, Object> obj = null;
			try {
				obj =  sqlSession.selectOne("adminSmsMapper.selectSms",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return obj;
		}
		
		public List<Map<String, Object>> selectListSmsMberSearch(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListSmsMberSearch Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSmsMapper.selectListSmsMberSearch",paramDto);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}
		
		public List<Map<String, Object>> selectListSmsMber(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListSmsMber Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSmsMapper.selectListSmsMber",paramDto);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}
		
		public int selectListSmsMberCnt(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListSmsMberCnt Start");
			int obj = 0;
			try {
				obj =  sqlSession.selectOne("adminSmsMapper.selectListSmsMberCnt",paramDto);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return obj;
		}
		
		public int selectListSmsMberCount(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListSmsMberCount Start");
			int obj = 0;
			try {
				obj =  sqlSession.selectOne("adminSmsMapper.selectListSmsMberCount",paramDto);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return obj;
		}
		
		public int insertSms(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("insertSms Start");
			int ret = 0;
			try {
				if("N".equals(paramDto.get("RESRV_YN"))){
					ret =  sqlSession.insert("adminSmsMapper.insertSms1",paramDto);
				}else{
					ret =  sqlSession.insert("adminSmsMapper.insertSms",paramDto);
				}
				
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return ret;
		}
		
		public int insertSmsNone(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("insertSmsNone Start");
			int ret = 0;
			try {
					ret =  sqlSession.insert("adminSmsMapper.insertSmsNone",paramDto);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return ret;
		}
		
		public int insertSmsMber(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("insertSmsMber Start");
			int ret = 0;
			try {
				ret =  sqlSession.insert("adminSmsMapper.insertSmsMber",paramDto);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return ret;
		}
		
		public int insertSmsMber2(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("insertSmsMber2 Start");
			int ret = 0;
			try {
				ret =  sqlSession.insert("adminSmsMapper.insertSmsMber2",paramDto);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return ret;
		}
		
		public int updateSms(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("updateSms Start");
			int ret = 0;
			try {
				ret =  sqlSession.update("adminSmsMapper.updateSms",paramDto);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return ret;
		}
		
		public int updateSmsGrp(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("updateSmsGrp Start");
			int ret = 0;
			try {
				ret =  sqlSession.update("adminSmsMapper.updateSmsGrp",paramDto);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return ret;
		}
}
