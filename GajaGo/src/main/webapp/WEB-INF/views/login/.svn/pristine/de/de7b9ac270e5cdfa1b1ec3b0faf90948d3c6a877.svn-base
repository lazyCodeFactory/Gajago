package com.ssocio.sharing.controller.mobile;

import java.net.URLEncoder;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.service.web.MobileInterestService;
import com.ssocio.sharing.vo.web.WebSession;

@Controller
public class MobileInterestController {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	@SuppressWarnings("unused")
	private static final Logger logger = LoggerFactory.getLogger(MobileMainController.class);
	
	@Autowired
	private MobileInterestService mobileInterestService;
	
	// 관심상품 리스트   
//	@RequestMapping("/mobile/wish/InterestProd.do")
//	public ModelAndView interRestProd(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
//		ModelAndView mav = new ModelAndView("web/wish/wishList");
//		try {
//			// 세션받기
//			WebSession user = (WebSession)request.getSession().getAttribute("user");
//			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
//			inParam.put("MBER_SEQ", user.getMBER_SEQ());
//			
//			// 관심상품 리스트 
//			mav.addObject("result", mobileInterestService.selectInterest(request, inParam));
//			
//			// 관심태그 조회
//			mav.addObject("tagResult", mobileInterestService.wishProdList(request, inParam));
//			
//			mav.addObject("params", inParam);
//			mav.setViewName("web/wish/wishList");
//		} catch (Exception e) {
//			e.printStackTrace();
//		}
//		return mav;  
//	}
	
	// 관심상품 리스트   
	@RequestMapping("/mobile/wish/InterestProd.do")
	public ModelAndView interRestProd(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView("web/wish/wishList");
		try {
			if(request.getSession().getAttribute("user")==null){
				String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
				return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
			}
			// 세션받기
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			inParam.put("MBER_SEQ", user.getMBER_SEQ());
			
			// 관심상품 리스트 
			mav.addObject("result", mobileInterestService.selectInterestList(inParam, user));
			
			// 관심태그 조회
			mav.addObject("tagResult", mobileInterestService.wishProdList(request, inParam));
			
			mav.addObject("params", inParam);
			mav.setViewName("web/wish/wishList");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;  
	}
	
	/**
	 * 관심상품 리스트  (페이징)
	 */
	@RequestMapping("/mobile/wish/InterestProdPage.do")
	public ModelAndView InterestProdPage(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		if(request.getSession().getAttribute("user")==null){
			String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
			return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
		}
		ModelAndView mav = new ModelAndView("jsonView");
		LoggerUtil.writeMap(inParam);
		logger.debug("### GUBUN		:"+inParam.get("GUBUN"));
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			logger.debug("### MBER_NM		:"+user.getMBER_NM());
			inParam.put("MBER_SEQ", user.getMBER_SEQ());
			mav.addObject("result", mobileInterestService.selectInterestList(inParam, user));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	// 관심상품 태그로 조회
//	@RequestMapping("/mobile/wish/tagNameSelectProd.do")
//	public ModelAndView tagSelectProd(HttpServletRequest request, @RequestParam Map<String, Object> inParam) throws Exception{
//		ModelAndView mav = new ModelAndView();
//		try {
//			LoggerUtil.writeMap(inParam);
//			
//			// 등록되어 있는 태그로 상품조회
//			mav.addObject("result", mobileInterestService.tagSelectProd(request, inParam));
//			mav.setViewName("jsonView");
//		} catch (Exception e) {
//			e.printStackTrace();
//		}
//		return mav;
//	}
	
	@RequestMapping("/mobile/wish/tagNameSelectProd.do")
	public ModelAndView tagSelectProd(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView();
		try {
			logger.debug("aaaaaaaaaaaaaaa ");
			LoggerUtil.writeMap(inParam);
			if(request.getSession().getAttribute("user")==null){
				String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
				return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
			}
			// 세션받기
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			inParam.put("MBER_SEQ", user.getMBER_SEQ());
			// 등록되어 있는 태그로 상품조회
			mav.addObject("result", mobileInterestService.tagSelectProdList(inParam, user));
			mav.addObject("params", inParam);
//			mav.setViewName("web/wish/wishList");
			mav.setViewName("jsonView");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * 관심상품 태그로 조회(페이징)
	 */
	@RequestMapping("/mobile/wish/tagNameSelectProdPage.do")
	public ModelAndView tagSelectProdPage(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		if(request.getSession().getAttribute("user")==null){
			String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
			return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
		}
		ModelAndView mav = new ModelAndView("jsonView");
		LoggerUtil.writeMap(inParam);
		logger.debug("### GUBUN		:"+inParam.get("GUBUN"));
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			logger.debug("### MBER_NM		:"+user.getMBER_NM());
			inParam.put("MBER_SEQ", user.getMBER_SEQ());
			mav.addObject("result", mobileInterestService.tagSelectProdList(inParam, user));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	// 관심태그 조회
	@RequestMapping("/mobile/wish/wishTagList.do")
	public ModelAndView wishTagList(HttpServletRequest request, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView("web/wish/wishTag");
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			inParam.put("MBER_SEQ", user.getMBER_SEQ());
			System.out.println("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@#!@#" + inParam.get("MBER_SEQ"));
			mav.addObject("result", mobileInterestService.wishProdList(request, inParam));
			mav.setViewName("web/wish/wishTag");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}  
	
	// 관심태그 등록
	@RequestMapping("/mobile/wish/wishTag.do")
	public ModelAndView setWish(HttpServletRequest request, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView("redirect:/mobile/wish/wishTagList.do");
		mav.addObject("result", mobileInterestService.setWishProd(request, inParam));
		return mav;
	}
	
	// 태그삭제
	/*
	@RequestMapping("/mobile/wish/delWishTag.do") 
	public ModelAndView delWish(HttpServletRequest request, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView("web/wish/wishTag");
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			inParam.put("MBER_SEQ", user.getMBER_SEQ());
			
			LoggerUtil.writeMap(inParam);
			
			mav.addObject("result", mobileInterestService.delTagWish(request, inParam));
		} catch (Exception e) {
			e.printStackTrace();
		}
	
		return mav;
	}
	*/
	
	@RequestMapping("/mobile/wish/delWishTag.do")
	public ModelAndView delWish(HttpServletRequest request, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView();
		try {
			LoggerUtil.writeMap(inParam);
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			inParam.put("MBER_SEQ", user.getMBER_SEQ());
			// 등록되어 있는 태그로 상품조회
			mav.addObject("result", mobileInterestService.delTagWish2(request, inParam));
			mav.setViewName("jsonView");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
}
















