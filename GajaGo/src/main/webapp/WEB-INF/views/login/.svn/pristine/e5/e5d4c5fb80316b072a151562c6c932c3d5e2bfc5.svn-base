package com.ssocio.sharing.controller.seller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.service.seller.SellerCtryService;

/**
 * <pre>
 * 카테고리 콘트롤러
 * 카테고리 콘트롤러
 * @author Y.I.Chun
 * @version
 * @since 2015. 7. 8. 오후 5:50:30
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 8.	|	Y.I.Chun	|신규
 * @비고
 * </pre>
 */
@Controller
public class SellerCtryController {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(SellerCtryController.class);
	
	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private SellerCtryService sellerCtryService;
	
	@RequestMapping("/seller/prodMgr/procCtryMain.do")
	public ModelAndView procCtryMain(@RequestParam Map<String, Object> paramDto) throws Exception	{
		ModelAndView mav = new ModelAndView();
		try {
			mav.setViewName("seller/prodMgr/categoryList");
		} catch (Exception e) {e.printStackTrace();}
			
		return mav;
	}
	
	/**
	 * <pre>
	 * 카테고리트리정보 조회
	 * 카테고리트리정보를 조회합니다.
	 * @param request
	 * @param response
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 4:46:00
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/seller/prodMgr/selectCtryTree.do")
	public ModelAndView selectCtryTree(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> paramDto) throws Exception	{
		ModelAndView mav = new ModelAndView("jsonView");
		
		try {
			mav.addObject("ctryTreeInfo", sellerCtryService.selectCtryTree().get("ctryTreeInfo"));
			
		} catch (Exception e) {
			e.printStackTrace();
		}
			
		return mav;
	}
	
	/**
	 * <pre>
	 * 카테고리정보 조회
	 * 카테고리정보를 조회합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 5:50:55
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/seller/prodMgr/selectCtryInfo.do")
	public ModelAndView selectCtryInfo(@RequestParam Map<String, Object> paramDto) throws Exception	{
		ModelAndView mav = new ModelAndView("jsonView");
		
		try {
			mav.addObject("ctryInfo", sellerCtryService.selectCtryInfo(paramDto).get("ctryInfo"));
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * <pre>
	 * 카테고리정보 수정
	 * 카테고리정보를 수정한다.
	 * @param req
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 8:08:47
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/seller/prodMgr/updateCtryInfo.do")
	public ModelAndView updateCtryInfo(MultipartHttpServletRequest req, @RequestParam Map<String, Object> paramDto) throws Exception	{
		ModelAndView mav = new ModelAndView();
		try {
			//카테고리정보수정
			sellerCtryService.updateCtryInfo(req, paramDto);
			
			mav.setViewName("jsonView");
		} catch (Exception e) {
			e.printStackTrace();
		}
			
		return mav;
	}
	
	/**
	 * <pre>
	 * 카테고리정렬순서 수정
	 * 카테고리정렬순서를 수정한다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 8:08:47
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/seller/prodMgr/updateCtrySort.do")
	public ModelAndView updateCtrySort(@RequestParam Map<String, Object> paramDto) throws Exception	{
		ModelAndView mav = new ModelAndView();
		try {
			//카테고리정보수정
			sellerCtryService.updateCtrySort(paramDto);
			
			mav.setViewName("jsonView");
		} catch (Exception e) {
			e.printStackTrace();
		}
			
		return mav;
	}
	
	/**
	 * <pre>
	 * 카테고리정보 삭제
	 * 카테고리정보를 삭제한다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 8:08:47
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/seller/prodMgr/deleteCtryInfo.do")
	public ModelAndView deleteCtryInfo(@RequestParam Map<String, Object> paramDto) throws Exception	{
		ModelAndView mav = new ModelAndView();
		try {
			//카테고리정보수정
			sellerCtryService.deleteCtryInfo(paramDto);
			mav = procCtryMain(paramDto);
		} catch (Exception e) {
			e.printStackTrace();
		}
			
		return mav;
	}
	
	/**
	 * <pre>
	 * 카테고리정보 등록
	 * 카테고리정보를 등록한다.
	 * @param req
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 8:08:47
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/seller/prodMgr/insertCtryInfo.do")
	public ModelAndView insertCtryInfo(MultipartHttpServletRequest req, @RequestParam Map<String, Object> paramDto) throws Exception	{
		ModelAndView mav = new ModelAndView();
		try {
			//카테고리정보수정
			sellerCtryService.insertCtryInfo(req, paramDto);
			mav = procCtryMain(paramDto);
		} catch (Exception e) {
			e.printStackTrace();
		}
			
		return mav;
	}
	
	/**
	 * <pre>
	 * 대중소 분류별 카테고리 리스트정보 조회
	 * 대중소 분류별 카테고리 리스트정보를 조회합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 5:50:55
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/seller/prodMgr/selectCtryList.do")
	public ModelAndView selectCtryList(@RequestParam Map<String, Object> paramDto) throws Exception	{
		ModelAndView mav = new ModelAndView("jsonView");
		try {
			mav.addObject("ctryList", sellerCtryService.selectCtryList(paramDto).get("ctryList"));
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
}
