package com.ssocio.sharing.controller.seller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.service.seller.SellerOrderService;
import com.ssocio.sharing.service.seller.SellerProdService;
import com.ssocio.sharing.service.seller.SellerQAAdviceService;
import com.ssocio.sharing.vo.seller.SellerSession;

/**
 * <pre>
 * 콩통 컨트롤러
 * 콩통 처리를 위한 컨트롤러
 * @author J.K.CHOI
 * @version
 * @since 	2015. 7. 21. 오후 7:18:35
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 21.	|	J.K.CHOI	|신규
 * @비고
 * </pre>
 */
@Controller
public class SellerQAAdviceController {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(SellerQAAdviceController.class);
	
	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private SellerQAAdviceService sellerQAAdviceService;
	
	@Autowired
	private SellerProdService sellerProdService;
	
	@Autowired
	private SellerOrderService sellerOrderService;
	
	
	
	/**
	 * <pre>
	 * 수정화면 이동
	 * 
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 21. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/seller/qaadvice/updateQAAdvice.do")
	public ModelAndView updateQAAdvice(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("QA UPDATE VIEW START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		try {
			SellerSession session = (SellerSession) request.getSession().getAttribute("sellerManager");
			inParam.put("MBER_SEQ", session.getMBER_SEQ());
			String url= "seller/qaadvice/insertQAAdvice";											//상담관리
			if(!inParam.get("BOARD_TYPE_CD").equals("30")) url = "seller/qaadvice/updateQAAdvice";	//서비스,상품 관리
			
			mav.addObject("IU", "U");																				//등록(I) or 수정(U) FLAG
			mav.addObject("selectQAAdvice", sellerQAAdviceService.selectQAAdvice(inParam).get("selectQAAdvice"));	
			mav.addObject("params", inParam);
			mav.setViewName(url);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	
	/**
	 * <pre>
	 * 상담관리 리스트 조회
	 * 상담관리 리스트 조회
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 21. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	/*@RequestMapping("/seller/qaadvice/selectListQAAdvice.do")
	public ModelAndView selectListQAAdvice(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("QA LIST START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		  
		try {
			mav.addObject("list", sellerQAAdviceService.selectListQAAdvice(inParam));
			mav.addObject("params", inParam);
			mav.setViewName("seller/qaadvice/selectListQAAdvice");
		} catch (Exception e) {
			e.printStackTrace();  
		}
		return mav;
	}*/
	
	/**
	 * <pre>
	 * 등록화면 이동
	 * 
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 21. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	/*@RequestMapping("/seller/qaadvice/insertQAAdvice.do")
	public ModelAndView insertQAAdvice(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("QA INSERT VIEW START");
		logger.info("★☆★☆★☆★ ☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		try {
			mav.addObject("flg", "N");			// 상품문의(Y)/1:1문의 구분자(N)																//등록(I) or 수정(U) FLAG
			mav.addObject("selectQAAdvice", sellerQAAdviceService.selectQAAdvice(inParam).get("selectQAAdvice"));	
			mav.addObject("params", inParam);
			mav.setViewName("seller/qaadvice/insertQAAdvice");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}*/
	
	/**
	 * <pre>
	 * 상세화면 이동
	 * 
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 21. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/seller/qaadvice/boardDtlQAAdvice.do")
	public ModelAndView boardDtlQAAdvice(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		LoggerUtil.writeMap(inParam);
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		
		ModelAndView mav = new ModelAndView();
		try {   
			String url= "seller/qaadvice/prodQAAdviceDtl";	//상품관리
			if(inParam.get("BOARD_TYPE_CD").equals("40")){
				url = "seller/qaadvice/inquiryDtl";		//1:1 문의
			}  
			mav.addObject("selectQAAdvice", sellerQAAdviceService.selectQAAdvice(inParam).get("selectQAAdvice"));	
			mav.addObject("params", inParam);
			mav.setViewName(url);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * <pre>
	 * 1:1문의 등록
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 21. 오후 3:18:21
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/seller/qaadvice/insertQAAdviceReg.do")
	public ModelAndView insertQAAdviceReg(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("QA INSERT REG START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView("jsonView");
		
		try {
				// chk가 존재하면 1:1문의 등록
			if( inParam.get("chk") != null ){
				mav.setViewName("seller/qaadvice/inquiryAdd");
				mav.addObject("BOARD_TYPE_CD", inParam.get("BOARD_TYPE_CD"));
			}else{
				// chk가 존재하지 않다면 1:1문의 등록
				sellerQAAdviceService.insertQAAdviceReg(inParam, request);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		System.out.println(" @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ " + mav.getViewName());
		return mav;
	}
	
	/**
	 * <pre>
	 * 상담관리 수정
	 * 상담관리 수정
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 21. 오후 3:30:24
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/seller/qaadvice/updateQAAdviceReg.do")
	public ModelAndView updateQAAdviceReg(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("QA UPDATE REG START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView  mav = new ModelAndView("jsonView");
		try {
			
			SellerSession session = (SellerSession) request.getSession().getAttribute("sellerManager");
			inParam.put("FWRITER_ID", session.getMBER_EMAIL());
			inParam.put("FWRITER_NM", StringUtil.nvl(session.getMBER_NM(),session.getMBER_EMAIL()) );
			sellerQAAdviceService.updateQAAdviceReg(inParam, request);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * <pre> 
	 * 상담관리 삭제
	 * 상담관리 삭제
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 21. 오후 3:18:21
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/seller/qaadvice/deleteQAAdvice.do")
	public ModelAndView deleteQAAdvice(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("QA DELETE REG START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView  mav = new ModelAndView("jsonView");
		try {
			sellerQAAdviceService.deleteQAAdvice(inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * 문의관리 (상품문의,1:1문의 조회)
	 */
	@RequestMapping("/seller/qaadvice/selectListInquiry.do")
	public ModelAndView selectListInquiryList(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);  
		String viewName = "seller/qaadvice/selectListQAAdvice";
		SellerSession session = (SellerSession) request.getSession().getAttribute("sellerManager");
		inParam.put("MBER_SEQ", session.getMBER_SEQ());
		
		try {
			// 1:1문의 게시판일 경우
			if(inParam.get("BOARD_TYPE_CD").equals("40")){
				viewName = "seller/qaadvice/inquiryList";
				System.out.println(" *%^*%*^%^*%^*%^*%^*%^*%^*%^*%^*#$*%$#*%#$^*#$*%*#$%*#$%#$*1123123 ");
			}
			
			mav.addObject("list", sellerQAAdviceService.selectListQAAdvice(inParam));				//문의관리 리스트
			mav.addObject("params", inParam); 
			System.out.println(" *%^*%*^%^*%^*%^*%^*%^*%^*%^*%^*#$*%$#*%#$^*#$*%*#$%*#$%#$*2123123 ");
			
			mav.setViewName(viewName);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
}
































