/**<pre>
 * 1. Project Name : LotteCardMall
 * 2. Package Name : com.lottecard.mall.cmmn.dao
 * 3. File Name		: CommonDao.java
 * 4. Date				 : 오후 2:14 2015-01-15
 * 5. Author			 : D.G.Youn
 * 6. Note				 :
 * </pre>
 */
package com.ssocio.sharing.cmmn.dao;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.instance.cmmncode.CmmnCodeDto;
import com.ssocio.sharing.cmmn.web.RspnsCnst;
import com.ssocio.sharing.vo.web.WebSession;

/**
 * <pre>
 * 공통 Dao
 * 공통 처리 Dao
 * @author Administrator
 * @version
 * @since 2015. 2. 12. 오후 5:18:43
 * @see
 * @History
 *  Date          |    author    | 변경내용
 *	2015. 2. 12.  |    D.G.Youn  | 신규
 * @Todo
 * </pre>
 */
@Component
public class CommonDao {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(CommonDao.class);

	// --------------------------------------------------------------------------
	// # sqlSession 설정
	//	 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
	//	 -- 하나만 사용할 경우 @Autowired
	// --------------------------------------------------------------------------
	@Resource(name="sqlSessionCmmn")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}

	/**
	 * <pre>
	 * 공통코드전체리스트조회
	 * 공통코드전체리스트조회룰 한다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 2. 12. 오후 7:52:58
	 * @author Administrator
	 * @비고
	 *
	 * </pre>
	 */
	public List<CmmnCodeDto> getComCdAllList(Map<String, Object> inParam) throws Exception {

		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("getComCdAllList Start");

		try {
			return sqlSession.selectList("commonMapper.getComCdAllList", inParam);
		} catch (Exception e) {
			logger.error("getComCdAllList DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	/**
	 * <pre>
	 * 회원 여부 조회
	 *
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 1. 오전 11:11:49
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.cmmn.dao
	 * </pre>
	 */
	public int getMberInfo(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("getMberInfo Start");
		int outParam = 0;
		try {
			outParam = sqlSession.selectOne("commonMapper.getMberInfo", inParam);
		} catch (Exception e) {
			logger.error("getMberInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}


	public int getCartCnt(String MBER_SEQ) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("getMberInfo Start");
		int outParam = 0;
		try {
			outParam = sqlSession.selectOne("commonMapper.getCartCnt", MBER_SEQ);
		} catch (Exception e) {
			logger.error("getMberInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}

	/**
	 * <pre>
	 * 장바구니 NEW 표시 여부
	 *
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 25. 오후 9:10:54
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.cmmn.dao
	 * </pre>
	 */
	public String getCartViewYn(int inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("getCartViewYn Start");
		String outParam = "";
		try {
			outParam = sqlSession.selectOne("commonMapper.getCartViewYn", inParam);
		} catch (Exception e) {
			logger.error("getCartViewYn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}

	public WebSession reSetUerinfo(int mberSeq) throws Exception {
		return sqlSession.selectOne("commonMapper.reSetUerinfo", mberSeq);
	}

/*	푸시 중복 개발로 인하여 주석처리 추후 삭제 예정
	public int insertPushSndGrp(Map<String, Object> inParam) throws Exception{
		logger.info("insertPushSndGrp Start");
		int outParam = 0;
		try {
			outParam = sqlSession.insert("commonMapper.insertPushSndGrp", inParam);
		} catch (Exception e) {
			logger.error("insertPushSndGrp DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}


	public int insertMsgInfo(Map<String, Object> inParam) throws Exception{
		logger.info("insertMsgInfo Start");
		int outParam = 0;
		try {
			outParam = sqlSession.insert("commonMapper.insertMsgInfo", inParam);
		} catch (Exception e) {
			logger.error("insertMsgInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}

	public List<Map<String, Object>> selectListUserInfo(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListUserInfo Start");
		List<Map<String, Object>> outParam = null;
		try {
			outParam =  sqlSession.selectList("commonMapper.selectListUserInfo", inParam);
		} catch (Exception e) {
			logger.error("selectListUserInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
*/
	
	/**
	 * <pre>
	 * 상태코드 가져오기
	 *
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 12. 05. 오후 9:12:00
	 * @author M.C.Jung
	 * @see com.ssocio.sharing.cmmn.service
	 * </pre>
	 */
	
	public String getSelectProcStatCd(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("getSelectProcStatCd Start");
		String outParam = "";
		try {
			outParam = sqlSession.selectOne("commonMapper.getSelectProcStatCd", inParam);
		} catch (Exception e) {
			logger.error("getSelectProcStatCd DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 사용한 쿠폰 리스트 가져오기
	 *
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 12. 30
	 * @author Y.S.KIM
	 * </pre>
	 */
	
	public List<Map<String, Object>> getSelectUseCouponList(Map<String, Object> inParam) throws Exception {
		logger.info("getSelectUseCouponList Start");
		List<Map<String, Object>> list = null;
		try {
			list = sqlSession.selectList("commonMapper.getSelectUseCouponList", inParam);
		} catch (Exception e) {
			logger.error("getSelectUseCouponList DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
}