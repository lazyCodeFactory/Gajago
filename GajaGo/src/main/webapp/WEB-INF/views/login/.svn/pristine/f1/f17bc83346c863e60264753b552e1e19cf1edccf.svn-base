package com.ssocio.sharing.controller.seller;

import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.json.simple.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.openmarket.common.Constant;
import com.ssocio.sharing.cmmn.admin.util.HttpUrlConnectionUtil;
import com.ssocio.sharing.cmmn.util.CmmnCnst;
import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.service.seller.SellerJoinService;
import com.ssocio.sharing.vo.seller.SellerSession;
import com.ssocio.sharing.vo.web.WebSession;

/**
 * <pre>
 * 회원 가입 및 회원전환
 * @author S.B.LEE
 * @version
 * @since 2015. 7. 7. 오전 10:52:37
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 7.	|	S.B.LEE	|신규
 * @비고
 * </pre>
 */
@Controller
public class SellerJoinController {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(SellerJoinController.class);

	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private SellerJoinService sellerJoinService;


	/**
	 * <pre>
	 * 회원 가입  페이지로 이동
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 7. 오후 8:43:58
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/seller/join/join.do")
	public ModelAndView selectJoinPopupOpen(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView();
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("selectJoinPopupOpen START");

		try {
			mav.setViewName("seller/join/join");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}



	@RequestMapping("/seller/join/selectAgree.do")
	public ModelAndView selectAgreePopup(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆selectArgeePopup START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView("seller/join/selectAgree");
		String AGR_GB_CD[] = request.getParameterValues("AGR_GB_CD[]");

		System.out.println("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
		System.out.println("MBER_GB_CD : "+inParam.get("MBER_GB_CD"));
		inParam.put("SSO_GB_CD", "SCO");
		try {
			mav.addObject("list", sellerJoinService.selectAgreePopup(inParam,AGR_GB_CD));
			mav.addObject("inParam", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}

		logger.info("☆★☆★☆★☆★☆★☆★☆selectArgeePopup END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}

	@RequestMapping("/seller/join/selectAgreeBiz.do")
	public ModelAndView selectAgreeBiz(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆selectArgeePopup START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView("seller/join/selectAgreeBiz");
		String AGR_GB_CD[] = request.getParameterValues("AGR_GB_CD[]");

		System.out.println("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
		System.out.println("MBER_GB_CD : "+inParam.get("MBER_GB_CD"));

		try {
			mav.addObject("list", sellerJoinService.selectAgreePopup(inParam,AGR_GB_CD));
			mav.addObject("inParam", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}

		logger.info("☆★☆★☆★☆★☆★☆★☆selectArgeePopup END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}


	@RequestMapping("/seller/join/chAgree.do")
	public ModelAndView chAgree(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆selectArgeePopup START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView("seller/join/chAgree");
		String AGR_GB_CD[] = request.getParameterValues("AGR_GB_CD[]");

		System.out.println("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
		System.out.println("MBER_GB_CD : "+inParam.get("MBER_GB_CD"));

		try {
			mav.addObject("list", sellerJoinService.selectAgreePopup(inParam,AGR_GB_CD));
			mav.addObject("inParam", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}

		logger.info("☆★☆★☆★☆★☆★☆★☆selectArgeePopup END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}

	@RequestMapping("/seller/join/chAgreeBiz.do")
	public ModelAndView chAgreeBiz(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆selectArgeePopup START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView("seller/join/chAgreeBiz");
		String AGR_GB_CD[] = request.getParameterValues("AGR_GB_CD[]");

		System.out.println("AGR_GB_CD : " + Arrays.toString(AGR_GB_CD));

		try {
			mav.addObject("list", sellerJoinService.selectAgreePopup(inParam,AGR_GB_CD));
			mav.addObject("inParam", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}

		logger.info("☆★☆★☆★☆★☆★☆★☆selectArgeePopup END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}

	@RequestMapping("/seller/join/insertJoinPopup.do")
	public ModelAndView insertJoinPopup(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆insertJoinPopup START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView("seller/join/insertJoinPopup");

		String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");

		inParam.put("AGR_SEQ_VER", AGR_SEQ_VER);
		mav.addObject("params", inParam);

		logger.info("☆★☆★☆★☆★☆★☆★☆insertJoinPopup  END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}

	@RequestMapping("/seller/join/updateJoinPopup.do")
	public ModelAndView updateJoinPopup(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆updateJoinPopup START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView("seller/join/updateJoinPopup");

		String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");

		inParam.put("AGR_SEQ_VER", AGR_SEQ_VER);
		mav.addObject("params", inParam);

		logger.info("☆★☆★☆★☆★☆★☆★☆updateJoinPopup  END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}
	/**
	 * <pre>
	 * 회원 등록
	 * 입력값의 대한 결과 Return
	 * 입력값의 대한 결과를 JSON 로 리턴한다
	 * @param request
	 * @param response
	 * @param inParam
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 31. 오후 8:30:07
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 *
	 * </pre>
	*/

	@RequestMapping(value="/seller/join/insertJoinPopupReg.do")
	public  ModelAndView sellerFindId(MultipartHttpServletRequest req, HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ insertJoinPopupReg START☆★☆★☆★☆★☆★☆★☆");

		ModelMap mm = new ModelMap();
		String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");
		String JOIN_CHAN_CD="";
		JOIN_CHAN_CD = "30";
		String lowerEmail = ((String)inParam.get("MBER_EMAIL")).toLowerCase();
		inParam.put("MBER_EMAIL", lowerEmail);
		try {

			//int ret = sellerJoinService.insertJoin(inParam, AGR_SEQ_VER);
			int ret = sellerJoinService.insertSellerMber(req, inParam, AGR_SEQ_VER,JOIN_CHAN_CD);
			logger.info("☆★☆★☆★☆★☆★☆★☆ insertJoinPopupReg ret☆★☆★☆★☆★☆★☆★☆\n"+ret);
			if(ret > 0){
				mm.put("retCode", "S");

				String mbrGbCd = (String)inParam.get("MBER_GB_CD");
				try {
					Map<String, Object> emailParam = new HashMap<String, Object>();
					//신청서 이메일 발송
					String innerHtml = "<html>";
					emailParam.put("gubun", "join_auth");
					emailParam.put("from_email", "ssocio@rocomo.com");
					emailParam.put("from_nm", "SSOCIO");
					emailParam.put("to_email", ((String)inParam.get("MBER_EMAIL")).toLowerCase());
					emailParam.put("to_nm", ((String)inParam.get("MBER_EMAIL")).toLowerCase());
					emailParam.put("ishtml", "Y");
					emailParam.put("subject", "[SSOCIO]가입 완료 안내");
					emailParam.put("msg", innerHtml);
					emailParam.put("req_site", "seller"); // okayjava : 메일 확인 후 seller 사이트로 이동 하도록 처리
					//emailParam.put("tplcode", "JOIN_COMP_SELLER");

					if(mbrGbCd.equals("0")){
						emailParam.put("tplcode", "JOIN_PER_SELLER");
						System.out.println("개인 메일 전송 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
					}
					else{
						emailParam.put("tplcode", "JOIN_COMP_SELLER");
						System.out.println("사업자 메일 전송 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
					}

					HttpUrlConnectionUtil hcu = new HttpUrlConnectionUtil();
					hcu.sendEmail(sellerJoinService.selectsiteIFUrl(), "POST", emailParam);
					//hcu.sendEmail("http://sso-api.vmclub.co.kr:30080/email/fast_email.html", "POST", emailParam);
				
				} catch (Exception e) {
					e.printStackTrace();
				}
			}else if(ret == -1){
				mm.put("retCode", "E");
			}else if(ret == -2){
				mm.put("retCode", "P");
			}else if(ret == -4){
				mm.put("retCode", "M");
			}else{
				mm.put("retCode", "F");
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ insertJoinPopupReg END☆★☆★☆★☆★☆★☆★☆");
		return new ModelAndView("jsonView", mm);
	}

	@RequestMapping(value="/seller/join/updateJoinPopupReg.do")
	public  ModelAndView updateJoinPopupReg(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ updateJoinPopupReg START☆★☆★☆★☆★☆★☆★☆");

		ModelMap mm = new ModelMap();
		String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");
		String JOIN_CHAN_CD="";
		JOIN_CHAN_CD = "30";
		
		String lowerEmail = ((String)inParam.get("MBER_EMAIL")).toLowerCase();
		inParam.put("MBER_EMAIL", lowerEmail);
		
		try {
			String mbrGbCd = (String)inParam.get("MBER_GB_CD");
			System.out.println("개인/사업자 구분 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ"+mbrGbCd);
			//int ret = sellerJoinService.insertJoin(inParam, AGR_SEQ_VER);
			int ret = sellerJoinService.updateJoin(inParam, AGR_SEQ_VER);
			logger.info("☆★☆★☆★☆★☆★☆★☆ updateJoinPopupReg ret☆★☆★☆★☆★☆★☆★☆\n"+ret);
			if(ret > 0){
				mm.put("retCode", "S");
				try {
					Map<String, Object> emailParam = new HashMap<String, Object>();
					//신청서 이메일 발송
					String innerHtml = "<html>";
					emailParam.put("gubun", "join_auth");
					emailParam.put("from_email", "ssocio@rocomo.com");
					emailParam.put("from_nm", "SSOCIO");
					emailParam.put("to_email", ((String) inParam.get("MBER_EMAIL")).toLowerCase());
					emailParam.put("to_nm", ((String) inParam.get("MBER_EMAIL")).toLowerCase());
					emailParam.put("ishtml", "Y");
					emailParam.put("subject", "[SSOCIO]가입 완료 안내");
					emailParam.put("msg", innerHtml);
					emailParam.put("req_site", "seller"); // okayjava : 메일 확인 후 seller 사이트로 이동 하도록 처리
					if(mbrGbCd.equals("0")){
						emailParam.put("tplcode", "CHG_TO_PER_SELLER");
						System.out.println("개인 메일 전송 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
					}
					else{
						emailParam.put("tplcode", "CHG_TO_COMP_SELLER");
						System.out.println("사업자 메일 전송 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ");
					}
					HttpUrlConnectionUtil hcu = new HttpUrlConnectionUtil();
					hcu.sendEmail(sellerJoinService.selectsiteIFUrl(), "POST", emailParam);
					//hcu.sendEmail("http://sso-api.vmclub.co.kr:30080/email/fast_email.html", "POST", emailParam);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}else if(ret == -1){
				mm.put("retCode", "E");
			}else if(ret == -2){
				mm.put("retCode", "P");
			}else if(ret == -4){
				mm.put("retCode", "M");
			}else{
				mm.put("retCode", "F");
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ updateJoinPopupReg END☆★☆★☆★☆★☆★☆★☆");
		return new ModelAndView("jsonView", mm);
	}
	
	

	@RequestMapping(value="/seller/join/updateJoinPopupDtl.do")
	public  ModelAndView updateJoinPopupDtl(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ updateJoinPopupDtl START☆★☆★☆★☆★☆★☆★☆");

		ModelMap mm = new ModelMap();
		String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");
		
		String lowerEmail = ((String)inParam.get("MBER_EMAIL")).toLowerCase();
		inParam.put("MBER_EMAIL", lowerEmail);
		
		try {

			int ret = sellerJoinService.updateJoin(inParam, AGR_SEQ_VER);
			logger.info("☆★☆★☆★☆★☆★☆★☆ sellerFindId ret☆★☆★☆★☆★☆★☆★☆\n"+ret);
			if(ret > 0){
				mm.put("retCode", "S");
			}else if(ret == -1){
				mm.put("retCode", "N");
			}else if(ret == -2){
				mm.put("retCode", "P");
			}else if(ret == -3){
				mm.put("retCode", "Y");
			}else if(ret == -4){
				mm.put("retCode", "M");
			}else{
				mm.put("retCode", "F");
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ updateJoinPopupDtl END☆★☆★☆★☆★☆★☆★☆");
		return new ModelAndView("jsonView", mm);
	}

	@RequestMapping("/seller/join/selectJoinRet.do")
	public ModelAndView selectJoinRetPopup(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆selectJoinRetPopup START☆★☆★☆★☆★☆★☆★☆");
		String lowerEmail = ((String)inParam.get("MBER_EMAIL")).toLowerCase();
		inParam.put("MBER_EMAIL", lowerEmail);
		ModelAndView mav = new ModelAndView("seller/join/selectJoinRet");
		
		mav.addObject("params", inParam);

		logger.info("☆★☆★☆★☆★☆★☆★☆selectJoinRetPopup  END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}

	// 가입회원 확인 ( ID, PW 체크)
	@RequestMapping("/seller/join/doChckAuthMber.do")
	public @ResponseBody String doChckAuthMber(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		String result = "";
		String lowerEmail = ((String)inParam.get("MBER_EMAIL")).toLowerCase();
		inParam.put("MBER_EMAIL", lowerEmail);
		try {
			result = sellerJoinService.selectMyAccount(inParam)	;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}

	// 가입사업자회원 확인 ( 사업자번호 체크)
	@RequestMapping("/seller/join/doChckAuthCPNY.do")
	public ModelAndView doChckAuthCPNY(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		/*
		int result = 0;
		try {
			result = sellerJoinService.selectAuthCPNY(inParam)	;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
		*/
		ModelAndView mav = new ModelAndView("jsonView");
		LoggerUtil.writeMap(inParam);
		try {
			mav.addObject("result", sellerJoinService.selectAuthCPNY(inParam));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}

	/**
	 * <pre>
	 * 회원전환 이메일 재발송
	 *
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 7. 오후 3:28:23
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.controller.seller
	 * </pre>
	 */
	@RequestMapping(value="/seller/join/authEmail.do")
	public ModelAndView procAuthEmail(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("PROC AUTH EMAIL START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelMap mm = new ModelMap();
		Map<String, Object> emailParam = new HashMap<String, Object>();

		LoggerUtil.writeMap(inParam);
		String temp_case="";


		try {

			temp_case = sellerJoinService.selectUserInfo(inParam);
			
			logger.debug("aaaaaaaaa "+temp_case);

			if("1".equals(temp_case)){		// 개인 구매
				temp_case = "JOIN_PER_BUYER";

			}else if("2".equals(temp_case)){	// 사업자 구매
				temp_case = "JOIN_COMP_BUYER";

			}else if("3".equals(temp_case)){	// 개인 판매
				temp_case = "JOIN_PER_SELLER";

			}else if("4".equals(temp_case)){	// 사업자 판매
				temp_case = "JOIN_COMP_SELLER ";

			}

			String innerHtml = "<html>";
			emailParam.put("gubun", "join_auth");
			emailParam.put("from_email", "ssocio@rocomo.com");
			emailParam.put("from_nm", "SSOCIO");
			emailParam.put("to_email", inParam.get("MBER_EMAIL"));
			emailParam.put("to_nm", inParam.get("MBER_EMAIL"));

			emailParam.put("ishtml", "Y");
			emailParam.put("subject", "[SSOCIO]가입 완료 안내");
			emailParam.put("msg", innerHtml);
			emailParam.put("tplcode", temp_case);
			emailParam.put("req_site", "www");
			emailParam.put("tmppwd", "");
			HttpUrlConnectionUtil hcu = new HttpUrlConnectionUtil();
			hcu.sendEmail(sellerJoinService.selectsiteIFUrl(), "POST", emailParam);

		} catch (Exception e) {
			e.printStackTrace();
		}

		return new ModelAndView("jsonView", mm);
	}
	
	/**
	 * 사업자 판매회원 가입 반려 상태 회원정보수정 페이지
	 */
	@RequestMapping("/seller/join/chgMyInfo.do")
	public ModelAndView getMyInfoInfo(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		try {
			mav.addObject("result", sellerJoinService.goMyInfoInfo(inParam));
			mav.addObject("params", inParam);
			mav.setViewName("seller/join/chgMyInfo");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * 사업자 판매회원 가입 반려 상태 회원정보수정 
	 */
	@RequestMapping(value="/seller/join/updateMyInfo.do")
	public  ModelAndView updateMyInfo(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ updateMyInfo START☆★☆★☆★☆★☆★☆★☆");
		LoggerUtil.writeMap(inParam);
		ModelMap mm = new ModelMap();
		try {
			sellerJoinService.updateMyInfo(inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ updateMyInfo END☆★☆★☆★☆★☆★☆★☆");
		return new ModelAndView("jsonView", mm);
	}
	
	/**
	 * 사업자 판매회원 가입 반려 상태 회원정보수정 페이지 비밀번호 변경
	 */
	@RequestMapping(value="/seller/join/updatePwChg.do")
	public  ModelAndView updatePwChg(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ updatePwChg START☆★☆★☆★☆★☆★☆★☆");

		ModelMap mm = new ModelMap();
		try {
			sellerJoinService.updatePwChg(inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ updatePwChg END☆★☆★☆★☆★☆★☆★☆");
		return new ModelAndView("jsonView", mm);
	}
	
	/**
	 * 사업자 판매회원 가입 반려 상태 회원정보수정 페이지 계좌변경
	 */
	@RequestMapping("/seller/join/updateMyAccount.do")
	public @ResponseBody String saveMyAccount(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		Map<String, Object> resultObj = new HashMap<String, Object>();
		LoggerUtil.writeMap(inParam);
		String phoneInfo = "";
		String result = "";
		try {
			resultObj = sellerJoinService.updateMyAccount(inParam)	;
			logger.debug("### resultObj:"+resultObj);
			phoneInfo = (String)resultObj.get("msg");

			JSONObject jsonObj = new JSONObject() ;
			jsonObj.put("msg", phoneInfo);
			result = jsonObj.toString();

		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	
}
