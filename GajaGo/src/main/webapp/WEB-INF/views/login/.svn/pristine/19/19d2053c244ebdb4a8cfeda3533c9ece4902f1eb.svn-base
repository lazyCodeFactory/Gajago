package com.ssocio.sharing.service.web;

import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.ui.ModelMap;
import org.springframework.web.multipart.MultipartFile;

import com.ssocio.sharing.vo.web.HeaderVO;
import com.ssocio.sharing.vo.web.WebSession;

/**
 * <pre>
 * APP INTRO
 * APP INTRO
 * @author J.S.LEE
 * @version
 * @since 2015. 8. 25. 오후 4:26:28
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 8. 25.	|	J.S.LEE	|신규
 * @비고
 * </pre>
 */
public interface AppCommonService {

	public Map<String, Object> appIntroCheck(HeaderVO headerObj, Map<String, Object> bodyParam, HttpServletRequest request) throws Exception;

	public Map<String, Object> loginchk(HttpServletRequest request,HeaderVO headerObj, Map<String, Object> inParam)throws Exception;

	public Map<String, Object> selectListMainPlan(HttpServletRequest request, HeaderVO headerObj)throws Exception;

	public ModelMap selectPlaninfo(HeaderVO headerObj, Map<String, Object> bodyParam)throws Exception;
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public ModelMap updateUserImgReg(HeaderVO headerObj,MultipartFile imageUpload, Map<String, Object> bodyParam)throws Exception;
	
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public int deleteALLMyLately(HeaderVO headerObj)throws Exception;

	public ModelMap selectSpOrdinfo(Map<String, Object> bodyParam)throws Exception;

	public String selectSiteDefault()throws Exception;

	public Map<String, Object> selectMypushInfo(Map<String, Object> bodyParam)throws Exception;

	public Object updateMypushInfo(Map<String, Object> bodyParam)throws Exception;

	public List<Map<String, Object>> getMyLatelyGoodsInfo(
			Map<String, Object> inParam)throws Exception;
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public int deleteMyLately(HeaderVO headerObj, Map<String, Object> bodyParam)throws Exception;

	public LinkedHashMap<String, Object> detailMyWishList(Map<String, Object> bodyParam, HeaderVO headerObj)throws Exception;

	public ModelMap deleteMyWishProd(Map<String, Object> bodyParam, HeaderVO headerObj)throws Exception;

	public ModelMap deleteMyWishProdAll(Map<String, Object> bodyParam,
			HeaderVO headerObj)throws Exception;

	public Object selectTagList(HeaderVO headerObj)throws Exception;

	/**
	 * <pre>
	 * 
	 * 
	 * @param bodyParam
	 * @exception
	 * @date 2015. 9. 30. 오전 5:26:59
	 * @author LeeJinSe
	 * @param headerObj 
	 * @see com.ssocio.sharing.service.web
	 * @비고
	 * 
	 * </pre>
	*/
	public ModelMap selectInterest(Map<String, Object> bodyParam, HeaderVO headerObj) throws Exception ;
	public List<Map<String, Object>> selectInterestList(
			Map<String, Object> inParam, HeaderVO headerObj)throws Exception;
	public List<Map<String, Object>> tagSelectInterestList(
			Map<String, Object> inParam, HeaderVO headerObj)throws Exception;
	public int SelectCntMyNewCar(HeaderVO headerObj) throws Exception;

	public ModelMap insertProdImg(MultipartFile imageUpload, Map<String, Object> bodyParam) throws Exception;

	/**
	 * <pre>
	 * 스마트폰 셰어링 리스트 
	 * 스마트폰 셰어링
	 * @param bodyParam
	 * @return
	 * @date 2015. 11. 8. 오후 4:47:36
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectListShar(HeaderVO headerObj,Map<String, Object> bodyParam) throws Exception;

	public Map<String, Object> selectCtryinfo(String guBun)  throws Exception;

	public void updatePushinfo(Map<String, Object> inParam)  throws Exception;

	public ModelMap insertProdImgV2(MultipartFile imageUpload[], Map<String, Object> bodyParam) throws Exception;
	
	/**
	 * 메인 게획전 renewal api 추가.
	 */
	
	public List<Map<String, Object>> popularSharing(Map<String, Object> inParam) throws Exception;
	public List<Map<String, Object>> popularSharingDetail(Map<String, Object> inParam) throws Exception;
	public List<Map<String, Object>> latestSharingList(Map<String, Object> inParam) throws Exception;

	public Map<String, Object> NewSharingList(Map<String, Object> checkWish, Map<String, Object> inParam, Map<String, Object> plan);

	public List<Map<String, Object>> checkWishedList(Map<String, Object> inParam);
}
