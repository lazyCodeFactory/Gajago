package com.ssocio.sharing.service.admin;

import java.io.CharArrayReader;
import java.io.Reader;
import java.io.Writer;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import oracle.jdbc.driver.OracleResultSet;
import oracle.sql.CLOB;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.ui.ModelMap;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.ssocio.sharing.cmmn.admin.util.CommonUtil;
import com.ssocio.sharing.cmmn.admin.util.FileUtil;
import com.ssocio.sharing.cmmn.util.CmmnCnst;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.dao.admin.AdminCodeDao;
import com.ssocio.sharing.dao.admin.AdminCommonDao;
import com.ssocio.sharing.dao.admin.AdminMberDao;
import com.ssocio.sharing.dao.admin.AdminOrderDao;
import com.ssocio.sharing.dao.admin.AdminSharingOrderDao;
import com.ssocio.sharing.vo.admin.PageNavigation;

/**
 * <pre>
 * 회원관리 서비스
 * 회원관리를 위한 서비스
 * @author Y.I.Chun
 * @version
 * @since 2015. 7. 6. 오후 6:41:07
 * @see
 * @History
 *  Date          |    author    | 변경내용
 *	2015. 7. 6.   |    Y.I.Chun  | 신규
 * @Todo
 * </pre>
 */
@Service
public class AdminMberServiceImpl implements AdminMberService {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminMberServiceImpl.class);

	// --------------------------------------------------------------------------
	// # DAO 설정
	// --------------------------------------------------------------------------
	@Resource(name="adminCommonDao")
	private AdminCommonDao adminCommonDao;
	@Resource(name="adminMberDao")
	private AdminMberDao adminMberDao;
	@Resource(name="adminSharingOrderDao")
	private AdminSharingOrderDao adminSharingOrderDao;
	@Resource(name="adminOrderDao")
	private AdminOrderDao adminOrderDao;
	@Resource(name="adminCodeDao")
	private AdminCodeDao adminCodeDao;


	/**
	 * <pre>
	 * 상품리스트정보 조회
	 * 상품리스트정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public ModelMap selectMberList(Map<String, Object> inParam) throws Exception {

		ModelMap mm = new ModelMap();

		String today = StringUtil.getCurrentDate();
		inParam.put("regFromDate", StringUtil.nvl((String)inParam.get("regFromDate"), today).replaceAll("-", ""));
		inParam.put("regToDate", StringUtil.nvl((String)inParam.get("regToDate"), today).replaceAll("-", ""));

		//총건수
		int rowTotal = adminMberDao.selectMberSearchCnt(inParam);

		//페이지설정
		int nowPage = StringUtil.nvlInt((String)inParam.get("pageNo"), 1);
		int rowCnt	= StringUtil.nvlInt((String)inParam.get("displayCnt"), CmmnCnst.ADM_LIST_SIZE);;
		inParam.put("displayCnt", rowCnt);

		PageNavigation pageNav= new PageNavigation(nowPage, rowTotal, rowCnt, CmmnCnst.ADM_BLOCK_SIZE);
		mm.put("PAGE_NO", nowPage);
		mm.put("pageNav", pageNav);
		inParam.put("START_ROW", pageNav.getStartRow());
		inParam.put("END_ROW", pageNav.getEndRow());

		pageNav.Debug();

		mm.put("mberList", adminMberDao.selectMberList(inParam));
		System.out.println(" &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&");
		System.out.println(mm.get("mberList"));
		System.out.println(" &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&");
		mm.put("totalCnt", adminMberDao.selectMberTotalCnt(inParam));

		return mm;
	}

	/**
	 * <pre>
	 * 회원리스트 엑셀
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Override
	public Object selectMberListToExcel(Map<String, Object> inParam) throws Exception{
		return adminMberDao.selectMberListToExcel(inParam);
	}

	/**
	 * <pre>
	 * 상품상세정보 조회
	 * 상품상세정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Override
	public ModelMap selectMberInfo(Map<String, Object> inParam) throws Exception {

		ModelMap mm = new ModelMap();
		Map<String, Object> tmpParam = new HashMap<String, Object>();
		String[] arryKey = new String[1];
		arryKey[0]="AGR_DESC";

		//회원기본정보
		Map<String, Object> mberInfo= adminMberDao.selectMberInfo(inParam);

		mm.put("mberInfo", mberInfo);
		mm.put("mberActInfo", adminMberDao.selectMberActInfo(inParam));
		mm.put("mberAgrList", CommonUtil.clobToString(adminMberDao.selectMberAgrList(inParam), arryKey));
		mm.put("mberLvlInfo", adminMberDao.selectMberLvlInfo(inParam));
		mm.put("miniShopInfo", adminMberDao.selectMiniShopInfo(inParam));
		mm.put("mberHistList", adminMberDao.selectMberHistList(inParam));
		mm.put("tcnt", adminMberDao.selectMberSusCnt3(inParam));
		//상품형황 건수
//		tmpParam.put("mberSeq", inParam.get("mberSeq"));
		mm.put("prodCnt", adminMberDao.selectProdCntByType(inParam));
//		tmpParam.put("prodTypeCd", "1");
//		mm.put("prodCnt2", adminMberDao.selectProdCntByType(tmpParam));
//		tmpParam.put("prodTypeCd", "2");
//		mm.put("prodCnt3", adminMberDao.selectProdCntByType(tmpParam));
//		tmpParam.put("prodTypeCd", "3");
//		mm.put("prodCnt4", adminMberDao.selectProdCntByType(tmpParam));

//		mm.put("prodList", adminMberDao.selectProdList(inParam));

		//스마트폰쉐어링 주문내역
		/*tmpParam.put("START_ROW", 1);
		tmpParam.put("END_ROW", 5);
		mm.put("orderSpSharing", adminSharingOrderDao.selectListOrderProd(tmpParam));
		//판매상품 주문내역
		tmpParam.put("PURC_GB_ARR", new String[]{"1"});
		mm.put("orderSell", adminOrderDao.selectListOrder(tmpParam));
		//쉐어링상품 주문내역
		tmpParam.put("PURC_GB_ARR", new String[]{"2"});
		mm.put("orderSharing", adminOrderDao.selectListOrder(tmpParam));
		//나눔상품 주문내역
		tmpParam.put("PURC_GB_ARR", new String[]{"3"});
		mm.put("orderFree", adminOrderDao.selectListOrder(tmpParam));

		//판매상품취소
		tmpParam.put("S_SEARCH_WORD", mberInfo.get("MBER_EMAIL"));
		tmpParam.put("START_ROW", 1);
		tmpParam.put("END_ROW", 999999999);
		tmpParam.put("PROD_GB_ARR", new String[]{"1"});
		BigDecimal price = new BigDecimal(0);
		int cnlCnt = 0;

		List<Map<String, Object>> orderSellCnlList = adminOrderDao.selectListCncl(tmpParam);
		if(orderSellCnlList != null && orderSellCnlList.size() > 0){
			for(Map<String, Object> orderSellCnl : orderSellCnlList){
				price.add((BigDecimal) orderSellCnl.get("REAL_SETL_AMT"));
			}
			cnlCnt = orderSellCnlList.size();
			mm.put("orderSellCnlInfo", orderSellCnlList.get(0));
		}
		mm.put("orderSellCnlCnt", cnlCnt);
		mm.put("orderSellCnlPrce", price);

		//셰어링상품취소
		price = new BigDecimal(0);
		cnlCnt = 0;
		tmpParam.put("PROD_GB_ARR", new String[]{"2"});
		List<Map<String, Object>> orderSharCnlList = adminOrderDao.selectListCncl(tmpParam);
		if(orderSharCnlList != null && orderSharCnlList.size() > 0){
			for(Map<String, Object> orderSharCnl : orderSharCnlList){
				price.add((BigDecimal) orderSharCnl.get("REAL_SETL_AMT"));
			}
			cnlCnt = orderSharCnlList.size();
			mm.put("orderSharCnlInfo", orderSharCnlList.get(0));
		}
		mm.put("orderSharCnlCnt", cnlCnt);
		mm.put("orderSharCnlPrce", price);

		//스마트폰 셰어링 취소
		price = new BigDecimal(0);
		cnlCnt = 0;
		tmpParam.put("PROD_GB_ARR", new String[]{"4"});
		List<Map<String, Object>> orderSpSharCnlList = adminOrderDao.selectListCncl(tmpParam);
		if(orderSpSharCnlList != null && orderSpSharCnlList.size() > 0){
			for(Map<String, Object> orderSpSharCnl : orderSpSharCnlList){
				price.add((BigDecimal) orderSpSharCnl.get("REAL_SETL_AMT"));
			}
			cnlCnt = orderSpSharCnlList.size();
			mm.put("orderSpSharCnlInfo", orderSpSharCnlList.get(0));
		}
		mm.put("orderSpSharCnlCnt", cnlCnt);
		mm.put("orderSpSharCnlPrce", price);

		//취소합계
		price = new BigDecimal(0);
		cnlCnt = 0;
		tmpParam.put("PROD_GB_ARR", new String[]{"1", "2", "4"});
		List<Map<String, Object>> orderTotalCnlList = adminOrderDao.selectListCncl(tmpParam);
		if(orderTotalCnlList != null && orderTotalCnlList.size() > 0){
			for(Map<String, Object> orderTotalCnl : orderTotalCnlList){
				price.add((BigDecimal) orderTotalCnl.get("REAL_SETL_AMT"));
			}
			cnlCnt = orderTotalCnlList.size();
		}
		mm.put("orderTotalCnlCnt", cnlCnt);
		mm.put("orderTotalCnlPrce", price);


		//교환반품건수
		mm.put("chgRtnProdTotCnt", adminMberDao.selectChgRtnProdTotCnt(inParam));
		mm.put("chgRtnProdCnt", adminMberDao.selectChgRtnProdCnt(inParam));*/

		return mm;
	}

	/**
	 * <pre>
	 * 회원상세정보 수정
	 * 회원상세정보를 수정 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	@Override
	@Transactional(propagation=Propagation.REQUIRED)
	public void updateMberInfo (Map<String, Object> inParam) throws Exception{
		adminMberDao.updateMberInfo(inParam);
	}

	/**
	 * <pre>
	 * 회원쿠폰리스트 조회
	 * 회원쿠폰리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Override
	public ModelMap selectMberCpnList(Map<String, Object> inParam) throws Exception {

		ModelMap mm = new ModelMap();

		String today = StringUtil.getCurrentDate();
		inParam.put("fromDate", StringUtil.nvl((String)inParam.get("fromDate"), today));
		inParam.put("toDate", StringUtil.nvl((String)inParam.get("toDate"), today));

		//총건수
		int rowTotal = adminMberDao.selectMberCpnSearchCnt(inParam);

		//페이지설정
		int nowPage = StringUtil.nvlInt((String)inParam.get("pageNo"), 1);

		PageNavigation pageNav= new PageNavigation(nowPage, rowTotal, CmmnCnst.ADM_LIST_SIZE, CmmnCnst.ADM_BLOCK_SIZE);
		mm.put("PAGE_NO", nowPage);
		mm.put("pageNav", pageNav);
		inParam.put("START_ROW", pageNav.getStartRow());
		inParam.put("END_ROW", pageNav.getEndRow());

		mm.put("couponList", adminMberDao.selectMberCpnList(inParam));
		mm.put("coupon", adminMberDao.selectCouponCnt(inParam));
		return mm;
	}

	/**
	 * <pre>
	 * 회원포인트리스트 조회
	 * 회원포인트리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Override
	public ModelMap selectMberPointList(Map<String, Object> inParam) throws Exception {

		ModelMap mm = new ModelMap();

		SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd");
		Calendar cal = Calendar.getInstance();
		cal.add(Calendar.MONTH, -6);
		inParam.put("S_START_DATE", StringUtil.nvl((String)inParam.get("S_START_DATE"), format.format(cal.getTime())));

		String today = StringUtil.getCurrentDate();
		inParam.put("S_END_DATE", StringUtil.nvl((String)inParam.get("S_END_DATE"), today));

		inParam.put("S_GROUP_CODE", CmmnCnst.pointCd);
		mm.put("joinChanCd",adminCodeDao.selectListCodeGroup(inParam));

		//총건수
	//	int rowTotal = adminMberDao.selectMberPointSearchCnt(inParam);
		int rowTotal = adminMberDao.selectMberPointCnt(inParam);

		inParam.put("PAGE_NO",StringUtil.nvl((String)inParam.get("PAGE_NO"), "1"));
		int nowPage = StringUtil.nvlInt((String)inParam.get("PAGE_NO"), 1);

		PageNavigation pageNav= new PageNavigation(nowPage, rowTotal, 5, CmmnCnst.ADM_BLOCK_SIZE);
	//	PageNavigation pageNav= new PageNavigation(nowPage, rowTotal, CmmnCnst.ADM_LIST_SIZE, CmmnCnst.ADM_BLOCK_SIZE);
		mm.put("PAGE_NO", nowPage);
		mm.put("pageNav", pageNav);
		inParam.put("START_ROW", pageNav.getStartRow());
		inParam.put("END_ROW", pageNav.getEndRow());


	//	mm.put("pointList", adminMberDao.selectMberPointList(inParam));
	//	mm.put("pointSummary", adminMberDao.selectMberPointSummary(inParam));
		mm.put("mberSeq", inParam.get("mberSeq"));
		mm.put("pointList", adminMberDao.selectPointList(inParam));
		mm.put("pointSummary", adminMberDao.selectPointListSummary(inParam));

		return mm;
	}

	/**
	 * <pre>
	 * 회원포인트 추가
	 * 회원포인트를 추가합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Override
	@Transactional(propagation=Propagation.REQUIRED)
	public void insertMberPoint(Map<String, Object> inParam) throws Exception{
		adminMberDao.insertMberPoint(inParam);
		adminMberDao.updateMberPoint(inParam);
	}

	/**
	 * <pre>
	 * 신용점수 리스트 조회
	 * 신용점수 리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Override
	public ModelMap selectMberCrePointList(Map<String, Object> inParam) throws Exception {

		ModelMap mm = new ModelMap();

		//총건수
		int rowTotal = adminMberDao.selectMberCrePointSearchCnt(inParam);

		//페이지설정
		int nowPage = StringUtil.nvlInt((String)inParam.get("pageNo"), 1);

		PageNavigation pageNav= new PageNavigation(nowPage, rowTotal, CmmnCnst.ADM_LIST_SIZE, CmmnCnst.ADM_BLOCK_SIZE);
		mm.put("PAGE_NO", nowPage);
		mm.put("pageNav", pageNav);
		inParam.put("START_ROW", pageNav.getStartRow());
		inParam.put("END_ROW", pageNav.getEndRow());
		logger.debug(">>>>> inParam : "+inParam.toString());
		mm.put("crePointList", adminMberDao.selectMberCrePointList(inParam));
		return mm;
	}

	/**
	 * <pre>
	 * 회원경고리스트 조회
	 * 회원경고리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Override
	public ModelMap selectMberAlertList(Map<String, Object> inParam) throws Exception {

		ModelMap mm = new ModelMap();

		String today = StringUtil.getCurrentDate();
		inParam.put("fromDate", StringUtil.nvl((String)inParam.get("fromDate"), today));
		inParam.put("toDate", StringUtil.nvl((String)inParam.get("toDate"), today));

		if(null != inParam.get("CHK_BOX_RESULT")){
			inParam.put("INS_CHK_BOX_RESULT", ((String)inParam.get("CHK_BOX_RESULT")).split(","));
		}

		//총건수
		int rowTotal = adminMberDao.selectMberAlertSearchCnt(inParam);

		//페이지설정
		int nowPage = StringUtil.nvlInt((String)inParam.get("pageNo"), 1);

		PageNavigation pageNav= new PageNavigation(nowPage, rowTotal, CmmnCnst.ADM_LIST_SIZE, CmmnCnst.ADM_BLOCK_SIZE);
		mm.put("PAGE_NO", nowPage);
		mm.put("pageNav", pageNav);
		inParam.put("START_ROW", pageNav.getStartRow());
		inParam.put("END_ROW", pageNav.getEndRow());

		mm.put("mberAlertList", adminMberDao.selectMberAlertList(inParam));
		mm.put("mberAlertSummary", adminMberDao.selectMberAlertSummary(inParam));
		return mm;
	}

	/**
	 * <pre>
	 * 회원접속일시리스트 조회
	 * 회원접속일시리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Override
	public ModelMap selectMberAccList(Map<String, Object> inParam) throws Exception {

		ModelMap mm = new ModelMap();

		//조회조건 기간 처리 start
		String today = StringUtil.getCurrentDate();
		inParam.put("S_END_DATE", StringUtil.nvl((String)inParam.get("S_END_DATE"), today));

		SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd");
		Calendar cal = Calendar.getInstance();
		cal.add(Calendar.DATE, -7);
		inParam.put("S_START_DATE", StringUtil.nvl((String)inParam.get("S_START_DATE"), format.format(cal.getTime())));
		//조회조건 기간 처리 end

		//총건수
		int rowTotal = adminMberDao.selectMberAccListCnt(inParam);

		inParam.put("PAGE_NO",StringUtil.nvl((String)inParam.get("PAGE_NO"), "1"));
		int nowPage = StringUtil.nvlInt((String)inParam.get("PAGE_NO"), 1);

//		PageNavigation pageNav= new PageNavigation(nowPage, rowTotal, 5, CmmnCnst.ADM_BLOCK_SIZE);
		PageNavigation pageNav= new PageNavigation(nowPage, rowTotal, CmmnCnst.ADM_LIST_SIZE, CmmnCnst.ADM_BLOCK_SIZE);

		mm.put("PAGE_NO", nowPage);
		mm.put("pageNav", pageNav);
		inParam.put("START_ROW", pageNav.getStartRow());
		inParam.put("END_ROW", pageNav.getEndRow());

		mm.put("mberSeq", inParam.get("mberSeq"));
		mm.put("selectMberAccCnt", adminMberDao.selectMberAccCnt(inParam));
		mm.put("selectMberAccList", adminMberDao.selectMberAccList(inParam));
		mm.put("selectMberAccListCnt", adminMberDao.selectMberAccListCnt(inParam));

		return mm;
	}

	/**
	 * <pre>
	 * 미니샵 등록
	 * 미니샵정보를 등록합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	@Override
	@Transactional(propagation=Propagation.REQUIRED)
	public void saveMiniShopInfo (MultipartHttpServletRequest req, Map<String, Object> inParam) throws Exception{
		try{
		adminMberDao.updateMiniShopInfo(inParam);

//		MultipartFile miniShopImg = req.getFile("miniShopImg");
//
//		if(miniShopImg != null && miniShopImg.getSize() > 0){
//			Map<String, Object> fileInfo = FileUtil.saveMultipartFile(miniShopImg);//파일 저장
//			adminCommonDao.insertFile(fileInfo);
//			inParam.put("miniShopImgPath", fileInfo.get("I_FILE_URL"));
//		}
		MultipartFile mainImg = req.getFile("mainImg");//PC 리스트 이미지
		MultipartFile BackgrdImg = req.getFile("BackgrdImg");//모바일 리스트 이미지

		String mainImgfileSeq = null;
		String BackgrdImgfileSeq = null;
		if(mainImg != null && mainImg.getSize() > 0){
			Map<String, Object> fileInfo = FileUtil.saveMultipartFile(mainImg);//파일 저장
			mainImgfileSeq = adminCommonDao.insertFile(fileInfo);
			inParam.put("MainfileSeq", mainImgfileSeq);
		}

		if(BackgrdImg != null && BackgrdImg.getSize() > 0){
			Map<String, Object> fileInfo = FileUtil.saveMultipartFile(BackgrdImg);//파일 저장
			BackgrdImgfileSeq = adminCommonDao.insertFile(fileInfo);
			inParam.put("BackgrdfileSeq", BackgrdImgfileSeq);
		}

		adminMberDao.updateMyminiInfoReg(inParam);

		adminMberDao.updateSellerInfo(inParam);
		}catch(Exception e){
			e.printStackTrace();
		}

	}


	/**
	 * <pre>
	 * 회원 가입 상태 변경
	 * 가입상태를 변경합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	@Override
	@Transactional(propagation=Propagation.REQUIRED)
	public void updateMberStat(Map<String, Object> inParam) throws Exception {
		// TODO Auto-generated method stub

		if(adminMberDao.updateMberStat(inParam) > 0){

			if("30".equals(inParam.get("MBER_STAT_CD"))){

				adminMberDao.updateMberReason(inParam);

				inParam.put("MBER_HIST_REASON", inParam.get("stop_reason"));
				inParam.put("MBER_STOP_CD", inParam.get("stop_reason_cd"));
				inParam.put("retMsg", "활동 중지 처리 되었습니다");
			}else if("22".equals(inParam.get("MBER_STAT_CD"))){

				adminMberDao.updateMberReason(inParam);

				inParam.put("MBER_HIST_REASON", inParam.get("reject_reason"));
				inParam.put("retMsg", "가입 반려 처리가 완료 되었습니다");
			}

			// 회원 상태 히스토리 적재

			if(CmmnCnst.cmmn1.equals(inParam.get("MBER_REG_GB_CD"))
					&& CmmnCnst.cmmn10.equals(inParam.get("MBER_STAT_CD"))){
				inParam.put("MBER_STAT_CD", "12");
			}

			adminMberDao.insertMberHist(inParam);

			// 활둥 재개시 : 회원상태코드는  10:가입완료 로 처리하고,
			// Log에는 32:활동재개로 표시함
			if ( "32".equals(inParam.get("MBER_STAT_CD") ) )
			{
				inParam.put("MBER_STAT_CD", "10");
				adminMberDao.updateMberStat(inParam);
			}


		}else{
			inParam.put("retMsg", "다시 시도해 주세요");
		}
	}

	@Override
	public List<Map<String, Object>> selectCodeList( String grp_cd) throws Exception {
		// TODO Auto-generated method stub
		return adminMberDao.selectCodeList(grp_cd);
	}

	@Override
	@Transactional(propagation=Propagation.REQUIRED)
	public ModelMap updateCmpnyImg(MultipartHttpServletRequest req, Map<String, Object> inParam) throws Exception{
		MultipartFile img  = req.getFile("img");
		ModelMap mm = new ModelMap();
		String imgValue = inParam.get("imgValue").toString();
		String FILE_SEQ = "";

		if(img != null && img.getSize() > 0){
			Map<String, Object> fileInfo = FileUtil.saveMultipartFile(img);//파일 저장
			FILE_SEQ = adminCommonDao.insertFile(fileInfo);
			inParam.put("img", fileInfo.get("I_FILE_URL"));
			inParam.put(imgValue,FILE_SEQ);
		}

		adminMberDao.updateCmpnyImg(inParam);

		mm.put("fileSeq", FILE_SEQ);
		return mm;

	}

	@Override
	public int selectpath(Map<String, Object> inParam) throws Exception {

		return adminMberDao.selectpath(inParam);
	}

	@Override
	public Map<String, Object> selectSusList(Map<String, Object> inParam) throws Exception {

		Map<String, Object> mv = new HashMap<String, Object>();

		String today = StringUtil.getCurrentDate();
		inParam.put("S_START_DATE", StringUtil.nvl((String)inParam.get("S_START_DATE"), today));
		inParam.put("S_END_DATE", StringUtil.nvl((String)inParam.get("S_END_DATE"), today));

		//총건수
		int rowTotal = adminMberDao.selectMberSusCnt3(inParam);

		inParam.put("PAGE_NO",StringUtil.nvl((String)inParam.get("PAGE_NO"), "1"));
		int nowPage = StringUtil.nvlInt((String)inParam.get("PAGE_NO"), 1);

		PageNavigation pageNav= new PageNavigation(nowPage, rowTotal, CmmnCnst.ADM_LIST_SIZE, CmmnCnst.ADM_BLOCK_SIZE);

		inParam.put("PAGE_NO", nowPage);
		inParam.put("pageNav", pageNav);
		inParam.put("START_ROW", pageNav.getStartRow());
		inParam.put("END_ROW", pageNav.getEndRow());

		String[] arryKey = {"SUSPECT_REASON"};
		mv.put("sl", CommonUtil.clobToString(adminMberDao.selectMberSusList(inParam), arryKey));
//		mv.put("sl", adminMberDao.selectMberSusList(inParam));
		mv.put("suspectGbCd", adminMberDao.selectMberCodeList());
		return mv;
	}


}