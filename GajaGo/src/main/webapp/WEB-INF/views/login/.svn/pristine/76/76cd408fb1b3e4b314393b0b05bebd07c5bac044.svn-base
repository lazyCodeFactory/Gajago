package com.ssocio.sharing.service.web;

import java.util.Map;
import javax.annotation.Resource;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.ui.ModelMap;
import com.ssocio.sharing.dao.web.MobileMyInfoDao;
import com.ssocio.sharing.vo.web.WebSession;

@Service
public class MobileMyInfoServiceImpl implements MobileMyInfoService {
	
	private static final Logger logger = LoggerFactory.getLogger(MobileMyInfoServiceImpl.class);
	
	@Resource(name="mobileMyInfoDao")
	private MobileMyInfoDao mobileMyInfoDao;
	
	/**   
	 * 회원정보 조회
	 */
	@Override
	public ModelMap getMyInfoInfo(Map<String, Object> inParam, WebSession user){
		ModelMap mm = new ModelMap();
		int mberSeq = user.getMBER_SEQ();
		logger.debug("mberSeq:"+mberSeq);
		// 로그인 정보가 존재하지 않아서 임의로 넣는다. 이석배 seokbae@rocomo.com
		inParam.put("MBER_SEQ", mberSeq);
		try {
			mm.put("myInfoInfo", mobileMyInfoDao.getMyInfoInfo(inParam));
		}catch (Exception e) {
			throw e;
		}
		return mm;
	}
	/**   
	 * 핸드폰번호 변경 화면으로 이동.
	 */
	@Override
	public ModelMap getMyPhoneChangeForm(Map<String, Object> inParam, WebSession user){
		ModelMap mm = new ModelMap();
		int mberSeq = user.getMBER_SEQ();
		logger.debug("mberSeq:"+mberSeq);
		// 로그인 정보가 존재하지 않아서 임의로 넣는다. 이석배 seokbae@rocomo.com
		inParam.put("MBER_SEQ", mberSeq);
		try {
			mm.put("myInfoInfo", mobileMyInfoDao.getMyPhoneChangeForm(inParam));
		}catch (Exception e) {
			throw e;
		}
		return mm;
	}
	/**   
	 * 휴대폰 변경 처리
	 */
	@Override
	public ModelMap updateMyPhone(Map<String, Object> inParam, WebSession user){
		ModelMap mm = new ModelMap();
		int mberSeq = user.getMBER_SEQ();
		logger.debug("mberSeq:"+mberSeq);
		// 로그인 정보가 존재하지 않아서 임의로 넣는다. 이석배 seokbae@rocomo.com
		inParam.put("MBER_SEQ"	, mberSeq);		
		int phoneStatus = 0;
		String msg = "";
		mm.put("code", "F");
		try {			
			phoneStatus = mobileMyInfoDao.updateMyPhone(inParam);
			logger.debug("phoneStatus:"+phoneStatus);
			if(phoneStatus >  0){
				msg = "휴대폰번호가 변경되었습니다.";
				mm.put("code", "S");
			}
			logger.debug("휴대폰번호을 변경 처리");
			mm.put("msg", msg);
			
		}catch (Exception e) {
			throw e;
		}
		return mm;
	}
	/****************************************************************************
	 * 계좌변경 *******************************************************************************
	 * **************************************************************************************/
	/**   
	 * 계좌변경 화면으로 이동.
	 */
	public ModelMap getMyAccountChangeForm(Map<String, Object> inParam, WebSession user){
		ModelMap mm = new ModelMap();
		int mberSeq = user.getMBER_SEQ();
		logger.debug("mberSeq:"+mberSeq);
		// 로그인 정보가 존재하지 않아서 임의로 넣는다. 이석배 seokbae@rocomo.com
		inParam.put("MBER_SEQ", mberSeq);
		try {
			mm.put("myAccountInfo", mobileMyInfoDao.getMyAccountChangeForm(inParam));
		}catch (Exception e) {
			throw e;
		}
		return mm;
	}
	
	/**   
	 * 계좌 변경 처리
	 */
	@Override
	public ModelMap updateMyAccount(Map<String, Object> inParam, WebSession user){
		ModelMap mm = new ModelMap();
		int mberSeq = user.getMBER_SEQ();
		logger.debug("mberSeq:"+mberSeq);
		// 로그인 정보가 존재하지 않아서 임의로 넣는다. 이석배 seokbae@rocomo.com
		inParam.put("MBER_SEQ"	, mberSeq);		
		Integer acccountStatus = 0;
		String msg = "";
		try {			
			acccountStatus = mobileMyInfoDao.updateMyAccount(inParam);
			logger.debug("acccountStatus:"+acccountStatus);
			if(acccountStatus == null){
				msg = "계좌번호가 변경되었습니다.";
			}
			logger.debug("계좌번호을 변경 처리");
			mm.put("msg", msg);
		}catch (Exception e) {
			throw e;
		}
		return mm;
	}
	/**   
	 * 비번변경 화면으로 이동.
	 */
	public ModelMap getMyPwChangeForm(Map<String, Object> inParam, WebSession user){
		ModelMap mm = new ModelMap();
		int mberSeq = user.getMBER_SEQ();
		logger.debug("mberSeq:"+mberSeq);
		// 로그인 정보가 존재하지 않아서 임의로 넣는다. 이석배 seokbae@rocomo.com
		inParam.put("MBER_SEQ", mberSeq);
		try {
			mm.put("myAccountInfo", mobileMyInfoDao.getMyPwChangeForm(inParam));
		}catch (Exception e) {
			throw e;
		}
		return mm;
	}
	
	/**   
	 * 비밀번호 변경 처리
	 */
	@Override
	public ModelMap saveMyPwChange(Map<String, Object> inParam, WebSession user){
		ModelMap mm = new ModelMap();
		int mberSeq = user.getMBER_SEQ();
		logger.debug("mberSeq:"+mberSeq);
		// 로그인 정보가 존재하지 않아서 임의로 넣는다. 이석배 seokbae@rocomo.com
		inParam.put("MBER_SEQ"	, mberSeq);
		inParam.put("MBER_EMAIL", user.getMBER_EMAIL());
		String msg = "";
		Integer phoneNmStatus = 0;
		try {
			
			logger.debug("인증번호 유효시간 처리");
			if("".equals(msg)){
				logger.debug("핸드폰 번호을 변경한다. ");
				phoneNmStatus = mobileMyInfoDao.saveMyPwChange(inParam);
				logger.debug("phoneNmStatus:"+phoneNmStatus);
				if(phoneNmStatus == null){
					msg = "휴대폰번호가 변경되었습니다.";
				}
			}
			logger.debug("핸드폰 번호을 변경 처리");
			mm.put("msg", msg);
		}catch (Exception e) {
			throw e;
		}
		return mm;
	}
	/**   
	 * 이메일 수신여부 변경
	 */
	@Override
	public ModelMap changeRadioMail(Map<String, Object> inParam, WebSession user){
		ModelMap mm = new ModelMap();
		int mberSeq = user.getMBER_SEQ();
		logger.debug("mberSeq:"+mberSeq);
		// 로그인 정보가 존재하지 않아서 임의로 넣는다. 이석배 seokbae@rocomo.com
		inParam.put("MBER_SEQ"	, mberSeq);
		String msg = "";
		Integer msgStatus = 0;
		try {
			msgStatus = mobileMyInfoDao.changeRadioMail(inParam);
			logger.debug("msgStatus:"+msgStatus);
			if(msgStatus == null){
				msg = "이메일수신여부가 변경되었습니다.";
			}
			mm.put("msg", msg);
		}catch (Exception e) {
			throw e;
		}
		return mm;
	}
	/**   
	 * SMS 수신여부 변경
	 */
	@Override
	public ModelMap changeRadioSMS(Map<String, Object> inParam, WebSession user){
		ModelMap mm = new ModelMap();
		int mberSeq = user.getMBER_SEQ();
		logger.debug("mberSeq:"+mberSeq);
		// 로그인 정보가 존재하지 않아서 임의로 넣는다. 이석배 seokbae@rocomo.com
		inParam.put("MBER_SEQ"	, mberSeq);
		String msg = "";
		Integer msgStatus = 0;
		try {
			msgStatus = mobileMyInfoDao.changeRadioSMS(inParam);
			logger.debug("msgStatus:"+msgStatus);
			if(msgStatus == null){
				msg = "SMS수신여부가 변경되었습니다.";
			}
			mm.put("msg", msg);
		}catch (Exception e) {
			throw e;
		}
		return mm;
	}
}
