package com.ssocio.sharing.service.admin;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Map;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.ui.ModelMap;

import com.ssocio.sharing.cmmn.util.CmmnCnst;
import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.dao.admin.AdminAppDao;
import com.ssocio.sharing.vo.admin.PageNavigation;

/**
 * <pre>
 * 공통 서비스
 * 공통 서비스
 * @author J.K.CHOI
 * @version
 * @since 2015. 7. 13. 오후 7:33:23
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 13.	|	J.K.CHOI	|신규
 * @비고
 * </pre>
 */
@Service
public class AdminAppServiceImpl extends AdminReferServiceImpl implements AdminAppService {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminAppServiceImpl.class);
	
	// --------------------------------------------------------------------------
	// # DAO 설정
	// --------------------------------------------------------------------------
	@Resource(name="adminAppDao")
	private AdminAppDao adminAppDao;
	
	/**
	 * <pre>
	 * 어플리케이션 버전 정보 리스트 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 2:03:43
	 * @author J.K.CHOI
	 * @see @see com.ssocio.sharing.service.admin.AdminAppService#selectListApp(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public ModelMap selectListApp(Map<String, Object> inParam) throws Exception{
		ModelMap mm = new ModelMap();
		try {
			
			//조회조건 기간 처리 start
			String today = StringUtil.getCurrentDate();
			inParam.put("S_END_DATE", StringUtil.nvl((String)inParam.get("S_END_DATE"), today));
			SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd");
			Calendar cal = Calendar.getInstance();
			cal.add(Calendar.DATE, -7);
			inParam.put("S_START_DATE", StringUtil.nvl((String)inParam.get("S_START_DATE"), format.format(cal.getTime())));
			//조회조건 기간 처리 end
			
			inParam.put("PAGE_NO", StringUtil.nvl((String)inParam.get("PAGE_NO"), "1"));
			int nowPage = StringUtil.nvlInt((String)inParam.get("PAGE_NO"), 1);
			int rowTotal = adminAppDao.selectListAppCount(inParam);
			
			PageNavigation pageNav= new PageNavigation(nowPage, rowTotal, CmmnCnst.ADM_LIST_SIZE, CmmnCnst.ADM_BLOCK_SIZE );
			mm.put("PAGE_NO", nowPage);
			mm.put("pageNav", pageNav);
		    inParam.put("START_ROW"	,pageNav.getStartRow());
		    inParam.put("END_ROW"	,pageNav.getEndRow());

			LoggerUtil.writeMap(inParam);
			mm.put("selectListApp",adminAppDao.selectListApp(inParam));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mm;
	}
	
	/**
	 * <pre>
	 * 어플리케이션 버전 정보 상세 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 4:24:44
	 * @author J.K.CHOI
	 * @see @see com.ssocio.sharing.service.admin.AdminAppService#selectApp(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public ModelMap selectApp(Map<String, Object> inParam) throws Exception{
		ModelMap mm = new ModelMap();
		try {
			mm.put("selectApp",adminAppDao.selectApp(inParam));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mm;
	}
	
	/**
	 * <pre>
	 * 어플리케이션 버전 정보 등록
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 3:21:24
	 * @author J.K.CHOI
	 * @see @see com.ssocio.sharing.service.admin.AdminAppService#insertAppReg(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public int insertAppReg(Map<String, Object> inParam) throws Exception {
		int outParam = 0;
		try {
			LoggerUtil.writeMap(inParam);
			outParam = adminAppDao.insertAppReg(inParam);					//어플리케이션 버전 정보정보 등록
			
		}catch (Exception e) {
			throw e;
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 어플리케이션 버전 정보 수정
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 3:33:26
	 * @author J.K.CHOI
	 * @see @see com.ssocio.sharing.service.admin.AdminAppService#updateAppReg(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public int updateAppReg(Map<String, Object> inParam) throws Exception {
		int outParam = 0;
		try {
			LoggerUtil.writeMap(inParam);
			
			outParam = adminAppDao.updateAppReg(inParam);		//어플리케이션 버전 정보정보 수정
		}catch (Exception e) {
			throw e;
		}
		return outParam;
	}
	
	
	/**
	 * <pre>
	 * 어플리케이션 버전 정보 삭제
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 3:21:24
	 * @author J.K.CHOI
	 * @see @see com.ssocio.sharing.service.admin.AdminAppService#insertAppReg(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public int deleteApp(Map<String, Object> inParam) throws Exception {
		int outParam = 0;
		try {
			outParam = adminAppDao.deleteApp(inParam);					//어플리케이션 버전 정보정보 삭제
			
		}catch (Exception e) {
			throw e;
		}
		return outParam;
	}
}
