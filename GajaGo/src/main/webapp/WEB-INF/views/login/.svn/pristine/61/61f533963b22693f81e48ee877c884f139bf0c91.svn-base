package com.ssocio.sharing.dao.admin;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.web.RspnsCnst;

/**
 * <pre>
 * 회원관리 Dao
 * 회원관리 Dao
 * @author Y.I.Chun
 * @version
 * @since 2015. 7. 6. 오후 6:41:07
 * @see
 * @History
 *  Date          |    author    | 변경내용
 *	2015. 7. 6.   |    Y.I.Chun  | 신규
 * @Todo
 * </pre>
 */
@Component
public class AdminMberDao {
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminMberDao.class);

	@Resource(name="sqlSessionAdmin")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}

	/**
	 * <pre>
	 * 회원건수 조회
	 * 회원건수를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public Map<String, Object> selectMberTotalCnt(Map<String, Object> inParam) throws Exception{
		logger.info("selectMberTotalCnt Start");
		return sqlSession.selectOne("adminMberMapper.selectMberTotalCnt", inParam);
	}

	/**
	 * <pre>
	 * 회원검색건수 조회
	 * 회원검색건수를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public int selectMberSearchCnt(Map<String, Object> inParam) throws Exception{
		logger.info("selectMberSearchCnt Start");
		return sqlSession.selectOne("adminMberMapper.selectMberSearchCnt", inParam);
	}

	/**
	 * <pre>
	 * 회원리스트 조회
	 * 회원리스트정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectMberList (Map<String, Object> inParam) throws Exception{
		logger.info("selectMberList Start");
		return sqlSession.selectList("adminMberMapper.selectMberList", inParam);
	}

	/**
	 * <pre>
	 * 회원리스트 엑셀
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public Object selectMberListToExcel(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectMberListToExcel Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminMberMapper.selectMberListToExcel", inParam);
		} catch (Exception e) {
			logger.error("selectMberListToExcel DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	 }

	/**
	 * <pre>
	 * 회원상세정보 조회
	 * 회원상세정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public Map<String, Object> selectMberInfo (Map<String, Object> inParam) throws Exception{
		logger.info("selectMberInfo Start");
		return sqlSession.selectOne("adminMberMapper.selectMberInfo", inParam);
	}

	/**
	 * <pre>
	 * 회원상세정보 수정
	 * 회원상세정보를 수정 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public void updateMberInfo (Map<String, Object> inParam) throws Exception{
		logger.info("updateMberInfo Start");
		sqlSession.update("adminMberMapper.updateMberInfo", inParam);
	}

	/**
	 * <pre>
	 * 회원활동정보 조회
	 * 회원활동정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public Map<String, Object> selectMberActInfo (Map<String, Object> inParam) throws Exception{
		logger.info("selectMberActInfo Start");
		return sqlSession.selectOne("adminMberMapper.selectMberActInfo", inParam);
	}

	/**
	 * <pre>
	 * 회원등급정보 조회
	 * 회원등급정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public Map<String, Object> selectMberLvlInfo (Map<String, Object> inParam) throws Exception{
		logger.info("selectMberLvlInfo Start");
		return sqlSession.selectOne("adminMberMapper.selectMberLvlInfo", inParam);
	}

	/**
	 * <pre>
	 * 회원쿠폰건수 조회
	 * 회원쿠폰건수 조회합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public int selectMberCpnSearchCnt (Map<String, Object> inParam) throws Exception{
		logger.info("selectMberCpnSearchCnt Start");
		return sqlSession.selectOne("adminMberMapper.selectMberCpnSearchCnt", inParam);
	}

	/**
	 * <pre>
	 * 회원쿠폰리스트 조회
	 * 회원쿠폰리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectMberCpnList (Map<String, Object> inParam) throws Exception{
		logger.info("selectMberCpnList Start");
		return sqlSession.selectList("adminMberMapper.selectMberCpnList", inParam);
	}

	/**
	 * <pre>
	 * 회원포인트건수 조회
	 * 회원포인트건수 조회합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public int selectMberPointSearchCnt (Map<String, Object> inParam) throws Exception{
		logger.info("selectMberPointSearchCnt Start");
		return sqlSession.selectOne("adminMberMapper.selectMberPointSearchCnt", inParam);
	}

	/**
	 * <pre>
	 * 회원포인트리스트 조회
	 * 회원포인트리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectMberPointList (Map<String, Object> inParam) throws Exception{
		logger.info("selectMberPointList Start");
		return sqlSession.selectList("adminMberMapper.selectMberPointList", inParam);
	}

	/**
	 * <pre>
	 * 포인트 요약 조회
	 * 포인트요약정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public Map<String, Object> selectMberPointSummary (Map<String, Object> inParam) throws Exception{
		logger.info("selectMberPointSummary Start");
		return sqlSession.selectOne("adminMberMapper.selectMberPointSummary", inParam);
	}

	/**
	 * <pre>
	 * 포인트  추가
	 * 포인트를 추가 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public void insertMberPoint (Map<String, Object> inParam) throws Exception{
		logger.info("insertMberPoint Start");
		sqlSession.insert("adminMberMapper.insertMberPoint", inParam);
	}

	/**
	 * <pre>
	 * 포인트  추가
	 * 포인트를 추가 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public void updateMberPoint (Map<String, Object> inParam) throws Exception{
		logger.info("updateMberPoint Start");
		sqlSession.insert("adminMberMapper.updateMberPoint", inParam);
	}

	/**
	 * <pre>
	 * 신용점수건수 조회
	 * 신용점수건수 조회합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public int selectMberCrePointSearchCnt (Map<String, Object> inParam) throws Exception{
		logger.info("selectMberCrePointSearchCnt Start");
		return sqlSession.selectOne("adminMberMapper.selectMberCrePointSearchCnt", inParam);
	}

	/**
	 * <pre>
	 * 신용점수리스트 조회
	 * 신용점수리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectMberCrePointList (Map<String, Object> inParam) throws Exception{
		logger.info("selectMberCrePointList Start");
		return sqlSession.selectList("adminMberMapper.selectMberCrePointList", inParam);
	}

	/**
	 * <pre>
	 * 회원경고건수 조회
	 * 회원경고건수 조회합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public int selectMberAlertSearchCnt (Map<String, Object> inParam) throws Exception{
		logger.info("selectMberAlertSearchCnt Start");
		return sqlSession.selectOne("adminMberMapper.selectMberAlertSearchCnt", inParam);
	}

	/**
	 * <pre>
	 * 회원경고리스트 조회
	 * 회원경고리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectMberAlertList (Map<String, Object> inParam) throws Exception{
		logger.info("selectMberAlertList Start");
		return sqlSession.selectList("adminMberMapper.selectMberAlertList", inParam);
	}

	/**
	 * <pre>
	 * 회원경고 요약 조회
	 * 회원경고요약정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectMberAlertSummary (Map<String, Object> inParam) throws Exception{
		logger.info("selectMberAlertSummary Start");
		return sqlSession.selectList("adminMberMapper.selectMberAlertSummary", inParam);
	}

	/**
	 * <pre>
	 * 회원약관동의 리스트 조회
	 * 회원약관동의 리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectMberAgrList (Map<String, Object> inParam) throws Exception{
		logger.info("selectMberAgrList Start");
		return sqlSession.selectList("adminMberMapper.selectMberAgrList", inParam);
	}

	/**
	 * <pre>
	 * 상품형황 건수 조회
	 * 상품형황 건수 를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectProdCntByType (Map<String, Object> inParam) throws Exception{
		logger.info("selectProdCntByType Start");
		return sqlSession.selectList("adminMberMapper.selectProdCntByType", inParam);
	}

	/**
	 * <pre>
	 * 미니샵 정보 조회
	 * 미니샵정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public Map<String, Object> selectMiniShopInfo (Map<String, Object> inParam) throws Exception{
		logger.info("selectMiniShopInfo Start");
		return sqlSession.selectOne("adminMberMapper.selectMiniShopInfo", inParam);
	}


	/**
	 * <pre>
	 * 미니샵 수정
	 * 미니샵정보를 수정합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public void updateMiniShopInfo (Map<String, Object> inParam) throws Exception{
		logger.info("updateMiniShopInfo Start");
		sqlSession.update("adminMberMapper.updateMiniShopInfo", inParam);
	}


	/**
	 * <pre>
	 * 상품형황 건수 조회
	 * 상품형황 건수 를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
//	public List<Map<String, Object>> selectProdList (Map<String, Object> inParam) throws Exception{
//		logger.info("selectProdList Start");
//		return sqlSession.selectList("adminMberMapper.selectProdList", inParam);
//	}

	/**
	 * <pre>
	 * 판매자 수정
	 * 판매자정보를 수정합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public void updateSellerInfo (Map<String, Object> inParam) throws Exception{
		logger.info("updateSellerInfo Start");
		sqlSession.insert("adminMberMapper.updateSellerInfo", inParam);
	}

	/**
	 * <pre>
	 * 교환반품합계건수 조회
	 * 교환반품합계건수를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectChgRtnProdTotCnt (Map<String, Object> inParam) throws Exception{
		logger.info("selectChgRtnProdTotCnt Start");
		return sqlSession.selectList("adminMberMapper.selectChgRtnProdTotCnt", inParam);
	}

	/**
	 * <pre>
	 * 교환반품건수 조회
	 * 교환반품건수를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectChgRtnProdCnt (Map<String, Object> inParam) throws Exception{
		logger.info("selectChgRtnProdCnt Start");
		return sqlSession.selectList("adminMberMapper.selectChgRtnProdCnt", inParam);
	}

	/**
	 * <pre>
	 * 쿠폰 팝업 조회
	 * 쿠폰건수를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public Map<String, Object> selectCouponCnt (Map<String, Object> inParam) throws Exception{
		logger.info("selectChgRtnProdCnt Start");
		return sqlSession.selectOne("adminMberMapper.selectCouponCnt", inParam);
	}

	/**
	 * <pre>
	 * 가입상태 변경
	 * 가입상태를 변경 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 *
	 * </pre>
	 */
	public int updateMberStat(Map<String, Object> inParam) throws Exception{
		logger.info("updateMberStat Start");
		return sqlSession.update("adminMberMapper.updateMberStat", inParam);
	}

	public int updateMberReason(Map<String, Object> inParam) throws Exception{
		logger.info("updateMberReason Start");
		return sqlSession.update("adminMberMapper.updateMberReason", inParam);
	}

	public int insertMberHist(Map<String, Object> inParam) throws Exception{
		logger.info("insertMberHist Start");
		return sqlSession.update("adminMberMapper.insertMberHist", inParam);
	}

	public List<Map<String, Object>> selectCodeList (String inParam) throws Exception{
		logger.info("selectCodeList Start");
		return sqlSession.selectList("adminMberMapper.selectCodeList", inParam);
	}

	public int selectMberPointCnt(Map<String, Object> inParam) throws Exception{
		logger.info("selectMberPointCnt Start");
		return sqlSession.selectOne("adminMberMapper.selectMberPointCnt", inParam);
	}

	public List<Map<String, Object>> selectPointList(Map<String, Object> inParam) throws Exception {
		logger.info("selectPointList Start");
		return sqlSession.selectList("adminMberMapper.selectPointList", inParam);
	}

	public Map<String, Object> selectPointListSummary(Map<String, Object> inParam) throws Exception{
		logger.info("selectPointListSummary Start");
		return sqlSession.selectOne("adminMberMapper.selectPointListSummary", inParam);
	}

	public int selectpath(Map<String, Object> inParam) {
		logger.info("selectPointListSummary Start");
		return sqlSession.selectOne("adminMberMapper.selectpath", inParam);
	}

	public List<Map<String, Object>> selectMberHistList(Map<String, Object> inParam) throws Exception {
		logger.info("selectMberHistList Start");
		return sqlSession.selectList("adminMberMapper.selectMberHistList", inParam);
	}

	public void updateCmpnyImg(Map<String, Object> inParam) {

		sqlSession.update("adminMberMapper.updateCmpnyImg", inParam);
	}

	public int selectMberAccCnt(Map<String, Object> inParam) throws Exception{
		logger.info("selectMberAccCnt Start");
		return sqlSession.selectOne("adminMberMapper.selectMberAccCnt", inParam);
	}

	public List<Map<String, Object>> selectMberAccList(Map<String, Object> inParam) throws Exception {
		logger.info("selectMberAccList Start");
		return sqlSession.selectList("adminMberMapper.selectMberAccList", inParam);
	}

	public int selectMberAccListCnt(Map<String, Object> inParam) throws Exception{
		logger.info("selectMberAccListCnt Start");
		return sqlSession.selectOne("adminMberMapper.selectMberAccListCnt", inParam);
	}

	public int selectMberSusCnt3(Map<String, Object> inParam) {
		return sqlSession.selectOne("adminMberMapper.selectMberSusCnt3", inParam);
	}

	public List<Map<String, Object>> selectMberSusList(Map<String, Object> inParam) {
		return sqlSession.selectList("adminMberMapper.selectMberSusList", inParam);
	}

	public Object selectMberCodeList() {
		return sqlSession.selectList("adminMberMapper.selectMberCodeList");
	}

	public int updateMyminiInfoReg(Map<String, Object> inParam) {
		return sqlSession.insert("adminMberMapper.updateMyminiInfoReg", inParam);
	}
}