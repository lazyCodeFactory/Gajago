package com.ssocio.sharing.controller.mobile;

import java.net.URLEncoder;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.service.web.MobileMyWishService;
import com.ssocio.sharing.vo.web.WebSession;

/**
 * <pre>
 * 위시리스트 컨트롤러
 * 위시리스트를 위한 컨트롤러
 * @author 
 * @version
 * @since 
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * @비고
 * </pre>
 */
@Controller
public class MobileMyWishController extends MobileReferController {

	private static final Logger logger = LoggerFactory.getLogger(MobileMyWishController.class);
	
	@Autowired
	private MobileMyWishService mobileMyWishService;
	
	/**
	 * 위시 카테고리 조회
	 */
	@RequestMapping("/mobile/myWish/getMyWishList.do")
	public ModelAndView getMyWishList(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		if(request.getSession().getAttribute("user")==null){
			String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
			return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
		}
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			mav.addObject("result", mobileMyWishService.getMyWishList(inParam, user));
			mav.addObject("params", inParam);
			mav.setViewName("web/myPage/getMyWishList");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	/**
	 * 위시 카테고리 타이틀 등록
	 */
	@RequestMapping("/mobile/myWish/newMyWishTitle.do")
	public @ResponseBody String newMyWishTitle(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		//ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		String result = "";
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			// 타이틀 등록
			JSONObject jsonObj = new JSONObject() ;
			jsonObj.put("result", mobileMyWishService.newMyWishTitle(inParam, user));
			result = jsonObj.toString();
			logger.debug("### result	:["+result	+"] >>>>");
			
			//mav.addObject("result", mobileMyWishService.getMyWishList(inParam, user));
			//mav.addObject("params", inParam);
			//mav.setViewName("web/myPage/getMyWishList");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	
	/**
	 * 위시리스트 타이틀 삭제 처리
	 */
	@RequestMapping("/mobile/myWish/deleteMyWish.do")
	public @ResponseBody String deleteMyWish(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		LoggerUtil.writeMap(inParam);
		String result = "";
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			
			mobileMyWishService.deleteMyWish(inParam, user);
			JSONObject jsonObj = new JSONObject() ;
			jsonObj.put("result", "정상처리되었습니다.");
			result = jsonObj.toString();
			logger.debug("### result	:["+result	+"] >>>>");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	/**
	 * 위시리스트 타이틀 명 변경 처리
	 */
	@RequestMapping("/mobile/myWish/renameMyWish.do")
	public @ResponseBody String renameMyWish(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		LoggerUtil.writeMap(inParam);
		String result = "";
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			
			mobileMyWishService.renameMyWish(inParam, user);
			JSONObject jsonObj = new JSONObject() ;
			jsonObj.put("result", "정상처리되었습니다.");
			result = jsonObj.toString();
			logger.debug("### result	:["+result	+"] >>>>");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	
	/**
	 * 위시 상세조회 조회
	 */
	@RequestMapping("/mobile/myWish/detailMyWishList.do")
	public ModelAndView detailMyWishList(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		if(request.getSession().getAttribute("user")==null){
			String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
			return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
		}
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			mav.addObject("result", mobileMyWishService.detailMyWishList(inParam, user));
			mav.addObject("params", inParam);
			mav.setViewName("web/myPage/detailMyWishList");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	/**
	 * 위시 상세조회 조회 페이징
	 */
	@RequestMapping("/mobile/myWish/detailMyWishListPage.do")
	public ModelAndView detailMyWishListPage(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		if(request.getSession().getAttribute("user")==null){
			String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
			return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
		}
		ModelAndView mav = new ModelAndView("jsonView");
		LoggerUtil.writeMap(inParam);
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			mav.addObject("result", mobileMyWishService.detailMyWishList(inParam, user).get("myWishDtl"));
			//mav.addObject("params", inParam);
			//mav.setViewName("web/myPage/detailMyWishList");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	/**
	 * 위시리스트 상세 개별삭제 처리
	 */
	@RequestMapping("/mobile/myWish/deleteMyWishProd.do")
	public @ResponseBody String deleteMyWishProd(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		LoggerUtil.writeMap(inParam);
		String result = "";
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			
			mobileMyWishService.deleteMyWishProd(inParam, user);
			JSONObject jsonObj = new JSONObject() ;
			jsonObj.put("result", "정상처리되었습니다.");
			result = jsonObj.toString();
			logger.debug("### result	:["+result	+"] >>>>");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	/**
	 * 위시리스트 상세 전체삭제 처리
	 */
	@RequestMapping("/mobile/myWish/deleteMyWishProdAll.do")
	public @ResponseBody String deleteMyWishProdAll(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		LoggerUtil.writeMap(inParam);
		String result = "";
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			
			mobileMyWishService.deleteMyWishProdAll(inParam, user);
			JSONObject jsonObj = new JSONObject() ;
			jsonObj.put("result", "정상처리되었습니다.");
			result = jsonObj.toString();
			logger.debug("### result	:["+result	+"] >>>>");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	
	/**
	 * 
	 * <pre>
	 * 설명 : 위시 담기 버튼 클리 시 호출되는 requestMapping 메소드
	 * 설명 : 해당 사용자의 wish 카테고리 목록 조회 수 담기 화면으로 이동한다..
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 28. 오후 4:00:55
	 * @author WOOK.KIM
	 * @see
	 * </pre>
	 */
	@RequestMapping("/mobile/myWish/insertWish.do")
	public ModelAndView insertWish(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE insertWish END☆★☆★☆★☆★☆★☆★☆");
		LoggerUtil.writeMap(inParam);
		ModelAndView mav = new ModelAndView("web/myPage/insertWish");
		try {
			
			if(request.getSession().getAttribute("user")==null){
				
				logger.debug("세션이 끊어졌습니다. 로그인 화면으로 이동합니다.");
				
				String returnUrl = "/mobile/myWish/insertWish.do?";
				return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
			}
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			
			logger.info("MBER_SEQ[ " + user.getMBER_SEQ() + "]");
			
			int curPage = StringUtil.nvlInt((String)inParam.get("CUR_PAGE"), 1);
			inParam.put("CUR_PAGE", curPage);
			
			mav.addObject("result", mobileMyWishService.selectListWishCtry(user.getMBER_SEQ(), curPage));
			mav.addObject("inParam", inParam);
		}catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE insertWish END☆★☆★☆★☆★☆★☆★☆");
		
		return mav;
	}
	
	/**
	 * 
	 * <pre>
	 * 설명 : 위시 담기에서 담기 클릭 시 호출되는 requestMapping 메소드
	 * 설명 : ajax로 호출됨.
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 28. 오후 4:02:06
	 * @author WOOK.KIM
	 * @see
	 * </pre>
	 */
	@RequestMapping("/mobile/myWish/insertWishReg.do")
	public ModelAndView insertWishReg(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE insertWish END☆★☆★☆★☆★☆★☆★☆");
		LoggerUtil.writeMap(inParam);
		ModelAndView mav = new ModelAndView("jsonView");
		try{
			
			if(request.getSession().getAttribute("user")==null){
				
				logger.debug("세션이 끊어졌습니다. 로그인 화면으로 이동합니다.");
				
				String returnUrl = "/mobile/myWish/insertWish.do?";
				return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
			}
			WebSession session = (WebSession)request.getSession().getAttribute("user");
			
			logger.info("MBER_SEQ[ " + session.getMBER_SEQ() + "]");
			inParam.put("MBER_SEQ", session.getMBER_SEQ());
	
			int retVal = mobileMyWishService.insertWish(inParam);
			//	0: alreay Exist , 1: success , 2:fail
			mav.addObject("data", retVal);
		}catch (Exception e) {
			e.printStackTrace();
		}		
		logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE insertWish END☆★☆★☆★☆★☆★☆★☆");
		
		return mav;
	}

	/**
	 * 
	 * <pre>
	 * 설명 : 위시 담기에서 카테고리 추가 시 호출되는 requestMapping 메소드
	 * 설명 : ajax로 호출됨.
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 28. 오후 4:02:06
	 * @author WOOK.KIM
	 * @see
	 * </pre>
	 */
	@RequestMapping("/mobile/myWish/insertWishCtryReg.do")
	public ModelAndView insertWishCtryReg(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE insertWishCtryReg Start☆★☆★☆★☆★☆★☆★☆");
		LoggerUtil.writeMap(inParam);
		ModelAndView mav = new ModelAndView("jsonView");
		try{
			WebSession session = (WebSession)request.getSession().getAttribute("user");
			logger.info("MBER_SEQ[ " + session.getMBER_SEQ() + "]");
			inParam.put("MBER_SEQ", session.getMBER_SEQ());
			
			mav.addObject("data", mobileMyWishService.insertWishCtry(inParam));
		}catch (Exception e) {
			e.printStackTrace();
		}		
		logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE insertWishCtryReg END☆★☆★☆★☆★☆★☆★☆");
		
		return mav;
	}
	
	@RequestMapping("/mobile/myWish/selectListCtryAjax.do")
	public ModelAndView selectListCtryAjax(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE insertWishCtryReg Start☆★☆★☆★☆★☆★☆★☆");
		LoggerUtil.writeMap(inParam);
		ModelAndView mav = new ModelAndView("jsonView");
		try{
			WebSession session = (WebSession)request.getSession().getAttribute("user");
			logger.info("MBER_SEQ[ " + session.getMBER_SEQ() + "]");
			
			int curPage = StringUtil.nvlInt((String)inParam.get("CUR_PAGE"), 1);
			
			mav.addObject("data", mobileMyWishService.selectListWishCtry(session.getMBER_SEQ(), curPage + 1));
		}catch (Exception e) {
			e.printStackTrace();
		}		
		logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE insertWishCtryReg END☆★☆★☆★☆★☆★☆★☆");
		
		return mav;
	}
	/**
	 * 등록전 이름체크
	 * 이름수정전 이름체크
	 */
	@RequestMapping("/mobile/myWish/nameAllCheckMyWish.do")
	public @ResponseBody String nameAllCheckMyWish(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		LoggerUtil.writeMap(inParam);
		String result = "";
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			JSONObject jsonObj = new JSONObject() ;
			jsonObj.put("result", mobileMyWishService.nameAllCheckMyWish(inParam, user).get("nameCnt"));
			result = jsonObj.toString();
			logger.debug("### result	:["+result	+"] >>>>");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	
}
