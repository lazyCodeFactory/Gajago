package com.ssocio.sharing.dao.admin;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.cmmn.web.RspnsCnst;

/**
 * <pre>
 * 설명
 * 설명
 * @author J.K.CHOI
 * @version
 * @since 2015. 8. 7. 오후 7:41:45
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 8. 7.	|	J.K.CHOI	|신규
 * @비고
 * </pre>
 */
@Component
public class AdminLevelDao {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminLevelDao.class);
	
	/* --------------------------------------------------------------------------
		# sqlSession 설정
		 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
		 -- 하나만 사용할 경우 @Autowired
	   --------------------------------------------------------------------------*/
	@Resource(name="sqlSessionAdmin")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	/**
	 * <pre>
	 * 공지사항 리스트 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 7. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectListLevel(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListLevel Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminLevelMapper.selectListLevel", inParam);
		} catch (Exception e) {
			logger.error("selectListLevel DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	 }
	
	/**
	 * <pre>
	 * 공지사항 상세 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 7. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object>  selectLevel(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectLevel Start");
		Map<String, Object> map = null;
		try {
			map =  sqlSession.selectOne("adminLevelMapper.selectLevel", inParam);
		} catch (Exception e) {
			logger.error("selectLevel DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}
	/**
	 * <pre>
	 * 파일정보 등록
	 * 파일정보를 테이블에 등록한다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 7. 오전 10:02:11
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public String insertFile(Map<String, Object> paramDto) throws Exception {
		logger.info("insertFile Start");
		
		sqlSession.insert("adminCommonMapper.insertFile", paramDto);
		
		//파일SEQ를 넘김
		return StringUtil.nvl(paramDto.get("FILE_SEQ").toString());
	}
	
	/**
	 * <pre>
	 * 공지사항등록
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 7. 오후 3:34:20
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int insertLevelReg(Map<String, Object> inParam) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("insertLevelReg Start");
		int outParam = 0;
		try {
			outParam = sqlSession.insert("adminLevelMapper.insertLevelReg", inParam);
		}
		catch (Exception e) {
			logger.error("insertLevelReg DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 공지사항 수정
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 7. 오후 3:34:26
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int updateLevelReg(Map<String, Object> inParam) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("updateLevelReg Start");
		int outParam = 0;
		try {
			outParam = sqlSession.update("adminLevelMapper.updateLevelReg", inParam);
		}
		catch (Exception e) {
			logger.error("updateLevelReg DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	

	
	/**
	 * <pre>
	 * 공지사항 삭제
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 7. 오후 3:34:26
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int deleteLevel(Map<String, Object> inParam) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("deleteLevel Start");
		int outParam = 0;
		try {
			outParam = sqlSession.delete("adminLevelMapper.deleteLevel", inParam);
		}
		catch (Exception e) {
			logger.error("deleteLevel DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
}
