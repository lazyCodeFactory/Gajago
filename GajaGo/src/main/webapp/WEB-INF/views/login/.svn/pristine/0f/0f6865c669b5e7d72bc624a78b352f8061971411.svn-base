package com.ssocio.sharing.dao.web;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.springframework.ui.ModelMap;

import com.ssocio.sharing.cmmn.web.RspnsCnst;

@Component
public class MobileCpnPointDao {
	
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(MobileCpnPointDao.class);		
	
	// --------------------------------------------------------------------------
	// # sqlSession 설정
	//   -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
	//   -- 하나만 사용할 경우 @Autowired
	// --------------------------------------------------------------------------
	@Resource(name="sqlSessionWeb")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	 
	public List<String> selectCpnGrpCd(Map<String, Object> inParam)throws Exception {
		logger.info("selectCpnGrpCd Start");
		List<String> list = null;
		try {
			list =  sqlSession.selectList("mobileCpnMapper.selectCpnGrpCd", inParam);
		} catch (Exception e) {
			logger.error("selectTerms DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}


	public List<String> selectCpnNo() throws Exception {
		logger.info("selectCpnGrpCd Start");
		List<String> cpnNoList = null;
		try {
			cpnNoList =  sqlSession.selectList("mobileCpnMapper.selectCpnNo");
		} catch (Exception e) {
			logger.error("selectTerms DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return cpnNoList;
	}


	public List<String> selectCpnIsNull(Map<String, Object> inParam) throws Exception{
		logger.info("selectCpnIsNull Start");
		List<String> list = null;
		try {
			list =  sqlSession.selectList("mobileCpnMapper.selectCpnIsNull", inParam);
		} catch (Exception e) {
			logger.error("selectCpnIsNull DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}


	public void updateCpn(Map<String, Object> inParam) throws Exception{
		logger.info("updateCpn Start");
		try {
			sqlSession.update("mobileCpnMapper.updateCpn", inParam);
		} catch (Exception e) {
			logger.error("updateCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}


	public void insertCpn(Map<String, Object> inParam) throws Exception{
		logger.info("insertCpn Start");
		try {
			sqlSession.insert("mobileCpnMapper.insertCpn", inParam);
		} catch (Exception e) {
			logger.error("insertCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}


	public List<Map<String, Object>>  selectCpnList(Map<String, Object> inParam) throws Exception{
		logger.info("selectCpnList Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("mobileCpnMapper.selectCpnList", inParam);
		} catch (Exception e) {
			logger.error("selectCpnList DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}


	public List<Map<String, Object>> selectCpnUselist(Map<String, Object> inParam) throws Exception {
		logger.info("selectCpnUselist Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("mobileCpnMapper.selectCpnUselist", inParam);
		} catch (Exception e) {
			logger.error("selectCpnUselist DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}


	public int selectPoint(Map<String, Object> inParam)  throws Exception{
		logger.info("selectPoint Start");
		int num = 0;
		try {
			num =  sqlSession.selectOne("mobileCpnMapper.selectPoint", inParam);
		} catch (Exception e) {
			logger.error("selectPoint DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return num;
	}


	public List<Map<String, Object>> selectPointList(Map<String, Object> inParam) throws Exception{
		logger.info("selectPointList Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("mobileCpnMapper.selectPointList", inParam);
		} catch (Exception e) {
			logger.error("selectPointList DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}


	public int cpnCheckDate(Map<String, Object> inParam) throws Exception{
		logger.info("cpnCheckDate Start");
		int num = 0;
		try {
			num =  sqlSession.selectOne("mobileCpnMapper.cpnCheckDate", inParam);
		} catch (Exception e) {
			logger.error("cpnCheckDate DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return num;
	}


	public int cpnCheckNot(Map<String, Object> inParam)throws Exception {
		logger.info("cpnCheckNot Start");
		int num = 0;
		try {
			num =  sqlSession.selectOne("mobileCpnMapper.cpnCheckNot", inParam);
		} catch (Exception e) {
			logger.error("cpnCheckNot DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return num;
	}


	public int cpnCheckReg(Map<String, Object> inParam)throws Exception  {
		logger.info("cpnCheckReg Start");
		int num = 0;
		try {
			num =  sqlSession.selectOne("mobileCpnMapper.cpnCheckReg", inParam);
		} catch (Exception e) {
			logger.error("cpnCheckReg DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return num;
	}


	public String cpnCheck(Map<String, Object> inParam) throws Exception {
		logger.info("cpnCheck Start");
		String no = "";
		try {
			no =  sqlSession.selectOne("mobileCpnMapper.cpnCheck", inParam);
		} catch (Exception e) {
			logger.error("cpnCheck DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return no;
	}


	public void insertMberCpnInfo(Map<String, Object> inParam) throws Exception{
		logger.info("insertMberCpnInfo Start");
		try {
			sqlSession.insert("mobileCpnMapper.insertMberCpnInfo", inParam);
		} catch (Exception e) {
			logger.error("insertMberCpnInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}


	public void updatePrintCpnInfo(Map<String, Object> inParam)throws Exception {
		logger.info("updatePrintCpnInfo Start");
		try {
			sqlSession.update("mobileCpnMapper.updatePrintCpnInfo", inParam);
		} catch (Exception e) {
			logger.error("updatePrintCpnInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}


}
