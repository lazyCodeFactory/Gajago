package com.ssocio.sharing.service.admin;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.ui.ModelMap;
import org.springframework.web.multipart.MultipartHttpServletRequest;

/**
 * <pre>
 * 상품 서비스 인터페이스
 * @author Y.I.Chun
 * @version 
 * @since 2015. 7. 6. 오전 09:20:24
 * @see 
 * @History 
 *  Date         |    author    | 변경내용  
 *	2015. 7. 6.  |    Y.I.Chun  | 신규 
 * @Todo
 * </pre>
 */
public interface AdminProdService {
	
	/**
	 * <pre>
	 * 상품리스트 조회
	 * 상품리스트정보를 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public ModelMap selectProdList(Map<String, Object> paramDto) throws Exception;
	
	/**
	 * <pre>
	 * 상품리스트정보 조회(Excel용)
	 * 상품리스트정보를 조회 합니다.(Excel용)
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectProdListExcel(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 상품등록 및 상세화면
	 * 상품등록 및 상세화면용 데이터를 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public ModelMap selectProdInfo(Map<String, Object> paramDto) throws Exception;
	
	
	/**
	 * <pre>
	 * 상품등록
	 * 상품정보를 등록합니다.
	 * @param req
	 * @param inParam
	 * @throws Exception
	 * @date 2015. 7. 22. 오후 2:52:29
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public String insertProdInfo(MultipartHttpServletRequest req, Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 상품수정
	 * 상품을 수정 합니다.
	 * @param req
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public void updateProdInfo(MultipartHttpServletRequest req, Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 판매자리스트 조회
	 * 판매자리스트정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	public ModelMap selectSellerList(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 정보고시상세리스트 조회
	 * 정보고시상세 리스트정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	public ModelMap selectItemDtlList(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 출하지리스트 조회
	 * 출하지 리스트정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	public ModelMap selectShipmentList(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 출하지 등록
	 * 출하지 정보를 등록 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public void insertShipment(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 출하지 수정
	 * 출하지 정보를 수정 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public void updateShipment(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 상품옵션 일괄 저장
	 * 상품옵션 일괄 저장 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 2. 오후 8:52:00
	 * @author SEKIM
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public ModelMap insertProdOption(Map<String, Object> paramDto) throws Exception;
	
	/**
	 * <pre>
	 * 상품 옵션 조회
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectProdOption(Map<String, Object> paramDto) throws Exception;
	
	/**
	 * <pre>
	 * 출하지별 상품 조회
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public ModelMap selectShipmentProdList(Map<String, Object> paramDto) throws Exception;
	
	/**
	 * <pre>
	 * 출하지 별 등록 상품 삭제
	 * 출하지에 등록된 상품을 삭제 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author SEKIM
	 * @비고
	 * 
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public ModelMap deleteShipmentProd(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 출하지에 추가할 상품 조회
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public ModelMap selectAddShipmentProdList(Map<String, Object> paramDto) throws Exception;
	
	/**
	 * <pre>
	 * 상품 옵션 조회
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public ModelMap insetShipmentProdMap(Map<String, Object> paramDto) throws Exception;
	
	public Map<String, Object> selectProdImg(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 상품 옵션 사용안함 처리
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public void deleteProdOpInfo(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 상품 옵션 조회
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public ModelMap selectOptionJson(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 렌탈상품일때 구매여부 조회하여 약관가능여부 체크
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public int selectCountProdInfo(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 상품옵션 사용갯수 조회
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public int selectopUseCnt(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 상품옵션 사용안함 처리
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 4:44:52
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public void updateProdOpUse(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 상품 등록 요청 조회
	 * 상품 등록 요청을 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 
	 * @author arkim
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public ModelMap selectProdWantList(Map<String, Object> inParam);

	/**
	 * <pre>
	 * 상품 등록 요청 건 처리 내용 Update
	 * 상품 등록 요청 건의 처리 내용을 Update 합니다. Y : 처리 완료
	 * @param request, inParam, wantSeq
	 * @return
	 * @throws Exception
	 * @date 
	 * @author arkim
	 * @param request 
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public void updateProdWantHandlingInfo(HttpServletRequest request, Map<String, Object> inParam, String[] wantSeq);
	 
}
