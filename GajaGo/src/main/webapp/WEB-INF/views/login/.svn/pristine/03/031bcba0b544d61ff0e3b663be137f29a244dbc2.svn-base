package com.ssocio.sharing.dao.admin;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.web.RspnsCnst;


/**
 * <pre>
 * 통신사 관리를 위한 DAO
 * 통신사 관리를 위한 DAO
 * @author J.S.LEE
 * @version
 * @since 2015. 7. 20. 오후 1:23:31
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 20.	|	S.B.LEE	|신규
 * @비고
 * </pre>
 */
@Component
public class AdminTelcomDao {
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminTelcomDao.class);
	
	// --------------------------------------------------------------------------
	// # sqlSession 설정
	//	 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
	//	 -- 하나만 사용할 경우 @Autowired
	// --------------------------------------------------------------------------
	@Resource(name="sqlSessionAdmin")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	/**
	 * <pre>
	 * 통신사 정보 가져오기 
	 * 통신사 정보 가져오기 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 20. 오후 1:23:46
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.dao.admin
	 * @비고
	 * 
	 * </pre>
	*/
	public Object selectListTelcomInfo(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListProd Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminTelcomMapper.selectListTelcomInfo",inParam);
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	/**
	 * <pre>
	 * 통신사 총 갯수 가져오기 
	 * 통신사 총 갯수 가져오기 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 20. 오후 1:23:18
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.dao.admin
	 * @비고
	 * 
	 * </pre>
	*/
	public int selectListTelCount(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListProd Start");
		Integer Cnt = 0;
		try {
			Cnt =  sqlSession.selectOne("adminTelcomMapper.selectListTelCount",inParam);
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return Cnt;
	}
	/**
	 * <pre>
	 * 통신사 등록하기
	 * 통신사 등록하기
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 20. 오후 1:23:10
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.dao.admin
	 * @비고
	 * 
	 * </pre>
	*/
	public Integer insertTelcomInfo(Map<String, Object> inParam)  throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListProd Start");
		Integer Cnt = 0;
		try {
			Cnt =  sqlSession.insert("adminTelcomMapper.insertTelcomInfo",inParam);
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return Cnt;
	}
	/**
	 * <pre>
	 * 통신사 업데이트 하기
	 * 통신사 업데이트 하기
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 20. 오후 1:23:01
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.dao.admin
	 * @비고
	 * 
	 * </pre>
	*/
	public Integer updateTelcomInfo(Map<String, Object> inParam)   throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListProd Start");
		Integer Cnt = 0;
		try {
			Cnt =  sqlSession.insert("adminTelcomMapper.updateTelcomInfo",inParam);
		} catch (Exception e) {
			logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return Cnt;
	}
	public int deleteSpTelcomTbReg(Map<String, Object> inParam)  throws Exception {
		return sqlSession.delete("adminTelcomMapper.deleteSpTelcomTbReg",inParam);
	}
	public int SelectChkPayPlan(Map<String, Object> inParam)throws Exception {
		int Cnt = 0;
		Cnt = sqlSession.selectOne("adminTelcomMapper.SelectChkPayPlan",inParam);
		//통신사 요금제가 존재 
		if(Cnt > 0){
			Cnt = sqlSession.delete("adminTelcomMapper.deletePayPlanTBreg",inParam);
		}else{
			Cnt = 1;
		}
		
		
		return Cnt;
	}

}
