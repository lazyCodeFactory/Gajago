package com.ssocio.sharing.controller.mobile;

import java.net.URLEncoder;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.service.web.MobileMyRecentProductService;
import com.ssocio.sharing.vo.web.WebSession;

/**
 * <pre>
 * 최근본상품 컨트롤러
 * 최근본상품를 위한 컨트롤러
 * @author 
 * @version
 * @since 
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * @비고
 * </pre>
 */
@Controller
public class MobileMyRecentProductController extends MobileReferController {

	private static final Logger logger = LoggerFactory.getLogger(MobileMyRecentProductController.class);
	
	@Autowired
	private MobileMyRecentProductService mobileMyRecentProductService;
	
	/**
	 * 최근본상품 화면으로 이동
	 */
	@RequestMapping("/mobile/myRecentProduct/getMyLatelyGoodsInfo.do")
	public ModelAndView getMyLatelyGoodsInfo(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		if(request.getSession().getAttribute("user")==null){
			String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
			return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
		}
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		logger.debug("### GUBUN		:"+inParam.get("GUBUN"));
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			logger.debug("### MBER_NM	:"+user.getMBER_NM());
			inParam.put("MBER_SEQ", user.getMBER_SEQ());
			mav.addObject("result", mobileMyRecentProductService.getMyLatelyGoodsInfo(inParam, user));
			mav.addObject("params", inParam);
			mav.addObject("MBER_NM", user.getMBER_NM());
			mav.setViewName("web/myPage/getMyLatelyGoodsInfo");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	/**
	 * 최근본상품 화면으로 이동(페이징)
	 */
	@RequestMapping("/mobile/myRecentProduct/getMyLatelyGoodsInfoPage.do")
	public ModelAndView getMyLatelyGoodsInfoPage(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		if(request.getSession().getAttribute("user")==null){
			String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
			return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
		}
		ModelAndView mav = new ModelAndView("jsonView");
		LoggerUtil.writeMap(inParam);
		logger.debug("### GUBUN		:"+inParam.get("GUBUN"));
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			logger.debug("### MBER_NM		:"+user.getMBER_NM());
			inParam.put("MBER_SEQ", user.getMBER_SEQ());
			mav.addObject("result", mobileMyRecentProductService.getMyLatelyGoodsInfo(inParam, user));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	/**
	 * 최근상품 삭제
	 */
	@RequestMapping("/mobile/myRecentProduct/deleteMyLately.do")
	public @ResponseBody String deleteMyLately(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		LoggerUtil.writeMap(inParam);
		String result = "";
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			
			mobileMyRecentProductService.deleteMyLately(inParam, user);
			JSONObject jsonObj = new JSONObject() ;
			jsonObj.put("result", "정상처리되었습니다.");
			result = jsonObj.toString();
			logger.debug("### result	:["+result	+"] >>>>");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	/**
	 * 최근상품 삭제
	 */
	@RequestMapping("/mobile/myRecentProduct/allDeleteMyLately.do")
	public @ResponseBody String allDeleteMyLately(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		LoggerUtil.writeMap(inParam);
		String result = "";
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			
			mobileMyRecentProductService.allDeleteMyLately(inParam, user);
			JSONObject jsonObj = new JSONObject() ;
			jsonObj.put("result", "정상처리되었습니다.");
			result = jsonObj.toString();
			logger.debug("### result	:["+result	+"] >>>>");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
}
