/**<pre>
 * 1. Project Name : SSOCIO
 * 2. Package Name : com.ssocio.sharing.dao.admin
 * 3. File Name	   : AdminPerfDao.java
 * 4. Date		   : 오후 4:05 2015-08-07
 * 5. Author	   : H.M.Yang
 * 6. Note		   :
 * </pre>
 */
package com.ssocio.sharing.dao.seller;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import com.ssocio.sharing.cmmn.web.RspnsCnst;

/**
 * <pre>
 * 실적관리 DAO
 * 실적관리 DAO
 * @author H.M.Yang
 * @version
 * @since 2015. 8. 7. 오후 4:05:00
 * @see
 * @History
 *  Date          |    author    | 변경내용
 *	2015. 8. 7.   |    H.M.Yang  | 신규
 * @Todo
 * </pre>
 */
@Component
public class SellerPerfDao {
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(SellerPerfDao.class);

	// --------------------------------------------------------------------------
	// # sqlSession 설정
	//	 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
	//	 -- 하나만 사용할 경우 @Autowired
	// --------------------------------------------------------------------------

	@Resource(name="sqlSessionSeller")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}

	/**
	 * <pre>
	 * 실적관리 기간(시간별) 조회
	 * 실적관리 기간(시간별) 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 8. 7. 오후 4:05:00
	 * @author H.M.Yang
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectListTimePerf(Map<String, Object> paramDto) throws Exception{
		logger.info("selectListTimePerf Start");
		return sqlSession.selectList("sellerPerfMapper.selectListTimePerf", paramDto);
	}

	/**
	 * <pre>
	 * 실적관리 기간(일별) 조회
	 * 실적관리 기간(일별) 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 8. 7. 오후 4:05:00
	 * @author H.M.Yang
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectListDayPerf(Map<String, Object> paramDto) throws Exception{
		logger.info("selectListDayPerf Start");
		return sqlSession.selectList("sellerPerfMapper.selectListDayPerf", paramDto);
	}

	/**
	 * <pre>
	 * 실적관리 기간(월별) 조회
	 * 실적관리 기간(월별) 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 8. 7. 오후 4:05:00
	 * @author H.M.Yang
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectListMonthPerf(Map<String, Object> paramDto) throws Exception{
		logger.info("selectlistMonthPerf Start");
		return sqlSession.selectList("sellerPerfMapper.selectListMonthPerf", paramDto);
	}


	/**
	 * <pre>
	 * 실적관리 기간(시간별) 엑셀 다운로드
	 * 실적관리 기간(시간별) 조회 결과를 엑셀파일로 다운로드 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 8. 7. 오후 4:05:00
	 * @author H.M.Yang
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectListTimePerfExcelDownload(Map<String, Object> paramDto) throws Exception{
		logger.info("selectListTimePerfExcelDownload Start");
		return sqlSession.selectList("sellerPerfMapper.selectListTimePerfExcelDownload", paramDto);
	}

	/**
	 * <pre>
	 * 실적관리 기간(일별) 엑셀 다운로드
	 * 실적관리 기간(일별) 조회 결과를 엑셀파일로 다운로드 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 8. 7. 오후 4:05:00
	 * @author H.M.Yang
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectListDayPerfExcelDownload(Map<String, Object> paramDto) throws Exception{
		logger.info("selectListDayPerfExcelDownload Start");
		return sqlSession.selectList("sellerPerfMapper.selectListDayPerfExcelDownload", paramDto);
	}

	/**
	 * <pre>
	 * 실적관리 기간(월별) 엑셀 다운로드
	 * 실적관리 기간(월별) 조회 결과를 엑셀파일로 다운로드 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 8. 7. 오후 4:05:00
	 * @author H.M.Yang
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectListMonthPerfExcelDownload(Map<String, Object> paramDto) throws Exception{
		logger.info("selectListMonthPerfExcelDownload Start");
		return sqlSession.selectList("sellerPerfMapper.selectListMonthPerfExcelDownload", paramDto);
	}

	/**
	 * <pre>
	 * 실적관리 카테고리 조회
	 * 실적관리 카테고리 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 8. 7. 오후 4:05:00
	 * @author H.M.Yang
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectListCtryPerf(Map<String, Object> paramDto) throws Exception{
		logger.info("selectListCtryPerf Start");
		return sqlSession.selectList("sellerPerfMapper.selectListCtryPerf", paramDto);
	}

	/**
	 * <pre>
	 * 실적관리 카테고리 검색 건수 조회
	 * 실적관리 카테고리 검색 건수를 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 8. 7. 오후 4:05:00
	 * @author H.M.Yang
	 * @비고
	 *
	 * </pre>
	 */
	public int selectCtryPerfSearchCnt(Map<String, Object> paramDto) throws Exception{
		logger.info("selectCtryPerfSearchCnt Start");
		return sqlSession.selectOne("sellerPerfMapper.selectCtryPerfSearchCnt", paramDto);
	}

	/**
	 * <pre>
	 * 실적관리 카테고리 엑셀 다운로드
	 * 실적관리 카테고리 조회 결과를 엑셀파일로 다운로드 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 8. 7. 오후 4:05:00
	 * @author H.M.Yang
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectListCtryPerfExcelDownload(Map<String, Object> paramDto) throws Exception{
		logger.info("selectListCtryPerfExcelDownload Start");
		return sqlSession.selectList("sellerPerfMapper.selectListCtryPerfExcelDownload", paramDto);
	}

	/**
	 * <pre>
	 * 실적관리 상품별 조회
	 * 실적관리 상품별 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 8. 7. 오후 4:05:00
	 * @author H.M.Yang
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectListProdPerf(Map<String, Object> paramDto) throws Exception{
		logger.info("selectListProdPerf Start");
		return sqlSession.selectList("sellerPerfMapper.selectListProdPerf", paramDto);
	}

	/**
	 * <pre>
	 * 실적관리 상품별 검색 건수 조회
	 * 실적관리 상품별 검색 건수를 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 8. 7. 오후 4:05:00
	 * @author H.M.Yang
	 * @비고
	 *
	 * </pre>
	 */
	public int selectProdPerfSearchCnt(Map<String, Object> paramDto) throws Exception{
		logger.info("selectProdPerfSearchCnt Start");
		return sqlSession.selectOne("sellerPerfMapper.selectProdPerfSearchCnt", paramDto);
	}

	/**
	 * <pre>
	 * 실적관리 상품별 엑셀 다운로드
	 * 실적관리 상품별 조회 결과를 엑셀파일로 다운로드 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 8. 7. 오후 4:05:00
	 * @author H.M.Yang
	 * @비고
	 *
	 * </pre>
	 */
	public List<Map<String, Object>> selectListProdPerfExcelDownload(Map<String, Object> paramDto) throws Exception{
		logger.info("selectListProdPerfExcelDownload Start");
		return sqlSession.selectList("sellerPerfMapper.selectListProdPerfExcelDownload", paramDto);
	}

}