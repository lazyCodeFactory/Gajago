package com.ssocio.sharing.dao.admin;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.cmmn.web.RspnsCnst;


@Component
public class AdminAutoSmsDao {
	// --------------------------------------------------------------------------
		// # Log 설정
		// --------------------------------------------------------------------------
		private static final Logger logger = LoggerFactory.getLogger(AdminAutoSmsDao.class);
		
		// --------------------------------------------------------------------------
		// # sqlSession 설정
		//	 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
		//	 -- 하나만 사용할 경우 @Autowired
		// --------------------------------------------------------------------------
		@Resource(name="sqlSessionAdmin")
		private SqlSession sqlSession;

		public void setSqlSession(SqlSession sqlSession) {
			this.sqlSession = sqlSession;
		}

		public List<Map<String, Object>> selectListAutoSms(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListAutoSms Start");
			List<Map<String, Object>> list = null;
			try {
				
				list =  sqlSession.selectList("adminAutoSmsMapper.selectListAutoSms",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}
		
		public Map<String, Object> selectAutoSms(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectAutoSms Start");
			Map<String, Object> obj = null;
			try {
				obj =  sqlSession.selectOne("adminAutoSmsMapper.selectAutoSms",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return obj;
		}
		
		public int updateAutoSms(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("updateAutoSms Start");
			int ret = 0;
			try {
				ret =  sqlSession.update("adminAutoSmsMapper.updateAutoSms",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return ret;
		}
		public int selectAutoCnt(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectAutoCnt Start");
			int ret = 0;
			try {
				ret =  sqlSession.selectOne("adminAutoSmsMapper.selectAutoCnt",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return ret;
		}
		
		public int insertAutoReg(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("insertAuto Start");
			int ret = 0;
			try {
				ret =  sqlSession.update("adminAutoSmsMapper.insertAuto",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return ret;
		}
}
