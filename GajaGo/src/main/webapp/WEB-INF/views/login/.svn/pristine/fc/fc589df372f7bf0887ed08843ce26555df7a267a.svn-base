package com.ssocio.sharing.controller.mobile;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.service.CommonService;
import com.ssocio.sharing.cmmn.util.CmmnCnst;
import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.service.web.WebSaleManageService;
import com.ssocio.sharing.vo.web.WebSession;

/**
 * <pre>
 * 메인 컨트롤러
 * 메인 처리를 위한 컨트롤러
 * @author Kang.h.c
 * @version
 * @since 2015. 8. 19
 * @see
 * @History
 * Date			|	author		| 변경 내용
 * 2015. 8. 19.	|	Kang.h.c	|신규
 * @비고
 * </pre>
 */
@Controller
@RequestMapping(value="/mobile/salemanageNoLogin")
public class MobileSaleManageNoLoginController extends MobileReferController {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(MobileSaleManageNoLoginController.class);

	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private WebSaleManageService webSaleManageService;


	/**
	 * <pre>
	 * 판매회원 체크 V2(로그인이 안되어있을수도 있기 때문에 만든 컨트롤러. 로그인체크를 자동으로 타지 않게 하기 위해, 중간 URL을 변경)
	 * 판매회원 체크
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 24
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.controller.web
	 * </pre>
	 */
	@RequestMapping("/checkMberRegGb.do")
	public ModelAndView checkMberRegGbV2(HttpServletRequest request, HttpServletResponse response) {
		
		logger.info("/mobile/salemanageV2/checkMberRegGbV2.do");
		logger.info("MobileSaleManageController.checkMberRegGbV2");
		

		logger.debug("request : " + request.getRequestURI());
		logger.debug("request : " + request.getRequestURL());

		
		

		ModelAndView mav = new ModelAndView("jsonView");

		// Session에서 로그인된 USER 정보 받기
		HttpSession session = request.getSession();
		
		
		// 비 로그인 회원
		if(session.getAttribute("user")==null){
			mav.addObject("rtnCd", "0");
			return mav;
		}
		
		WebSession webSession = (WebSession)session.getAttribute("user");
		String mberGbCd = webSession.getMBER_GB_CD();
		String mberRegGbCd = webSession.getMBER_REG_GB_CD();
		logger.info("mberGbCd : " + mberGbCd);
		logger.info("mberRegGbCd : " + mberRegGbCd);
		
		// 구매회원
		if( mberRegGbCd.equals(0) ){
			// 사업자
			if(mberGbCd.equals(1)){
				// 사업자 구매회원 alert
				mav.addObject("rtnCd", "1");
				return mav;
			}
			// 개인
			else{
				// showLayerPopup 처리
				mav.addObject("rtnCd", "2");
				return mav;
			}
		}
		// 판매회원
		else{
			// 사업자
			if(mberGbCd.equals(1)){
				// 사업자 판매회원 alert
				mav.addObject("rtnCd", "3");
				return mav;
			}
			// 개인
			else{
				// 등록 가능
				mav.addObject("rtnCd", "4");
				return mav;
			}
		}
		




		
		
//		if (CmmnCnst.cmmn1.equals(mberGbCd) && CmmnCnst.cmmn1.equals(mberRegGbCd)) {
//			mav.addObject("rtnCd", CmmnCnst.cmmnN);
//		}
//		else {
//			mav.addObject("rtnCd", CmmnCnst.cmmnY);
//		}

//		return mav;

	}

}
