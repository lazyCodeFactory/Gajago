package com.ssocio.sharing.dao.admin;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

/**
 * <pre>
 * 메인 Dao
 * 메인화면 Dao
 * @author Y.I.Chun
 * @version 
 * @since 2015. 7. 6. 오후 6:41:07
 * @see 
 * @History 
 *  Date          |    author    | 변경내용  
 *	2015. 7. 6.   |    Y.I.Chun  | 신규
 * @Todo
 * </pre>
 */
@Component
public class AdminMainDao {
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminMainDao.class);
	
	@Resource(name="sqlSessionAdmin")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	/**
	 * <pre>
	 * 주문현황 조회
	 * 메인화면에 표시할 주문현황를 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	public List<Map<String, Object>> selectOrderSituation (Map<String, Object> paramDto) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectOrderSituation Start");
		
		List<Map<String, Object>> result = null;
		try {
			result = sqlSession.selectList("adminLogMapper.selectOrderSituation", paramDto);
		}
		catch (Exception e) {
			logger.error("selectOrderSituation DB Error : " + e.toString());
			throw e;
		}
		
		return result;
	}
	
	/**
	 * <pre>
	 * 상품현황 조회
	 * 메인화면에 표시할 상품현황를 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	public List<Map<String, Object>> selectProdSituation (Map<String, Object> paramDto) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectProdSituation Start");
		
		List<Map<String, Object>> result = null;
		try {
			result = sqlSession.selectList("adminLogMapper.selectProdSituation", paramDto);
		}
		catch (Exception e) {
			logger.error("selectProdSituation DB Error : " + e.toString());
			throw e;
		}
		
		return result;
	}
	
	/**
	 * <pre>
	 * 문의현황 조회
	 * 메인화면에 표시할 문의현황를 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	public Map<String, Object> selectQnASituation (Map<String, Object> paramDto) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectQnASituation Start");
		
		Map<String, Object> result = null;
		try {
			result = sqlSession.selectOne("adminLogMapper.selectQnASituation", paramDto);
		}
		catch (Exception e) {
			logger.error("selectQnASituation DB Error : " + e.toString());
			throw e;
		}
		return result;
	}
	
	public List<Map<String, Object>> selectMenuList (Map<String, Object> paramDto) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectQnASituation Start");
		
		List<Map<String, Object>> result = null;
		try {
			result = sqlSession.selectList("adminMainMapper.selectMenuList", paramDto);
		}
		catch (Exception e) {
			logger.error("selectQnASituation DB Error : " + e.toString());
			throw e;
		}
		return result;
	}
	
	
	//
	// main 주문건수 / 주문금액
	//
    public List<Map<String, Object>> selectOrderCntList(Map<String, Object> paramDto) throws Exception {		
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectOrderCntList Start");
		
		List<Map<String, Object>> result = null;
		try {
			result = sqlSession.selectList("adminMainMapper.selectOrderCntList", paramDto);
		}
		catch (Exception e) {
			logger.error("selectOrderCntList DB Error : " + e.toString());
			throw e;
		}
		return result;
	}
	
	
	//
	// main 주문취소건수 / 주문취소금액
	//
    public List<Map<String, Object>> selectOrderCancelCntList(Map<String, Object> paramDto) throws Exception {		
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectOrderCancelCntList Start");
		
		List<Map<String, Object>> result = null;
		try {
			result = sqlSession.selectList("adminMainMapper.selectOrderCancelCntList", paramDto);
		}
		catch (Exception e) {
			logger.error("selectOrderCancelCntList DB Error : " + e.toString());
			throw e;
		}
		return result;
	}
		
	//
	// main 교환 반품 
	//
    public List<Map<String, Object>> selectOrderRtnCntList(Map<String, Object> paramDto) throws Exception {		
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectOrderRtnCntList Start");
		
		List<Map<String, Object>> result = null;
		try {
			result = sqlSession.selectList("adminMainMapper.selectOrderRtnCntList", paramDto);
		}
		catch (Exception e) {
			logger.error("selectOrderRtnCntList DB Error : " + e.toString());
			throw e;
		}
		return result;
	}
			
	//
	// main 상품 지표
	//
    public List<Map<String, Object>> selectProdCntList(Map<String, Object> paramDto) throws Exception {		
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectProdCntList Start");
		
		List<Map<String, Object>> result = null;
		try {
			result = sqlSession.selectList("adminMainMapper.selectProdCntList", paramDto);
		}
		catch (Exception e) {
			logger.error("selectOrderRtnCntList DB Error : " + e.toString());
			throw e;
		}
		return result;
	}
			    
	//
	// 문의 지표
	//
    public List<Map<String, Object>> selectQnaCntList(Map<String, Object> paramDto) throws Exception {		
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectQnaCntList Start");
		
		List<Map<String, Object>> result = null;
		try {
			result = sqlSession.selectList("adminMainMapper.selectQnaCntList", paramDto);
		}
		catch (Exception e) {
			logger.error("selectQnaCntList DB Error : " + e.toString());
			throw e;
		}
		return result;
	}
			    
    
}