package com.ssocio.sharing.controller.batch;


import java.util.HashMap;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ssocio.sharing.service.batch.BatchAdminPerfService;

/**
 * <pre>
 *
 *
 * @param request
 * @param response
 * @param inParam
 * @return
 * @throws Exception
 * @date 2015. 10. 12.
 * @author obiwan
 * </pre>
 */

@Controller
public class BatchAdminPerfController extends BatchReferController {

	private static final Logger logger = LoggerFactory.getLogger(BatchAdminPerfController.class);


	@Autowired
	BatchAdminPerfService batchAdminPerfService;

	/**
	 * <pre>
	 *
	 *
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 12.
	 * @author obiwan
	 * @see com.ssocio.sharing.controller.batch
	 * </pre>
	 */
	@ResponseBody
	@RequestMapping("/batchAdminPerf.do")
	public String batchCon() {
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("batchAdminPerf START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelMap modelMap = new ModelMap();
		String hist_seq = "";
		String err_dtl = "[OK]";
		String batch_nm = "BATCH_JOB_ADMIN_PERF"; // 공통 코드 파일 못 찾음
		Map<String, Object> map = new HashMap<String, Object>();

		try{
			logger.info("##### batch :: init #####");
			batchAdminPerfService.initBatch(batch_nm); // 배치조회이후 없으면 내역 생성
			logger.info("##### batch :: pre #####");
			hist_seq = batchAdminPerfService.preBatch(batch_nm, map);
		} catch (Exception e){
			e.printStackTrace();
			err_dtl += "::[InitBatchNPreBatch]"+e.toString();
		}

		// 기간별
		try {
			modelMap.put("dateCnt", batchAdminPerfService.batchAdminPerfDate(map)); // 실배치 수행
			err_dtl += modelMap.toString();
		} catch (Exception e) {
			e.printStackTrace();
			err_dtl += "::[batchAdminPerfDate]"+e.toString();
		}
		// 카테고리별
		try {
			logger.info("##### AdminPerfCtryBatch :: AdminPerfCtryBatch #####");
			modelMap.put("ctryCnt", batchAdminPerfService.batchAdminPerfCtry(map)); // 실배치 수행
			err_dtl += modelMap.toString();
		} catch (Exception e) {
			e.printStackTrace();
			err_dtl += "::[batchAdminPerfCtry]"+e.toString();
		}
		//  상품별
		try {
			logger.info("##### AdminPerfProdBatch :: AdminPerfProdBatch #####");
			modelMap.put("prodCnt", batchAdminPerfService.batchAdminPerfProd(map)); // 실배치 수행
			err_dtl += modelMap.toString();
		} catch (Exception e) {
			e.printStackTrace();
			err_dtl += "::[batchAdminPerfProd]"+e.toString();
		}
		//  회원별
		try {
			logger.info("##### AdminPerfMberBatch :: AdminPerfMberBatch #####");
			modelMap.put("mberCnt", batchAdminPerfService.batchAdminPerfMber(map)); // 실배치 수행
			err_dtl += modelMap.toString();
		} catch (Exception e) {
			e.printStackTrace();
			err_dtl += "::[batchAdminPerfMber]"+e.toString();
		}

		try {
			logger.info("##### batch :: post #####");
			batchAdminPerfService.postBatch(hist_seq, err_dtl);
		} catch (Exception e) {
			e.printStackTrace();
		}

		modelMap.put("result", err_dtl);
		return modelMap.toString();
	}

}
