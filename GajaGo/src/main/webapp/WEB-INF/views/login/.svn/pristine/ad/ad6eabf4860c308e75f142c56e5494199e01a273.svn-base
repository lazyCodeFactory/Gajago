/**
 *
 */
package com.ssocio.sharing.service.web;

import java.util.Map;

import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.ui.ModelMap;

import com.ssocio.sharing.vo.web.HeaderVO;
import com.ssocio.sharing.vo.web.WebSession;

/**
 * <pre>
 * 설명
 * 설명
 * @author S.B.LEE
 * @version
 * @since 2015. 8. 14. 오후 6:20:25
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 8. 14.	|	SEOKBAE	|신규
 * @비고
 * </pre>
 */
public interface WebCommonService {

	/**
	 * <pre>
	 * 로그인
	 * 모바일 사용자 로그인 처리를 한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 14. 오후 6:21:46
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Transactional
	public WebSession setLogin(Map<String, Object> inParam) throws Exception;
	public int getFailCnt(Map<String, Object> inParam) throws Exception;


	/**
	 * <pre>
	 * 로그인
	 * 모바일 사용자 로그인 처리를 한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 14. 오후 6:21:46
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Transactional
	public int checkPass(Map<String, Object> inParam) throws Exception;



	/**
	 * <pre>
	 * 로그인
	 * 모바일 사용자 페이스북 로그인 처리를 한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 18. 오후 8:59:50
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Transactional
	public WebSession setFacebookLogin(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 로그인
	 * 모바일 사용자 카카오톡 로그인 처리
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 22. 오후 9:32:55
	 * @author user
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Transactional
	public WebSession setKakaoLogin(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 아이디 찾기
	 * 개인회원 아이디 찾기
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 16. 오후 6:16:54
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Transactional
	public ModelMap selectFindId(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 아이디 찾기
	 * 사업자 회원 비밀 번호 찾기
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 18. 오후 1:44:04
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Transactional
	public ModelMap procFindIdBusiReg(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 비밀번호 찾기
	 * 개인회원 비밀번호 찾기
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 17. 오후 1:06:26
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Transactional
	public ModelMap procFindPwReg(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 사업자 비밀번호 찾기
	 * 사업자 비밀번호 찾기
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 21. 오후 5:58:36
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap procFindPwBusiReg(Map<String, Object> inParam) throws Exception;
	
	@Transactional 
	public int updateFailCnt(Map<String, Object> inParam) throws Exception;
	

	/**
	 * <pre>
	 * 분류별 카테고리 리스트 조회
	 * 분류별 카테고리 리스트정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 19. 오후 5:31:22
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Transactional
	public ModelMap selectCtryList(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 푸시아이디 등록하기
	 * 푸시아이디 등록하기
	 * @param headerObj
	 * @param bodyParam
	 * @return
	 * @exception
	 * @date 2015. 8. 20. 오후 5:04:55
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.service.web
	 * @비고
	 *
	 * </pre>
	*/
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public ModelMap insertPushIdreg(HeaderVO headerObj,
			Map<String, Object> bodyParam)throws Exception;

	/**
	 * <pre>
	 * 계좌인증
	 *
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 26. 오후 7:52:08
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Transactional
	public String acntConfirm(String niceUid, String svcPwd, String service, String strGbn
			, String strResId, String strNm, String strBankCode, String strAccountNo
			, String svcGbn, String strOrderNo, String svc_cls, String inq_rsn) throws Exception;

	/**
	 * <pre>
	 * 이메일 발송
	 * 회원가입 이메일 발송
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 7. 오후 3:26:16
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Transactional
	public String selectsiteIFUrl() throws Exception;


	public String makePw(Map<String, Object> inParam);


	public int selectUseStat(Map<String, Object> inParam) throws Exception;

	public String getAnsimUrl() throws Exception;
	public String selectShareUrl() throws Exception;
	
	public Map<String, Object> selectExtLand(String prodCode, String zipCd) throws Exception;
	
	
	@Transactional
	public int updateMberPoint(Map<String, Object> inParam) throws Exception;
	
	@Transactional
	public Map<String, Object> insertCpn(Map<String, Object> inParam);
	
}
