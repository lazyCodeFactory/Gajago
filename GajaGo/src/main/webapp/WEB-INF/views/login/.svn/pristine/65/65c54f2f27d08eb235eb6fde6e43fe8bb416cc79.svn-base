package com.ssocio.sharing.service.admin;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.ui.ModelMap;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.ssocio.sharing.cmmn.admin.util.CommonUtil;
import com.ssocio.sharing.cmmn.admin.util.FileUtil;
import com.ssocio.sharing.cmmn.util.CmmnCnst;
import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.cmmn.web.RspnsCnst;
import com.ssocio.sharing.dao.admin.AdminCommonDao;
import com.ssocio.sharing.dao.admin.AdminSmsDao;
import com.ssocio.sharing.vo.admin.PageNavigation;
/**
 * <pre>
 * admin 발송관리
 * 발송 관리를 윈한 서비스 
 * @author guitarhyo
 * @version
 * @since 2015. 7. 13. 오후 6:15:37
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 13.	|	guitarhyo	|신규
 * @비고
 * </pre>
 */
@Service
public class AdminSmsServiceImpl implements AdminSmsService {
	
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminSmsServiceImpl.class);

	// --------------------------------------------------------------------------
	// # DAO 설정
	// --------------------------------------------------------------------------
	@Resource(name="adminSmsDao")
	private AdminSmsDao adminSmsDao;
	@Resource(name="adminCommonDao")
	private AdminCommonDao adminCommonDao;

	@Override
	public ModelMap selectListSms(Map<String, Object> inParam) throws Exception {
		ModelMap mm = new ModelMap();
		try {
			
			inParam.put("param_snd_stat", StringUtil.nvl((String)inParam.get("param_snd_stat"), ""));
			
			
			//페이지번호
			inParam.put("PAGE_NO",StringUtil.nvl((String)inParam.get("PAGE_NO"), "1"));
			int nowPage = StringUtil.nvlInt((String)inParam.get("PAGE_NO"), 1);
			int rowCnt	= StringUtil.nvlInt((String)inParam.get("S_ROW_CNT"), 20);;
			inParam.put("S_ROW_CNT", rowCnt);
			
			String today = StringUtil.getCurrentDate();
			inParam.put("S_END_DATE", StringUtil.nvl((String)inParam.get("S_END_DATE"), today));
			
			SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd");
			Calendar cal = Calendar.getInstance();
			cal.add(Calendar.DATE, -7);
			inParam.put("S_START_DATE", StringUtil.nvl((String)inParam.get("S_START_DATE"), format.format(cal.getTime())));
			
			LoggerUtil.writeMap(inParam);
			
			
			int rowTotal = adminSmsDao.selectListSmsCount(inParam);
			
			
			PageNavigation pageNav= new PageNavigation(nowPage, rowTotal, rowCnt, CmmnCnst.ADM_BLOCK_SIZE);
			mm.put("PAGE_NO", nowPage);
			mm.put("pageNav", pageNav);
			inParam.put("START_ROW", pageNav.getStartRow());
			inParam.put("END_ROW", pageNav.getEndRow());
			
			mm.put("selectListSms",adminSmsDao.selectListSms(inParam));
			mm.put("params", inParam);
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mm;
	}


	@Override
	public ModelMap selectListSmsMberSearch(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();
		try {
			mm.put("selectListSmsMber",adminSmsDao.selectListSmsMberSearch(paramDto));
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mm;
	}


	@Override
	public ModelMap insertSmsReg(MultipartHttpServletRequest req, Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();
		int retCnt = 0;
		//파라미터 셋팅
		//최초 발송 대기
		paramDto.put("SND_STAT", "00");
		
		// 내용 길이에 따라 발송 종류 셋팅  -- 20150717 서대운팀장 요청으로 화면에서 구분값 보내기로함
//		if(paramDto.get("CONTENTS") != null && !"".equals(paramDto.get("CONTENTS")) ){
//			String contents = (String) paramDto.get("CONTENTS");
//			int cnt = contents.getBytes().length;
//			
//			if(80 > cnt){
//				paramDto.put("MSG_KIND", "S");
//			}
//			if(80 < cnt){
//				paramDto.put("MSG_KIND", "L");
//			}
//		}
		try {
			//파일 등록	
			Iterator<String> fns = req.getFileNames();
			  while(fns.hasNext()) {
			   String fn = fns.next();
			   logger.debug("FN="+fn);
			   MultipartFile file = req.getFile(fn);
			   
				if(file != null){
//					paramDto.put("MSG_KIND", "M");
					Map<String, Object> fileInfo= FileUtil.saveMultipartFile(file);//파일 저장				

					logger.debug("[I_FILE_TITLE]"+fileInfo.get("I_FILE_TITLE"));	//파일제목
					logger.debug("[I_FILE_NM]"+fileInfo.get("I_FILE_NM"));			//파일명
					logger.debug("[I_FILE_URL]"+fileInfo.get("I_FILE_URL"));		//파일URL
					logger.debug("[I_FILE_PATH]"+fileInfo.get("I_FILE_PATH"));		//파일경로
					logger.debug("[I_FILE_SIZE]"+fileInfo.get("I_FILE_SIZE"));		//파일사이즈
					logger.debug("[I_FILE_EXT]"+fileInfo.get("I_FILE_EXT"));		//파일확장자

					String FILE_SEQ = adminCommonDao.insertFile(fileInfo);	
					if(FILE_SEQ != null && !"".equals(FILE_SEQ)){
						paramDto.put("FILE_SEQ", FILE_SEQ);
					}else{
						paramDto.put("FILE_SEQ", FILE_SEQ);
					}
					
				
					
					
				}
			  }
			  
			 //발송 대상에 따라 발송건수 셋팅
			  if("00".equals(paramDto.get("SMS_GB_CD") )){
				  paramDto.put("SND_CNT",adminSmsDao.selectListSmsMberCnt(paramDto));
				  
			  }else if("01".equals(paramDto.get("SMS_GB_CD") )){
				  String user_length = (String) paramDto.get("user_length");
				  if("".endsWith(user_length)){user_length = "0";};
				  paramDto.put("SND_CNT",user_length);
			  }
			  
			  //즉시발송 및 예약발송에 따라 셋팅 후 등록
			 
			  if("Y".equals(paramDto.get("RESRV_YN") )){
				  String send_ymd =(String) paramDto.get("send_ymd");
				  send_ymd = send_ymd.replaceAll("-", "");
				  String send_hour  =(String) paramDto.get("send_hour");
				  String send_min  =(String) paramDto.get("send_min");
				  Date SND_DT = CommonUtil.toDateString(send_ymd+send_hour+send_min+"00", "yyyyMMddHHmmss");
				  paramDto.put("SND_DT", SND_DT);
				  
				  LoggerUtil.writeMap(paramDto);
				
			  }
			  
			
			  //발송 대상에 따라 발송 회원 등록
			  if("00".equals(paramDto.get("SMS_GB_CD") )){
				  retCnt= adminSmsDao.insertSms(paramDto);
			  }else if("01".equals(paramDto.get("SMS_GB_CD") )){
				  retCnt= adminSmsDao.insertSms(paramDto);
				  if(retCnt > 0){
					  if(!"".equals(paramDto.get("sms_snd_mber") )){
						  String sms_snd_mber = (String) paramDto.get("sms_snd_mber");
						  String[] mberList = sms_snd_mber.split("::");
							  for (int i = 0; i < mberList.length; i++) {
								String[] mber = mberList[i].split("\\|");
									if(mber.length > 1){
										if(mber[1].length()>9){
											paramDto.put("MBER_SEQ", mber[0]);
											paramDto.put("RCV_PHONE", mber[1]);
											retCnt = adminSmsDao.insertSmsMber(paramDto);
										}
									}
							  }
						  }
				  }
					 
				  } else if("11".equals(paramDto.get("SMS_GB_CD") )){
					  retCnt = adminSmsDao.updateSmsGrp(paramDto);
				  }
			 
		} catch (Exception e) {
			e.printStackTrace();
			throw new Exception(RspnsCnst.RC1033030001);
		}
		
		if(retCnt > 0){
			mm.put("retCode", "S");
		}else{
			mm.put("retCode", "F");
		}

		return mm;
	}


	@Override
	public ModelMap updateSms(Map<String, Object> paramDto) throws Exception {
		
		ModelMap mm = new ModelMap();
		int retCnt = 0;
		//파라미터 셋팅
		//발송 취소
		paramDto.put("SND_STAT", "01");

		try {
			
			retCnt = adminSmsDao.updateSms(paramDto);
			if(retCnt > 0){
				mm.put("retCode", "S");
			}else{
				mm.put("retCode", "F");
			}
			
		} catch (Exception e) {
			e.printStackTrace();
			
		}

		return mm;
	}
	@Override
	public ModelMap selectSms(Map<String, Object> paramDto) throws Exception {
		
		ModelMap mm = new ModelMap();
		Map<String, Object> retMap = null;
		String content = "";
		try {
			retMap = adminSmsDao.selectSms(paramDto);
			if(retMap != null){
				mm.put("selectSms",retMap);
				if("01".equals(retMap.get("SMS_GB_CD")) || "11".equals(retMap.get("SMS_GB_CD"))){
//					mm.put("selectListSmsMber",adminSmsDao.selectListSmsMber(paramDto)); //화면설계서에 없기에 주석
					mm.put("selectListSmsMberCount",adminSmsDao.selectListSmsMberCount(paramDto));
				}else{
					mm.put("selectListSmsMberCnt",adminSmsDao.selectListSmsMberCnt(paramDto));
				}
				
				String SND_STAT = (String)retMap.get("SND_STAT");
				logger.debug("selectSms[SND_STAT]"+SND_STAT);
//				if("00".equals(SND_STAT)){ //2015-07-20 수정페이지 필요없기에 주석
//					String SND_DT = (String)retMap.get("SND_DT");
//					if(SND_DT != null){
//						try {
//							String[] SND_DTArray = SND_DT.split(" ");
//							mm.put("send_ymd",SND_DTArray[0]);
//							String[] SND_DTArray2 = SND_DTArray[1].split(":");
//							mm.put("send_hour",SND_DTArray2[0]);
//							mm.put("send_min",SND_DTArray2[1]);
//						} catch (Exception e) {
//							e.printStackTrace();
//						}
//				
//					}
					
//				}else{
					content = (String) retMap.get("CONTENTS");
					content = content.replaceAll("\r\n", "<br>"); // 줄바꿈 처리
					content = content.replaceAll("\u0020", "&nbsp;"); // 스페이스바 처
//				}
				mm.put("params", paramDto);
				mm.put("SND_STAT",retMap.get("SND_STAT"));
			}
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mm;

	}
	
	public ModelMap uploadSmsExcel(MultipartHttpServletRequest req,
			Map<String, Object> inParam) throws Exception {


		MultipartFile excelFile = req.getFile("I_UPLOAD_FILE");
		ModelMap mm = new ModelMap();
		
		int uploadCount = 0;
		int jungCount = 0;
		int etcCount = 0;
		try {
			
			int insertCnt = adminSmsDao.insertSmsNone(inParam);
			if(insertCnt > 0){
				List<Map<String, Object>> excelData = CommonUtil.getOldExcelList(excelFile);

				for(Map<String, Object> rowData:excelData){
					
					String MBER_SEQ = (String) rowData.get("CELL0");
					if(MBER_SEQ != null && !"".equals(MBER_SEQ)){
							inParam.put("MBER_SEQ", MBER_SEQ);
//							inParam.put("SND_SEQ", uploadCount);
							try {
								int ret = adminSmsDao.insertSmsMber2(inParam);
								if(ret > 0){
									uploadCount++;
								}
							} catch (Exception e) {
								e.printStackTrace();
								jungCount++;
							}
					}else{
						etcCount++;
					}
					
					
					
				}
				
				mm.put("smsGrpSeq", String.valueOf(inParam.get("SMS_GRP_SEQ")));
			}
		
			
			mm.put("uploadCount", uploadCount);
			mm.put("jungCount", jungCount);
			mm.put("etcCount", etcCount);
			mm.put("totalCount", uploadCount+jungCount+etcCount);
//			logger.debug("@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#");
//			LoggerUtil.writeMap(mm);

		} catch (Exception e) {
			e.printStackTrace();
		}
		return mm;

	}
//public static void main(String[] args) {
//	String SND_DT = CommonUtil.toDateString("2015-07-20 20:09:00","yyyy-MM-dd HH:mm","yyyy-MM-dd HHmm");
//	System.out.println(SND_DT);
//	
//	String[] SND_DTArray = "2015-07-20 20:09".split(" ");
//	System.out.println(SND_DTArray[0]);
//}


}
