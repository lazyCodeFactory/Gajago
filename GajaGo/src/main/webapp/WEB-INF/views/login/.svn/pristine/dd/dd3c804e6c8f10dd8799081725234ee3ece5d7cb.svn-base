package com.ssocio.sharing.service.seller;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.ui.ModelMap;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.ssocio.sharing.cmmn.admin.util.FileUtil;
import com.ssocio.sharing.cmmn.seller.util.SellerCommonUtil;
import com.ssocio.sharing.dao.seller.SellerCommonDao;
import com.ssocio.sharing.dao.seller.SellerFindDao;
import com.ssocio.sharing.vo.admin.MenuInfoVO;
import com.ssocio.sharing.vo.seller.SellerSession;

/**
 * <pre>
 * @author S.B.LEE
 * @version
 * @since 2015. 6. 22.. 오후 4:19:34
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 6. 22.	|	S.B.LEE	|신규
 * @쌔애
 * </pre>
 */
@Service
public class SellerFindServiceImpl implements SellerFindService {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(SellerFindServiceImpl.class);

	// --------------------------------------------------------------------------
	// # DAO 설정
	// --------------------------------------------------------------------------
	@Resource(name="sellerFindDao")
	private SellerFindDao sellerFindDao;
	

	@Override
	public List<SellerSession> sellerFindId(Map<String, Object> inParam) throws Exception {
		logger.debug("[SellerFindServiceImpl.sellerFindId]");
		List<SellerSession> manager = null;
		try {
			String MBER_GB_CD = (String) inParam.get("MBER_GB_CD");
			if("0".equals(MBER_GB_CD)){
				manager = sellerFindDao.selectIndivFindId(inParam);

			}else if("1".equals(MBER_GB_CD)){
				manager = sellerFindDao.selectBusiFindId(inParam);
			}
			
		}catch (Exception e) {
			throw e;
		}
		return manager;
	}
	
	@Override
	public SellerSession sellerFindPw(Map<String, Object> inParam) throws Exception {
		logger.debug("[SellerFindServiceImpl.sellerFindPw]");
		SellerSession manager = null;
		try {
			String MBER_GB_CD = (String) inParam.get("MBER_GB_CD");
			if("0".equals(MBER_GB_CD)){
				manager = sellerFindDao.selectIndivFindPw(inParam);

			}else if("1".equals(MBER_GB_CD)){
				manager = sellerFindDao.selectBusiFindPw(inParam);
			}
			
		}catch (Exception e) {
			throw e;
		}
		return manager;
	}
	
	@Override
	public int updatePass(Map<String, Object> inParam) throws Exception {
		logger.debug("[SellerFindServiceImpl.sellerFindPw]");
		int ret = 0;
		try {
			ret = sellerFindDao.updatePass(inParam);
		}catch (Exception e) {
			throw e;
		}
		

		return ret;
	}
	
	public String selectsiteIFUrl() throws Exception {
		return sellerFindDao.selectsiteIFUrl();
	}
}
