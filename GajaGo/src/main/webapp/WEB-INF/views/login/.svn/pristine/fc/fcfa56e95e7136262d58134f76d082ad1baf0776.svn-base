package com.ssocio.sharing.controller.admin;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.service.admin.AdminSearchBoxManageService;


@Controller
public class AdminSearchBoxManageController {

	private static final Logger logger = LoggerFactory.getLogger(AdminSearchBoxManageController.class);
	
	@Autowired
	private AdminSearchBoxManageService adminSearchBoxManageService;
	
	@RequestMapping("/admin/search/searchboxmanage.do")
	public ModelAndView getSearchBoxList(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("SearchBox List Start");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		
		String currentDate = String.valueOf(inParam.get("regdate"));
		if (inParam.get("currentDate") == null || currentDate.trim().equalsIgnoreCase("")) {
			Date d = new Date();
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
			inParam.put("regdate", sdf.format(d));
		} 
		
		LoggerUtil.writeMap(inParam);
		
		try {
//			List<Map<String, Object>> resultMapList = adminSearchBoxManageService.getSearchBoxList(inParam);
//			logger.info("currentDate", currentDate);
//			mav.addObject("regdate", currentDate);
//			mav.addObject("searchList", resultMapList);
			mav.setViewName("admin/search/searchBoxManage");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	@RequestMapping("/admin/search/searchboxmanagebyjson.do")
	public  ModelAndView getSearchBoxListByJson(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("SearchBox List Start by Json");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		
		String currentDate = String.valueOf(inParam.get("regdate"));
		
		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
		if (request.getParameter("regdate") == null || currentDate.trim().equalsIgnoreCase("")) {
			Date d = new Date();
			inParam.put("regdate", sdf.format(d));
		} 
		
		LoggerUtil.writeMap(inParam);
		
		Map<String, Object> returnMap = new HashMap<String, Object>();
		try {
			List<Map<String, Object>> resultMapList = adminSearchBoxManageService.getSearchBoxList(inParam);
			returnMap.put("list", resultMapList);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return new ModelAndView("jsonView", returnMap);
	}
	
	@RequestMapping("/admin/search/searchboxinsert.do")
	public ModelAndView setSearchBoxList(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("SearchBox Insert Start");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		
		String currentDate = String.valueOf(inParam.get("regdate"));
		if (inParam.get("currentDate") == null || currentDate.trim().equalsIgnoreCase("")) {
			Date d = new Date();
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
			currentDate = sdf.format(d);
			inParam.put("regdate", currentDate);
		} 
		String no = String.valueOf(inParam.get("no"));
		if (inParam.get("no") == null || no.trim().equalsIgnoreCase("")) {
			inParam.put("no", "-1");
		}
		
		LoggerUtil.writeMap(inParam);
		
		Map<String, Object> resultMapList = null;
		try {
			resultMapList = adminSearchBoxManageService.setSearchBoxList(inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return new ModelAndView("jsonView", resultMapList);
	}
	
	@RequestMapping("/admin/search/searchboxdelete.do")
	public Map<String, Object> deleteSearchBoxList(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("SearchBox Insert Start");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		
		LoggerUtil.writeMap(inParam);
		
		Map<String, Object> resultMapList = null;
		try {
			resultMapList = adminSearchBoxManageService.deleteSearchBoxList(inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return resultMapList;
	}
	
	@RequestMapping("/admin/search/getSearchBoxList.do")
	public  ModelAndView getSearchBoxListByApp(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("SearchBox List Start by Client");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		
		String currentDate = String.valueOf(inParam.get("regdate"));
		String currentTime = String.valueOf(inParam.get("regtime"));
		
		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
		if (request.getParameter("regdate") == null || currentDate.trim().equalsIgnoreCase("")) {
			Date d = new Date();
			inParam.put("regdate", sdf.format(d));
		} 
		
		sdf = new SimpleDateFormat("HH");
		if (request.getParameter("regtime") == null || currentTime.trim().equalsIgnoreCase("")) {
			Date d = new Date();
			inParam.put("regtime", sdf.format(d));
		} 
		
		LoggerUtil.writeMap(inParam);
		
		Map<String, Object> returnMap = new HashMap<String, Object>();
		try {
			List<Map<String, Object>> resultMapList = adminSearchBoxManageService.getSearchBoxListByApp(inParam);
			returnMap.put("list", resultMapList);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return new ModelAndView("jsonView", returnMap);
	}
}
