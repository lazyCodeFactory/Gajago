package com.ssocio.sharing.controller.admin;

import java.util.Date;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.util.DateUtil;
import com.ssocio.sharing.service.admin.AdminMainService;
import com.ssocio.sharing.vo.admin.AdminSession;

/**
 * <pre>
 * 메인화면 콘트롤러
 * 메인화면 콘트롤러
 * @author Y.I.Chun
 * @version
 * @since 2015. 7. 8. 오후 5:50:42
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 8.	|	Y.I.Chun	|신규
 * @비고
 * </pre>
 */
@Controller
public class AdminMainController extends AdminReferController {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminMainController.class);
	
	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private AdminMainService adminMainService;
	
	@RequestMapping("/admin/main.do")
 	public ModelAndView selectMainData(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
			
			
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("MAIN START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = null;
		AdminSession session = (AdminSession) request.getSession().getAttribute("manager");
		try {
			
			// 접속자 통계 최근 10일. 11일전 - 어제까지.
			Date dt = new Date();
    		String curDay = DateUtil.getStringFromDate(dt, "yyyyMMdd");
        	logger.info(" ### curDay ::: " + curDay );
			
	        dt = DateUtil.addDateByDay(dt, -1);
			String minusDay = DateUtil.getStringFromDate(dt, "yyyyMMdd");
			logger.info(" ### minusDay ::: " + minusDay );
			
	        dt = DateUtil.addDateByDay(dt, -9);
			String minus10Day = DateUtil.getStringFromDate(dt, "yyyyMMdd");
			logger.info(" ### minus10Day ::: " + minus10Day );
			
			dt = new Date();
			String arrDate = "";
			
			dt = DateUtil.addDateByDay(dt, -11);

			for(int ii = 0; ii < 10; ii++) {
				dt = DateUtil.addDateByDay(dt, 1);
				arrDate += DateUtil.getStringFromDate(dt, "yyyy-MM-dd") + ",";
			}
			
			arrDate = arrDate.substring(0, arrDate.length() - 1);

			logger.info(" ### arrDate ::: " + arrDate );

			inParam.put("curDay", curDay);
			inParam.put("date", minus10Day);
			inParam.put("last_date", minusDay);
			inParam.put("arrDate", arrDate);
			inParam.put("gap", "-10");

			
    		mav = adminMainService.selectMainData(inParam);
			mav.setViewName("admin/main");
		} catch (Exception e) {e.printStackTrace();}
			
		return mav;
	}
}
