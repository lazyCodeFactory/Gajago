/**
 *
 */
package com.ssocio.sharing.service.web;

import java.util.Map;

import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.ui.ModelMap;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

/**
 * <pre>
 * 설명
 * 설명
 * @author Kang.h.c
 * @version
 * @since 2015. 8. 19
 * @see
 * @History
 * Date			|	author		| 변경 내용
 * 2015. 8. 19.	|	Kang.h.c	|신규
 * @비고
 * </pre>
 */
public interface WebSaleManageService {

	/**
	 * <pre>
	 * selectSaleProdCnt
	 * 사용자가 등록한 판매상품의 갯수를 조회한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 19
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectSaleProdCnt(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * procInsertProdComm
	 * 상품관리 - 상품등록 공통 페이지 호출
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 20
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void procInsertProdComm(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * insertProdImgFile
	 * 상품관리 - 상품등록 이미지 임시저장
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 20
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public Map<String, Object> insertProdImgFile(Map<String, Object> inParam, MultipartHttpServletRequest req) throws Exception;

	
	/**
	 * <pre>
	 * insertProdImgFile
	 * 상품관리 - 상품등록 이미지 임시저장
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 20
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public Map<String, Object> insertProdImgFileV2(Map<String, Object> inParam, MultipartHttpServletRequest req) throws Exception;

	
	
	/**
	 * <pre>
	 * procInsertProdSell
	 * 상품관리 - 상품등록 판매 페이지 호출
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 24
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void procInsertProdSell(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * insertSellProdInfo
	 * 상품관리 - 상품등록
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 24
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public Map<String, Object> insertSellProdInfo(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * insertBrandReq
	 * 상품관리 - 상품등록 브랜드 신청
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 25
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public Map<String, Object> insertBrandReq(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * selectCtryTax
	 * 제휴택배 배송비 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 19
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectRelDlvInfo(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * selectCtryTax
	 * 카테고리 수수료 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 16
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectCtryTax(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * selectCtryTax
	 * 결제 수수료 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 16
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectSetlTax(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * selectListProd
	 * 상품관리 - 상품목록 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 26
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectListProd(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 상품 조회
	 * 상품 수정을 위한 상세조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 27
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectProdDtl(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 상품 삭제
	 * 상품 PROD_STAT_CD > 3
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 28
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void deleteProdInfo(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 카테고리별 브랜드 리스트 조회
	 * 카테고리별 브랜드 리스트정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 28
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectBrandList(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 상품 수정
	 * 상품정보를 수정한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 29
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void updateProdInfo(ModelAndView mav, Map<String, Object> inParam, MultipartHttpServletRequest req) throws Exception;
	
	

	/**
	 * <pre>
	 * selectListProdQna
	 * 상품관리 - 상품문의 목록조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 31
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectListProdQna(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 상품문의 조회
	 * 상품문의 상세조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 31
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectProdQnaDtl(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 답변등록
	 * 상품문의의 답변을 등록한다
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 31
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void updateProdQna(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 셰어링 주문내역 리스트 조회
	 * 주문내역의 셰어링 리스트를 조회한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 31
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectListOrderShare(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 셰어링 주문내역 상세 조회
	 * 주문내역의 셰어링 상세내역을 조회한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 02
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectOrderShareDtl(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 셰어링 주문내역 상태 변경
	 * 셰어링 주문의 상태를 변경한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 02
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void updateOrderProcStat(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 출하지 정보 조회
	 * 사용자의 출하지 정보를 조회한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 05
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectListGrpProdInfo(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 반품신청정보 조회 및 출하지 정보 조회
	 * 반품신청정보 조회 및 출하지 정보 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 05
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectBackReqInfo(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 판매 주문내역 리스트 조회
	 * 주문내역의 판매 리스트를 조회한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 07
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectListOrderSell(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 판매 주문내역 상세 조회
	 * 주문내역의 판매 상세내역을 조회한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 08
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectOrderSellDtl(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 일반택배 상품배송
	 * 주문정보 및 배송지정보 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 08
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectOrdDlvInfo(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 주문취소
	 * 주문취소
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 08
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void procOrderCanc(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 나눔 신청내역 리스트 조회
	 * 나눔 신청내역 리스트를 조회한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 08
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectListOrderFree(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 나눔 신청내역 상세 조회
	 * 주문내역의 나눔 상세내역을 조회한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 10
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectOrderFreeDtl(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 나눔상품의 신청을 수락
	 * 나눔상품의 신청을 수락
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 10
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void updateFreeConfirm(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * selectSellAdjustHist
	 * 판매 정산조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 20
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectSellAdjustHist(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * selectShareAdjustHist
	 * 셰어링 정산조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 21
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void selectShareAdjustHist(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * selectShareAdjustHist
	 * 셰어링 정산조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 21
	 * @author Kang.h.c
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public Map<String, Object> selectProdQnaInfo(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 판매관리 주문상품 내역
	 * 판매관리 주문상품 내역을 조회한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 11. 18
	 * @author obiwan
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void procOrderSearchMain(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 판매관리 나눔상풍 수락여부 체크
	 * 판매관리 나눔상풍 수락여부 체크한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 11. 18
	 * @author obiwan
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public int checkFreeConfirm(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	public void procInsertProdCommV2(ModelAndView mav, Map<String, Object> inParam) throws Exception;

	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public Map<String, Object> insertSellProdInfoV2(Map<String, Object> inParam) throws Exception;

	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public Map<String, Object> updateProdInfoV2(ModelAndView mav, Map<String, Object> inParam, MultipartHttpServletRequest req) throws Exception;
	
	public void selectProdDtlV2(ModelAndView mav, Map<String, Object> inParam) throws Exception;
	
	@Transactional (propagation=Propagation.REQUIRED, rollbackFor={Exception.class})
	public void selectProdStat(ModelAndView mav, Map<String, Object> inParam) throws Exception;
}
