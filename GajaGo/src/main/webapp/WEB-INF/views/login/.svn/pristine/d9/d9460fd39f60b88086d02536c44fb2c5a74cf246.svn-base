package com.ssocio.sharing.controller.mobile;

import java.net.URLEncoder;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.service.web.MobileMyAdrService;
import com.ssocio.sharing.vo.web.WebSession;

/**
 * <pre>
 * 회원정보 컨트롤러
 * 회원정보를 위한 컨트롤러
 * @author 
 * @version
 * @since 
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * @비고
 * </pre>
 */
@Controller
public class MobileMyAdrController extends MobileReferController {

	private static final Logger logger = LoggerFactory.getLogger(MobileMyAdrController.class);
	
	@Autowired
	private MobileMyAdrService mobileMyAdrService;
	
	/**
	 * 배송지 관리(조회)
	 */
	@RequestMapping("/mobile/myAdr/getMyAdrInfo.do")
	public ModelAndView getMyAdrInfo(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		if(request.getSession().getAttribute("user")==null){
			String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
			return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
		}
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			mav.addObject("result", mobileMyAdrService.getMyAdrInfo(inParam, user));
			mav.addObject("params", inParam);
			mav.setViewName("web/myPage/getMyAdrInfo");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	/**
	 * 배송지 등록 화면으로 이동
	 */
	@RequestMapping("/mobile/myAdr/insertMyAdrInfo.do")
	public ModelAndView insertMyAdrInfo(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		if(request.getSession().getAttribute("user")==null){
			String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
			return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
		}
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			mav.addObject("result", mobileMyAdrService.insertMyAdrInfo(inParam, user));
			mav.addObject("params", inParam);
			mav.setViewName("web/myPage/insertMyAdrInfo");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * 배송지 등록 처리
	 */
	@RequestMapping("/mobile/myAdr/insertMyAdrInfoReq.do")
	public @ResponseBody String insertMyAdrInfoReq(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		String result = "";
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			
			mobileMyAdrService.insertMyAdrInfoReq(inParam, user);
			JSONObject jsonObj = new JSONObject() ;
			jsonObj.put("result", "정상처리되었습니다.");
			result = jsonObj.toString();
			logger.debug("### result	:["+result	+"] >>>>");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	/**
	 * 배송지 수정 화면으로 이동
	 */
	@RequestMapping("/mobile/myAdr/updateMyAdrInfo.do")
	public ModelAndView updateMyAdrInfo(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		if(request.getSession().getAttribute("user")==null){
			String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
			return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
		}
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			// 필수 키값. REQ_SEQ, MBER_SEQ
			mav.addObject("result", mobileMyAdrService.updateMyAdrInfo(inParam, user));
			mav.addObject("params", inParam);
			mav.setViewName("web/myPage/updateMyAdrInfo");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	/**
	 * 배송지 수정 처리
	 */
	@RequestMapping("/mobile/myAdr/updateMyAdrInfoReq.do")
	public @ResponseBody String updateMyAdrInfoReq(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		
		LoggerUtil.writeMap(inParam);
		String result = "";
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			
			mobileMyAdrService.updateMyAdrInfoReq(inParam, user);
			JSONObject jsonObj = new JSONObject() ;
			jsonObj.put("result", "정상처리되었습니다.");
			result = jsonObj.toString();
			logger.debug("### result	:["+result	+"] >>>>");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	
	/**
	 * 기본배송지설정
	 */
	@RequestMapping("/mobile/myAdr/updateMyBaseAdrReg.do")
	public @ResponseBody String updateMyBaseAdrReg(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		LoggerUtil.writeMap(inParam);
		String result = "";
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			
			mobileMyAdrService.updatemyBaseAdrReg(inParam, user);
			JSONObject jsonObj = new JSONObject() ;
			jsonObj.put("result", "정상처리되었습니다.");
			result = jsonObj.toString();
			logger.debug("### result	:["+result	+"] >>>>");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	/**
	 * 배송지 삭제
	 */
	@RequestMapping("/mobile/myAdr/deleteMyAdrInfo.do")
	public @ResponseBody String deleteMyAdrInfo(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		LoggerUtil.writeMap(inParam);
		String result = "";
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			
			mobileMyAdrService.deleteMyAdrInfo(inParam, user);
			JSONObject jsonObj = new JSONObject() ;
			jsonObj.put("result", "정상처리되었습니다.");
			result = jsonObj.toString();
			logger.debug("### result	:["+result	+"] >>>>");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	
	/**
	 * 현재 배송지 건수
	 */
	@RequestMapping("/mobile/myAdr/getMyAdrCount.do")
	public @ResponseBody String getMyAdrCount(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		LoggerUtil.writeMap(inParam);
		String result = "";
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			
			
			JSONObject jsonObj = new JSONObject() ;
			jsonObj.put("result", mobileMyAdrService.getMyAdrCount(inParam, user));
			result = jsonObj.toString();
			logger.debug("### result	:["+result	+"] >>>>");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
}
