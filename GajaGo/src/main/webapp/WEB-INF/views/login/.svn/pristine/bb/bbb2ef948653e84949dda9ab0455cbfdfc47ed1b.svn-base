package com.ssocio.sharing.controller.admin;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.service.admin.AdminFaqService;

/**
 * <pre>
 * 콩통 컨트롤러
 * 콩통 처리를 위한 컨트롤러
 * @author J.K.CHOI
 * @version
 * @since 2015. 7. 17. 오후 7:18:35
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 17.	|	J.K.CHOI	|신규
 * @비고
 * </pre>
 */
@Controller
public class AdminFaqController extends AdminReferController {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminFaqController.class);
	
	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private AdminFaqService adminFaqService;
	
	
	/**
	 * <pre>
	 * FAQ 리스트 조회
	 * FAQ 리스트 조회
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/admin/faq/selectListFaq.do")
	public ModelAndView selectListFaq(HttpServletRequest request
									, HttpServletResponse response
									, @RequestParam Map<String, Object> inParam
									, @RequestParam (value="chkType", required=false) String[] chkType) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("FAQ LIST START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		
		try {
			inParam.put("chkType", chkType);
			mav.addObject("list", adminFaqService.selectListFaq(inParam));			//FAQ 리스트
			mav.addObject("params", inParam);
			mav.setViewName("admin/faq/selectListFaq");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * <pre>
	 * 등록화면 이동
	 * 
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/admin/faq/insertFaq.do")
	public ModelAndView insertFaq(HttpServletRequest request
								, HttpServletResponse response
								, @RequestParam Map<String, Object> inParam
								, @RequestParam (value="chkType", required=false) String[] chkType) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("FAQ INSERT VIEW START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		try {
			inParam.put("chkType", chkType);
			mav.addObject("IU", "I");															//등록(I) or 수정(U) FLAG
			mav.addObject("params", inParam);
			mav.setViewName("admin/faq/insertFaq");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * <pre>
	 * 수정화면 이동
	 * 
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/admin/faq/updateFaq.do")
	public ModelAndView updateFaq(HttpServletRequest request
								, HttpServletResponse response
								, @RequestParam Map<String, Object> inParam
								, @RequestParam (value="chkType", required=false) String[] chkType) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("FAQ UPDATE VIEW START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		try {
			inParam.put("chkType", chkType);
			mav.addObject("IU", "U");															//등록(I) or 수정(U) FLAG
			mav.addObject("selectFaq", adminFaqService.selectFaq(inParam).get("selectFaq"));	//FAQ 상세조회
			mav.addObject("params", inParam);
			mav.setViewName("admin/faq/insertFaq");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	/**
	 * <pre>
	 * FAQ 등록
	 * FAQ 등록
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 3:18:21
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/admin/faq/insertFaqReg.do")
	public ModelAndView insertFaqReg(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("FAQ INSERT REG START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView("jsonView");
		try {
			adminFaqService.insertFaqReg(inParam, request);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * <pre>
	 * FAQ 수정
	 * FAQ 수정
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 3:30:24
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/admin/faq/updateFaqReg.do")
	public ModelAndView updateFaqReg(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("FAQ UPDATE REG START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView  mav = new ModelAndView("jsonView");
		try {
			adminFaqService.updateFaqReg(inParam, request);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * <pre>
	 * FAQ 삭제
	 * FAQ 삭제
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 13 오후 3:18:21
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/admin/faq/deleteFaq.do")
	public ModelAndView ModelAndView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("FAQ DELETE REG START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView  mav = new ModelAndView("jsonView");
		try {
			adminFaqService.deleteFaq(inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
}
