<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="webBuySaleMapper">
	
	
	<resultMap id="listOrderMap" type="hashmap">
		<id 	property="ORD_CD"					column="ORD_CD" />
		<result property="ORD_REG_DATE"				column="ORD_REG_DATE" />
		<result property="PROC_STAT_CD"				column="PROC_STAT_CD" />
		<result property="PROC_STAT_NM"				column="PROC_STAT_NM" />
		<result property="PROD_ORD_AMT"				column="PROD_ORD_AMT" />
		<result property="DLV_PRCE"					column="DLV_PRCE" />
		<result property="PROD_CODE"				column="PROD_CODE" />
		<result property="PROD_SEQ"					column="PROD_SEQ" />
		<result property="PROD_TYPE_CD"				column="PROD_TYPE_CD" />
		<result property="PROD_PRCE"				column="PROD_PRCE" />
		<result property="ORD_QTY"					column="ORD_QTY" />
		<result property="IMG_URL"					column="IMG_URL" />
		<result property="SELLER_CD"				column="SELLER_CD" />
		<result property="PROD_NM"					column="PROD_NM" />
		<result property="SELLER_MBER_GB_CD"		column="SELLER_MBER_GB_CD" />
		<result property="DLV_PAY_GB_CD"			column="DLV_PAY_GB_CD" />
		<result property="DLV_WAY_CD"				column="DLV_WAY_CD" />
		<result property="DLV_PAY_F_CD"				column="DLV_PAY_F_CD" />
		<result property="DLV_GROUP_YN"				column="DLV_GROUP_YN" />
		<result property="DLV_STAND_AMT"			column="DLV_STAND_AMT" />
		<result property="BOARD_SEQ"				column="BOARD_SEQ" />
		<collection property="subOrder" javaType="java.util.ArrayList" resultMap="subOrderMap" />
	</resultMap>
	
	<resultMap id="viewOrderMap" type="hashmap">
		<id 	property="ORD_CD"					column="ORD_CD" />
		<result property="ORD_REG_DATE"				column="ORD_REG_DATE" />
		<result property="PROC_STAT_CD"				column="PROC_STAT_CD" />
		<result property="PROC_STAT_NM"				column="PROC_STAT_NM" />
		<result property="PROD_ORD_AMT"				column="PROD_ORD_AMT" />
		<result property="PROD_DLV_ORD_AMT"			column="PROD_DLV_ORD_AMT" />
		<result property="PROD_DLV_ORD_AMT2"		column="PROD_DLV_ORD_AMT2" />
		<result property="DLV_PRCE"					column="DLV_PRCE" />
		<result property="PROD_CODE"				column="PROD_CODE" />
		<result property="PROD_SEQ"					column="PROD_SEQ" />
		<result property="ORD_QTY"					column="ORD_QTY" />
		<result property="PROD_TYPE_CD"				column="PROD_TYPE_CD" />
		<result property="PROD_PRCE"				column="PROD_PRCE" />
		<result property="IMG_URL"					column="IMG_URL" />
		<result property="SELLER_CD"				column="SELLER_CD" />
		<result property="PROD_NM"					column="PROD_NM" />
		<result property="SELLER_MBER_GB_CD"		column="SELLER_MBER_GB_CD" />
		<result property="MINI_SHOP_NM"				column="MINI_SHOP_NM" />
		<result property="MINI_SHOP_PATH"			column="MINI_SHOP_PATH" />
		<result property="MBER_PHONE"				column="MBER_PHONE" />
		<result property="CPN_USE_AMT"				column="CPN_USE_AMT" />
		<result property="POINT_USE_AMT"			column="POINT_USE_AMT" />
		<result property="DLV_GROUP_YN"				column="DLV_GROUP_YN" />
		<result property="DLV_WAY_CD"				column="DLV_WAY_CD" />
		<result property="DLV_PAY_GB_CD"			column="DLV_PAY_GB_CD" />
		<result property="DLV_PAY_F_CD"				column="DLV_PAY_F_CD" />
		<result property="BOARD_SEQ"				column="BOARD_SEQ" />
		<result property="DLV_STAND_AMT"			column="DLV_STAND_AMT" />
		<collection property="subOrder" javaType="java.util.ArrayList" resultMap="subOrderMap" />
	</resultMap>
	
	<resultMap id="viewCancOrderMap" type="hashmap">
		<id 	property="ORD_CD"					column="ORD_CD" />
		<result property="TOT_ORD_PROD_CNT"			column="TOT_ORD_PROD_CNT" />
		<result property="SELT_GB_CD"				column="SELT_GB_CD" />
		<result property="PROD_CPN_CD"				column="PROD_CPN_CD" />
		<result property="PHONE_CANCEL_YN"			column="PHONE_CANCEL_YN" />
		<result property="ORD_REG_DATE"				column="ORD_REG_DATE" />
		<result property="RFND_AMT"					column="RFND_AMT" />
		<result property="PROC_STAT_CD"				column="PROC_STAT_CD" />
		<result property="PROD_ORD_AMT"				column="PROD_ORD_AMT" />
		<result property="DLV_PRCE"					column="DLV_PRCE" />
		<result property="PROD_CODE"				column="PROD_CODE" />
		<result property="PROD_SEQ"					column="PROD_SEQ" />
		<result property="PROD_TYPE_CD"				column="PROD_TYPE_CD" />
		<result property="PROD_PRCE"				column="PROD_PRCE" />
		<result property="ORD_QTY"					column="ORD_QTY" />
		<result property="PROD_NM"					column="PROD_NM" />
		<result property="IMG_URL"					column="IMG_URL" />
		<result property="PROD_NM"					column="PROD_NM" />
		<result property="MBER_SEQ"					column="MBER_SEQ" />
		<result property="MBER_PHONE"				column="MBER_PHONE" />
		<result property="MINI_SHOP_NM"				column="MINI_SHOP_NM" />
		<result property="MINI_SHOP_PATH"			column="MINI_SHOP_PATH" />
		<result property="RCV_NM"					column="RCV_NM" />
		<result property="ZIP_CD"					column="ZIP_CD" />
		<result property="JUSO_DORO"				column="JUSO_DORO" />
		<result property="JUSO_DTL"					column="JUSO_DTL" />
		<result property="RCV_TEL"					column="RCV_TEL" />
		<result property="DLV_PAY_GB_CD"			column="DLV_PAY_GB_CD" />
		<result property="PROD_CPN_CD"				column="PROD_CPN_CD" />
		<result property="DLV_GRP_CODE"				column="DLV_GRP_CODE" />
		<result property="RFND_YN"					column="RFND_YN" />
		<result property="DLV_GROUP_YN"				column="DLV_GROUP_YN" />
		<result property="DLV_WAY_CD"				column="DLV_WAY_CD" />
		<result property="DLV_STAND_AMT"			column="DLV_STAND_AMT" />
		<result property="DLV_PAY_F_CD"				column="DLV_PAY_F_CD" />
		<collection property="subOrder" javaType="java.util.ArrayList" resultMap="subOrderMap" />
	</resultMap>
	
	
	<resultMap id="viewRtnOrderMap" type="hashmap">
		<id 	property="ORD_CD"					column="ORD_CD" />
		<result property="ORD_REG_DATE"			column="ORD_REG_DATE" />
		<result property="CHG_CD"				column="CHG_CD" />
		<result property="PROC_STAT_CD"				column="PROC_STAT_CD" />
		<result property="PROC_STAT_NM"			column="PROC_STAT_NM" />
		<result property="REFUND_STAT_NM"				column="REFUND_STAT_NM" />
		<result property="PROD_ORD_AMT"					column="PROD_ORD_AMT" />
		<result property="PROD_DLV_ORD_AMT"				column="PROD_DLV_ORD_AMT" />
		<result property="PROD_DLV_ORD_AMT2"				column="PROD_DLV_ORD_AMT2" />
		<result property="DSCNT_AMT"				column="DSCNT_AMT" />
		<result property="REAL_SELT_AMT"				column="REAL_SELT_AMT" />
		<result property="EFUND_AMT"					column="EFUND_AMT" />
		<result property="DLV_PRCE"				column="DLV_PRCE" />
		<result property="PROD_CODE"					column="PROD_CODE" />
		<result property="PROD_SEQ"				column="PROD_SEQ" />
		<result property="PROD_TYPE_CD"				column="PROD_TYPE_CD" />
		<result property="PROD_PRCE"					column="PROD_PRCE" />
		<result property="ORD_QTY"					column="ORD_QTY" />
		<result property="IMG_URL"					column="IMG_URL" />
		<result property="SELLER_CD"					column="SELLER_CD" />
		<result property="PROD_NM"					column="PROD_NM" />
		<result property="SELLER_MBER_GB_CD"				column="SELLER_MBER_GB_CD" />
		<result property="MINI_SHOP_NM"				column="MINI_SHOP_NM" />
		<result property="MINI_SHOP_PATH"			column="MINI_SHOP_PATH" /> 
		<result property="CANC_REASON_CD"					column="CANC_REASON_CD" />
		<result property="CANC_REASON_NM"					column="CANC_REASON_NM" />
		<result property="CANC_REASON"					column="CANC_REASON" />
		<result property="CANC_DT"					column="CANC_DT" />
		<result property="CANC_NM"					column="CANC_NM" />
		<result property="CHG_REASON_CD"					column="CHG_REASON_CD" />
		<result property="CHG_REASON_NM"					column="CHG_REASON_NM" />
		<result property="CHG_REASON"				column="CHG_REASON" />
		<result property="CHG_REG_DT"					column="CHG_REG_DT" />
		<result property="CHG_FIN_DT"					column="CHG_FIN_DT" />
		<result property="RCV_NM"			column="RCV_NM" />
		<result property="CONTACT"				column="CONTACT" />
		<result property="ZIP_CODE"				column="ZIP_CODE" />
		<result property="BAS_ADDR"					column="BAS_ADDR" />
		<result property="DTL_ADDR"				column="DTL_ADDR" />
		<result property="SHIP_MEMO"				column="SHIP_MEMO" />
		<result property="MBER_PHONE"				column="MBER_PHONE" />
		<result property="CPN_USE_AMT"				column="CPN_USE_AMT" />
		<result property="POINT_USE_AMT"				column="POINT_USE_AMT" />
		<result property="DLV_WAY_CD"				column="DLV_WAY_CD" />
		<result property="DLV_PAY_GB_CD"				column="DLV_PAY_GB_CD" />
		<result property="DLV_STAND_AMT"				column="DLV_STAND_AMT" />
		<result property="DLV_PAY_F_CD"				column="DLV_PAY_F_CD" />
		<result property="DLV_GROUP_YN"				column="DLV_GROUP_YN" />
		<result property="TRD_AMT"				column="TRD_AMT" />
		<collection property="subOrder" javaType="java.util.ArrayList" resultMap="subOrderMap" />
	</resultMap>

	<!-- 상품 주문내역 조회 SUB -->
	<resultMap id="subOrderMap" type="hashmap">
		
		<result property="OPT_INFO"			column="OPT_INFO" />
		<result property="OPT_QTY"			column="OPT_QTY" />
		<result property="OPT_PRCE"			column="OPT_PRCE" />
		<result property="OP_GB_CD"			column="OP_GB_CD" />
	</resultMap>
	
	<!-- 검색조건 -->
	<sql id="SearchBuySale">
		<!-- 조회기간 -->
		<if test="S_SEARCH_PERI != null and S_SEARCH_PERI != ''">
		<!-- 기존 프로그램의 영향도 때문에 주석만 처리 해놓음
			<if test="S_SEARCH_PERI == '1W'">
				AND A.ORD_REG_DATE >= TO_DATE(TO_CHAR(SYSDATE- 7, 'YYYYMMDD'), 'YYYYMMDD')
			</if>

			<if test="S_SEARCH_PERI == '1M'">
				AND A.ORD_REG_DATE >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYYMMDD'), 'YYYYMMDD')
			</if>

			<if test="S_SEARCH_PERI == '2M'">
				AND A.ORD_REG_DATE >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -2), 'YYYYMMDD'), 'YYYYMMDD')
			</if> -->

			<if test="S_SEARCH_PERI == '3M'">
				AND A.ORD_REG_DATE >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -3), 'YYYYMMDD'), 'YYYYMMDD')
			</if>

			<if test="S_SEARCH_PERI == '6M'">
				AND A.ORD_REG_DATE >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -6), 'YYYYMMDD'), 'YYYYMMDD')
			</if>

			<if test="S_SEARCH_PERI == '1Y'">
				AND A.ORD_REG_DATE >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMMDD'), 'YYYYMMDD')
			</if>
<!-- 기존 프로그램의 영향도 때문에 주석만 처리 해놓음
			<if test="S_SEARCH_PERI == '2Y'">
				AND A.ORD_REG_DATE >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 12*-2), 'YYYYMMDD'), 'YYYYMMDD')
			</if>

			<if test="S_SEARCH_PERI == '3Y'">
				AND A.ORD_REG_DATE >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 12*-3), 'YYYYMMDD'), 'YYYYMMDD')
			</if>-->
		</if>
	</sql>

	<sql id="buyPagingHeader">
		SELECT * FROM (
	</sql>

	<sql id="buyPagingFooter">
		)
		WHERE RNUM <![CDATA[>=]]> #{START_ROW}
		AND RNUM <![CDATA[<=]]> #{END_ROW}
	</sql>

	<select id="selectListSaleOrderHist" parameterType="hashmap" resultMap="listOrderMap">
		<include refid="buyPagingHeader" />
			SELECT ORD.*, 
				DENSE_RANK() OVER (ORDER BY ORD_CD DESC) AS RNUM  FROM(
				SELECT
			      A.ORD_CD,
			      TO_CHAR(A.ORD_REG_DATE, 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE,
			      B.PROC_STAT_CD,
			      (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD' AND COM_CD = B.PROC_STAT_CD) AS PROC_STAT_NM,
			      B.PROD_ORD_AMT,
			      B.DLV_PRCE,
			      B.PROD_CODE,
			      B.PROD_SEQ,
			      B.PROD_TYPE_CD,
			      B.PROD_PRCE,
			      B.ORD_QTY,
			      (SELECT PROD_IMG_URL FROM PROD_IMG WHERE PROD_CODE = B.PROD_CODE AND PROD_IMG_GB_CD ='11') AS IMG_URL,
			      B.SELLER_CD,
			      C.PROD_NM,
			      D1.MBER_GB_CD AS SELLER_MBER_GB_CD,
			      C.DLV_PAY_GB_CD,
			      C.DLV_WAY_CD,
			      B.DLV_PAY_F_CD,
			      CASE WHEN (SELECT COUNT(*) FROM ORD_PROD_INFO WHERE ORD_CD = A.ORD_CD AND DLV_GRP_CODE = B.DLV_GRP_CODE) = 1 THEN 'N' ELSE 'Y' END AS DLV_GROUP_YN,
				  C.DLV_STAND_AMT,
				  (SELECT BOARD_SEQ FROM BOARD_INFO WHERE BOARD_TYPE_CD=70 AND MBER_SEQ=A.MBER_SEQ AND PROD_CODE=B.PROD_CODE AND ROWNUM = 1) AS BOARD_SEQ,
				  (
					SELECT REPLACE(LTRIM (SYS_CONNECT_BY_PATH (POPT.OPT_NM, ' // '), ' // '), '//', '/') AS OPT_NM
						FROM   PROD_OP POPT 
					 	WHERE  POPT.OPT_CD = POPTI.OPT_CD
					 	START WITH POPT.PAR_OPT_CD = '0'
					 	CONNECT BY PRIOR POPT.OPT_CD = POPT.PAR_OPT_CD
                   ) AS OPT_INFO,
                   POPTI.OPT_QTY,
                   POPT.OPT_PRCE,
                   POPTF.OP_GB_CD
				FROM ORD_INFO A,
				     ORD_PROD_INFO B,
				     PROD C,
				     MBER_INFO D,
				     MBER_INFO D1,
				     PROD_BUY_CONF_INFO E,
				     ORD_PROD_OPT_INFO POPTI,
				     PROD_OP POPT,
				     PROD_OP_INFO POPTF
				WHERE A.ORD_CD = B.ORD_CD
				AND B.PROC_STAT_CD NOT IN ( '50','15')
				AND A.MBER_SEQ = D.MBER_SEQ
				AND B.PROD_CODE = C.PROD_CODE
				AND C.MBER_SEQ = D1.MBER_SEQ
				AND B.ORD_CD = E.ORD_CD(+)
				AND B.PROD_CODE = E.PROD_CODE(+)
				AND B.PROD_SEQ = E.PROD_SEQ(+)
				AND B.PROD_TYPE_CD = '1'
				AND A.MBER_SEQ = #{S_MBER_SEQ}
				AND B.ORD_CD =  POPTI.ORD_CD(+)
		        AND B.PROD_CODE = POPTI.PROD_CODE(+)
		        AND B.PROD_SEQ =  POPTI.PROD_SEQ(+)
		        AND POPTI.OPT_CD = POPT.OPT_CD(+)
		        AND POPT.OPT_GRP_CD = POPTF.OPT_GRP_CD(+)
				<include refid="SearchBuySale" />
				<!-- 주문상태 -->
				<choose>
					<when test="S_PROC_STAT_CD != null and S_PROC_STAT_CD != ''">
						 AND B.PROC_STAT_CD = #{S_PROC_STAT_CD}
					</when>
					<otherwise>
						AND B.PROC_STAT_CD IN ('10', '21', '22', '23', '99')
					</otherwise>
				</choose>
				<!-- 상품명 -->
				<if test="S_PROD_NM != null and S_PROD_NM != ''">
		            AND C.PROD_NM LIKE '%'|| #{S_PROD_NM} ||'%'
				</if>
				ORDER BY A.ORD_CD DESC, POPTF.OP_GB_CD, OPT_INFO
			) ORD
		<include refid="buyPagingFooter" />
	</select>

	<select id="selectListSaleOrderHistTotCnt" parameterType="hashmap" resultType="int">
		SELECT
		      COUNT(1) AS TOT_CNT
		FROM ORD_INFO A,
		     ORD_PROD_INFO B,
		     PROD C,
		     MBER_INFO D,
		     MBER_INFO D1,
		     PROD_BUY_CONF_INFO E
		WHERE A.ORD_CD = B.ORD_CD
		AND B.PROC_STAT_CD NOT IN ( '50','15')
		AND A.MBER_SEQ = D.MBER_SEQ
		AND B.PROD_CODE = C.PROD_CODE
		AND C.MBER_SEQ = D1.MBER_SEQ
		AND B.ORD_CD = E.ORD_CD(+)
		AND B.PROD_CODE = E.PROD_CODE(+)
		AND B.PROD_SEQ = E.PROD_SEQ(+)
		AND B.PROD_TYPE_CD = '1'
		AND A.MBER_SEQ = #{S_MBER_SEQ}

		<include refid="SearchBuySale" />

		<!-- 주문상태 -->
		<choose>
			<when test="S_PROC_STAT_CD != null and S_PROC_STAT_CD != ''">
				 AND B.PROC_STAT_CD = #{S_PROC_STAT_CD}
			</when>
			<otherwise>
				AND B.PROC_STAT_CD IN ('10', '21', '22', '23', '99')
			</otherwise>
		</choose>


		<!-- 상품명 -->
		<if test="S_PROD_NM != null and S_PROD_NM != ''">
            AND C.PROD_NM LIKE '%'|| #{S_PROD_NM} ||'%'
		</if>
	</select>

	<select id="selectListSaleOrderProd" parameterType="hashmap" resultMap="viewOrderMap">
		SELECT
		      A.ORD_CD,
		      TO_CHAR(A.ORD_REG_DATE, 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE,
		      B.PROC_STAT_CD,
		      (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD' AND COM_CD = B.PROC_STAT_CD) AS PROC_STAT_NM,
		      B.PROD_ORD_AMT,
		      NVL((B.PROD_ORD_AMT+ B.DLV_PRCE), 0) AS PROD_DLV_ORD_AMT,
		      NVL(B.PROD_ORD_AMT, 0) AS PROD_DLV_ORD_AMT2,
		      NVL(B.DLV_PRCE,0) AS DLV_PRCE,
		      B.PROD_CODE,
		      B.PROD_SEQ,
		      B.PROD_TYPE_CD,
		      B.PROD_PRCE,
		      B.ORD_QTY,
		      (SELECT PROD_IMG_URL FROM PROD_IMG WHERE PROD_CODE = B.PROD_CODE AND PROD_IMG_GB_CD ='11') AS IMG_URL,
		      B.SELLER_CD,
		      C.PROD_NM,
		      D1.MBER_GB_CD AS SELLER_MBER_GB_CD,
		      (CASE WHEN M.MINI_SHOP_NM IS NULL
		            THEN D1.MBER_NM
		            ELSE M.MINI_SHOP_NM
		       END) AS MINI_SHOP_NM,
		      (SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = M.MINI_PROFILE_SEQ) AS MINI_SHOP_PATH,
              
		       (
			        CASE WHEN D1.MBER_GB_CD = '0'
			          THEN (SELECT MBER_PHONE FROM   MBER_INFO PU WHERE  PU.MBER_SEQ = C.MBER_SEQ)
			          ELSE (SELECT CS_PER_TEL FROM   SELLER_INFO_CFG PU WHERE  PU.MBER_SEQ = C.MBER_SEQ)
			        END
		       )  MBER_PHONE ,
		       NVL(A.CPN_USE_AMT,'0') AS CPN_USE_AMT ,
           	   NVL(A.POINT_USE_AMT,'0') AS POINT_USE_AMT,
           	     CASE WHEN (SELECT COUNT(*) FROM ORD_PROD_INFO WHERE ORD_CD = A.ORD_CD AND DLV_GRP_CODE = B.DLV_GRP_CODE) = 1 THEN 'N' ELSE 'Y' END AS DLV_GROUP_YN,
           	   C.DLV_WAY_CD,
           	   C.DLV_PAY_GB_CD,
           	   B.DLV_PAY_F_CD,
			   (SELECT BOARD_SEQ FROM BOARD_INFO WHERE BOARD_TYPE_CD=70 AND MBER_SEQ=A.MBER_SEQ AND PROD_CODE=B.PROD_CODE AND ROWNUM = 1) AS BOARD_SEQ,
			   (
					SELECT REPLACE(LTRIM (SYS_CONNECT_BY_PATH (POPT.OPT_NM, ' // '), ' // '), '//', '/') AS OPT_NM
						FROM   PROD_OP POPT 
						WHERE  POPT.OPT_CD = POPTI.OPT_CD
					 	START WITH POPT.PAR_OPT_CD = '0'
					 	CONNECT BY PRIOR POPT.OPT_CD = POPT.PAR_OPT_CD
               ) AS OPT_INFO,
               POPTI.OPT_QTY,
               POPT.OPT_PRCE,
               POPTF.OP_GB_CD
		FROM ORD_INFO A,
		     ORD_PROD_INFO B,
		     PROD C,
		     MBER_INFO D,
		     MBER_INFO D1,
		     MBER_MINI_SHOP_INFO M,
		     PROD_BUY_CONF_INFO E,
		     ORD_PROD_OPT_INFO POPTI,
			 PROD_OP POPT,
			 PROD_OP_INFO POPTF
		WHERE A.ORD_CD = B.ORD_CD
		AND A.MBER_SEQ = D.MBER_SEQ
		AND B.PROD_CODE = C.PROD_CODE
		AND C.MBER_SEQ = D1.MBER_SEQ
		AND C.MBER_SEQ = M.MBER_SEQ(+)
		AND B.ORD_CD = E.ORD_CD(+)
		AND B.PROD_CODE = E.PROD_CODE(+)
		AND B.PROD_SEQ = E.PROD_SEQ(+)
		AND B.PROD_TYPE_CD = '1'
		AND B.ORD_CD =  POPTI.ORD_CD(+)
		AND B.PROD_CODE = POPTI.PROD_CODE(+)
        AND B.PROD_SEQ =  POPTI.PROD_SEQ(+)
        AND POPTI.OPT_CD = POPT.OPT_CD(+)
        AND POPT.OPT_GRP_CD = POPTF.OPT_GRP_CD(+)
		<!-- 주문코드 -->
		<if test="S_ORD_CD != null and S_ORD_CD != ''">
		    AND A.ORD_CD = #{S_ORD_CD}
		</if>
		ORDER BY B.PROD_CODE, POPTF.OP_GB_CD, OPT_INFO
	</select>

	<select id="selectListSaleExcReqHist" parameterType="hashmap" resultMap="listOrderMap">
		<include refid="buyPagingHeader" />
			SELECT ORD.*, 
				DENSE_RANK() OVER (ORDER BY ORD_CD DESC) AS RNUM  FROM(
				SELECT
			     A.ORD_CD,
			      TO_CHAR(F.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE,
			      G.CHG_CD,
			      G.CHG_PROC_TYPE_CD AS PROC_STAT_CD,
			      (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'CHG_PROC_TYPE_CD' AND COM_CD = G.CHG_PROC_TYPE_CD) AS PROC_STAT_NM,
			      B.PROD_ORD_AMT,
			      B.DLV_PRCE,
			      B.PROD_CODE,
			      B.PROD_SEQ,
			      B.PROD_TYPE_CD,
			      B.PROD_PRCE,
			      B.ORD_QTY,
			      (SELECT PROD_IMG_URL FROM PROD_IMG WHERE PROD_CODE = B.PROD_CODE AND PROD_IMG_GB_CD ='11') AS IMG_URL,
			      B.SELLER_CD,
			      C.PROD_NM,
			      D1.MBER_GB_CD AS SELLER_MBER_GB_CD,
			       C.DLV_PAY_GB_CD,
			       (
						SELECT REPLACE(LTRIM (SYS_CONNECT_BY_PATH (POPT.OPT_NM, ' // '), ' // '), '//', '/') AS OPT_NM
							FROM   PROD_OP POPT 
							WHERE  POPT.OPT_CD = POPTI.OPT_CD
							START WITH POPT.PAR_OPT_CD = '0'
							CONNECT BY PRIOR POPT.OPT_CD = POPT.PAR_OPT_CD
                   ) AS OPT_INFO,
                   POPTI.OPT_QTY,
                   POPT.OPT_PRCE,
                   POPTF.OP_GB_CD,
                   C.DLV_WAY_CD,
                   C.DLV_STAND_AMT,
                   B.DLV_PAY_F_CD,
                   CASE 
	                  WHEN (SELECT Count(*) 
	                        FROM   ORD_PROD_INFO 
	                        WHERE  ORD_CD = A.ORD_CD 
	                               AND DLV_GRP_CODE = B.DLV_GRP_CODE) = 1 THEN 
	                  'N' 
	                  ELSE 'Y' 
	                END AS DLV_GROUP_YN
			FROM ORD_INFO A,
			     ORD_PROD_INFO B,
			     PROD C,
			     MBER_INFO D,
			     MBER_INFO D1,
			     PROD_BUY_CONF_INFO E,
			     CHG_PROD_INFO F,
			     CHG_RTN_PROC_INFO G,
			     ORD_PROD_OPT_INFO POPTI,
				 PROD_OP POPT,
				 PROD_OP_INFO POPTF
			WHERE A.ORD_CD = B.ORD_CD
			AND A.MBER_SEQ = D.MBER_SEQ
			AND B.PROD_CODE = C.PROD_CODE
			AND C.MBER_SEQ = D1.MBER_SEQ
			AND B.ORD_CD = E.ORD_CD(+)
			AND B.PROD_CODE = E.PROD_CODE(+)
			AND B.PROD_SEQ = E.PROD_SEQ(+)
			AND B.ORD_CD = F.ORD_CD
			AND B.PROD_CODE = F.PROD_CODE
			AND B.PROD_SEQ = F.PROD_SEQ
			AND F.CHG_CD = G.CHG_CD
			AND B.PROD_TYPE_CD = '1'
			AND A.MBER_SEQ = #{S_MBER_SEQ}
			AND B.ORD_CD =  POPTI.ORD_CD(+)
	        AND B.PROD_CODE = POPTI.PROD_CODE(+)
	        AND B.PROD_SEQ =  POPTI.PROD_SEQ(+)
	        AND POPTI.OPT_CD = POPT.OPT_CD(+)
			AND POPT.OPT_GRP_CD = POPTF.OPT_GRP_CD(+)
			<include refid="SearchBuySale" />

			<!-- 교환신청 상태 -->
			<choose>
				<when test="S_PROC_STAT_CD != null and S_PROC_STAT_CD != ''">
					 AND G.CHG_PROC_TYPE_CD = #{S_PROC_STAT_CD}
				</when>
				<otherwise>
					AND G.CHG_PROC_TYPE_CD IN ('10', '20', '30')
					AND B.PROC_STAT_CD IN ('41', '42', '43')
				</otherwise>
			</choose>

			<!-- 상품명 -->
			<if test="S_PROD_NM != null and S_PROD_NM != ''">
	            AND C.PROD_NM LIKE '%'|| #{S_PROD_NM} ||'%'
			</if>
			ORDER BY F.REGIST_DT DESC, POPTF.OP_GB_CD, OPT_INFO
			) ORD
		<include refid="buyPagingFooter" />
	</select>

	<select id="selectListSaleExcReqHistTotCnt" parameterType="hashmap" resultType="int">
		SELECT
		      COUNT(1) AS TOT_CNT
		FROM ORD_INFO A,
		     ORD_PROD_INFO B,
		     PROD C,
		     MBER_INFO D,
		     MBER_INFO D1,
		     PROD_BUY_CONF_INFO E,
		     CHG_PROD_INFO F,
		     CHG_RTN_PROC_INFO G
		WHERE A.ORD_CD = B.ORD_CD
		AND A.MBER_SEQ = D.MBER_SEQ
		AND B.PROD_CODE = C.PROD_CODE
		AND C.MBER_SEQ = D1.MBER_SEQ
		AND B.ORD_CD = E.ORD_CD(+)
		AND B.PROD_CODE = E.PROD_CODE(+)
		AND B.PROD_SEQ = E.PROD_SEQ(+)
		AND B.ORD_CD = F.ORD_CD
		AND B.PROD_CODE = F.PROD_CODE
		AND B.PROD_SEQ = F.PROD_SEQ
		AND F.CHG_CD = G.CHG_CD
		AND B.PROD_TYPE_CD = '1'
		AND A.MBER_SEQ = #{S_MBER_SEQ}
		<include refid="SearchBuySale" />

		<!-- 교환신청 상태 -->
		<choose>
			<when test="S_PROC_STAT_CD != null and S_PROC_STAT_CD != ''">
				 AND G.CHG_PROC_TYPE_CD = #{S_PROC_STAT_CD}
			</when>
			<otherwise>
				AND G.CHG_PROC_TYPE_CD IN ('10', '20', '30')
				AND B.PROC_STAT_CD IN ('41', '42', '43')
			</otherwise>
		</choose>

		<!-- 상품명 -->
		<if test="S_PROD_NM != null and S_PROD_NM != ''">
            AND C.PROD_NM LIKE '%'|| #{S_PROD_NM} ||'%'
		</if>
	</select>

	<select id="selectListSaleExcReqProd" parameterType="hashmap" resultMap="viewRtnOrderMap">
		SELECT
		      A.ORD_CD,
		      TO_CHAR(A.ORD_REG_DATE, 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE,
		      G.CHG_CD,
		      G.CHG_PROC_TYPE_CD AS PROC_STAT_CD,
		      (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'CHG_PROC_TYPE_CD' AND COM_CD = G.CHG_PROC_TYPE_CD) AS PROC_STAT_NM,
		      B.PROD_ORD_AMT,
		      NVL((B.PROD_ORD_AMT + B.DLV_PRCE), 0) AS PROD_DLV_ORD_AMT,
		      B.DLV_PRCE,
		      B.PROD_CODE,
		      B.PROD_SEQ,
		      B.PROD_TYPE_CD,
		      B.PROD_PRCE,
		      B.ORD_QTY,
		      (SELECT PROD_IMG_URL FROM PROD_IMG WHERE PROD_CODE = B.PROD_CODE AND PROD_IMG_GB_CD ='11') AS IMG_URL,
		      B.SELLER_CD,
		      C.PROD_NM,
		      D1.MBER_GB_CD AS SELLER_MBER_GB_CD,
		      (CASE WHEN M.MINI_SHOP_NM IS NULL
			        THEN D1.MBER_NM
			        ELSE M.MINI_SHOP_NM
			   END) AS MINI_SHOP_NM,
			  (SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = M.MINI_PROFILE_SEQ) AS MINI_SHOP_PATH,
		      G.CHG_REASON_CD,
		      (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'CHG_REASON_CD' AND COM_CD = G.CHG_REASON_CD) AS CHG_REASON_NM,
		      CHG_REASON,
		      TO_CHAR(G.CHG_REG_DT, 'YYYY-MM-DD HH24:MI') AS CHG_REG_DT,
		      TO_CHAR(G.CHG_FIN_DT, 'YYYY-MM-DD HH24:MI') AS CHG_FIN_DT,
		      G.RCV_NM,
		      G.HP AS CONTACT,
		      G.ZIP_CD AS ZIP_CODE,
		      G.JUSO_DORO AS BAS_ADDR,
		      G.JUSO_DTL AS DTL_ADDR,
		      G.MEMO AS SHIP_MEMO,
		      (
			        CASE WHEN D1.MBER_GB_CD = '0'
			          THEN (SELECT MBER_PHONE FROM   MBER_INFO PU WHERE  PU.MBER_SEQ = C.MBER_SEQ)
			          ELSE (SELECT CS_PER_TEL FROM   SELLER_INFO_CFG PU WHERE  PU.MBER_SEQ = C.MBER_SEQ)
			        END
		       )  MBER_PHONE ,
		      C.DLV_WAY_CD,
		      C.DLV_PAY_GB_CD, 
		      C.DLV_STAND_AMT,
		      B.DLV_PAY_F_CD,
		      CASE 
                  WHEN (SELECT Count(*) 
                        FROM   ORD_PROD_INFO 
                        WHERE  ORD_CD = A.ORD_CD 
                               AND DLV_GRP_CODE = B.DLV_GRP_CODE) = 1 THEN 
                  'N' 
                  ELSE 'Y' 
                END AS DLV_GROUP_YN,
              (
                     SELECT REPLACE(LTRIM (SYS_CONNECT_BY_PATH (POPT.OPT_NM, ' // '), ' // '), '//', '/') AS OPT_NM
                          FROM   PROD_OP POPT 
                           WHERE  POPT.OPT_CD = POPTI.OPT_CD
                           START WITH POPT.PAR_OPT_CD = '0'
                           CONNECT BY PRIOR POPT.OPT_CD = POPT.PAR_OPT_CD
              ) AS OPT_INFO,
              POPTI.OPT_QTY,
              POPT.OPT_PRCE,
              POPTF.OP_GB_CD
		FROM ORD_INFO A,
		     ORD_PROD_INFO B,
		     PROD C,
		     MBER_INFO D,
		     MBER_INFO D1,
		     MBER_MINI_SHOP_INFO M,
		     PROD_BUY_CONF_INFO E,
		     CHG_PROD_INFO F,
		     CHG_RTN_PROC_INFO G,
		     ORD_PROD_OPT_INFO POPTI,
			 PROD_OP POPT,
			 PROD_OP_INFO POPTF
		WHERE A.ORD_CD = B.ORD_CD
		AND A.MBER_SEQ = D.MBER_SEQ
		AND B.PROD_CODE = C.PROD_CODE
		AND C.MBER_SEQ = D1.MBER_SEQ
		AND C.MBER_SEQ = M.MBER_SEQ(+)
		AND B.ORD_CD = E.ORD_CD(+)
		AND B.PROD_CODE = E.PROD_CODE(+)
		AND B.PROD_SEQ = E.PROD_SEQ(+)
		AND B.ORD_CD = F.ORD_CD
		AND B.PROD_CODE = F.PROD_CODE
		AND B.PROD_SEQ = F.PROD_SEQ
		AND F.CHG_CD = G.CHG_CD
		AND B.PROD_TYPE_CD = '1'
		AND G.CHG_PROC_TYPE_CD IN ('10', '20', '30')
		AND B.ORD_CD =  POPTI.ORD_CD(+)
		AND B.PROD_CODE = POPTI.PROD_CODE(+)
        AND B.PROD_SEQ =  POPTI.PROD_SEQ(+)
        AND POPTI.OPT_CD = POPT.OPT_CD(+)
        AND POPT.OPT_GRP_CD = POPTF.OPT_GRP_CD(+)
		<!-- 주문코드 -->
		<if test="S_ORD_CD != null and S_ORD_CD != ''">
		    AND A.ORD_CD = #{S_ORD_CD}
		</if>
		ORDER BY B.PROD_CODE, POPTF.OP_GB_CD, OPT_INFO
	</select>

	<select id="selectListSaleTakeBaReqHist" parameterType="hashmap" resultMap="listOrderMap">
		<include refid="buyPagingHeader" />
			SELECT ORD.*, 
				DENSE_RANK() OVER (ORDER BY ORD_CD DESC) AS RNUM  FROM(
				  SELECT
			      A.ORD_CD,
			      TO_CHAR(F.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE,
			      G.CHG_CD,
			      <!--G.CHG_PROC_TYPE_CD AS PROC_STAT_CD,  -->
			      B.PROC_STAT_CD,
			      <!--(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'CHG_PROC_TYPE_CD' AND COM_CD = G.CHG_PROC_TYPE_CD) AS PROC_STAT_NM,  -->
			      (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD' AND COM_CD = B.PROC_STAT_CD) AS PROC_STAT_NM,
			      B.PROD_ORD_AMT,
			      B.DLV_PRCE,
			      B.PROD_CODE,
			      B.PROD_SEQ,
			      B.PROD_TYPE_CD,
			      B.PROD_PRCE,
			      B.ORD_QTY,
			      (SELECT PROD_IMG_URL FROM PROD_IMG WHERE PROD_CODE = B.PROD_CODE AND PROD_IMG_GB_CD ='11') AS IMG_URL,
			      B.SELLER_CD,
			      C.PROD_NM,
			      D1.MBER_GB_CD AS SELLER_MBER_GB_CD,
			      C.DLV_PAY_GB_CD,
                  C.DLV_WAY_CD,
                  C.DLV_STAND_AMT,
                  B.DLV_PAY_F_CD, 
                   CASE 
	                  WHEN (SELECT Count(*) 
	                        FROM   ORD_PROD_INFO 
	                        WHERE  ORD_CD = A.ORD_CD 
	                               AND DLV_GRP_CODE = B.DLV_GRP_CODE) = 1 THEN 
	                  'N' 
	                  ELSE 'Y' 
	                END AS DLV_GROUP_YN,
	               (
                          SELECT REPLACE(LTRIM (SYS_CONNECT_BY_PATH (POPT.OPT_NM, ' // '), ' // '), '//', '/') AS OPT_NM
                          FROM   PROD_OP POPT 
                           WHERE  POPT.OPT_CD = POPTI.OPT_CD
                           START WITH POPT.PAR_OPT_CD = '0'
                           CONNECT BY PRIOR POPT.OPT_CD = POPT.PAR_OPT_CD
                   ) AS OPT_INFO,
                   POPTI.OPT_QTY,
                   POPT.OPT_PRCE,
                   POPTF.OP_GB_CD 
				FROM ORD_INFO A,
				     ORD_PROD_INFO B,
				     PROD C,
				     MBER_INFO D,
				     MBER_INFO D1,
				     PROD_BUY_CONF_INFO E,
				     CHG_PROD_INFO F,
				     CHG_RTN_PROC_INFO G,
				     ORD_PROD_OPT_INFO POPTI,
				     PROD_OP POPT,
				     PROD_OP_INFO POPTF
				WHERE A.ORD_CD = B.ORD_CD
				AND A.MBER_SEQ = D.MBER_SEQ
				AND B.PROD_CODE = C.PROD_CODE
				AND C.MBER_SEQ = D1.MBER_SEQ
				AND B.ORD_CD = E.ORD_CD(+)
				AND B.PROD_CODE = E.PROD_CODE(+)
				AND B.PROD_SEQ = E.PROD_SEQ(+)
				AND B.ORD_CD = F.ORD_CD
				AND B.PROD_CODE = F.PROD_CODE
				AND B.PROD_SEQ = F.PROD_SEQ
				AND F.CHG_CD = G.CHG_CD
				AND B.PROD_TYPE_CD = '1'
				AND A.MBER_SEQ = #{S_MBER_SEQ}
				AND B.ORD_CD =  POPTI.ORD_CD(+)
		        AND B.PROD_CODE = POPTI.PROD_CODE(+)
		        AND B.PROD_SEQ =  POPTI.PROD_SEQ(+)
		        AND POPTI.OPT_CD = POPT.OPT_CD(+)
		        AND POPT.OPT_GRP_CD = POPTF.OPT_GRP_CD(+)
				<include refid="SearchBuySale" />

				<!-- 반품신청 상태 -->
				<choose>
					<when test="S_PROC_STAT_CD != null and S_PROC_STAT_CD != ''">
						 AND B.PROC_STAT_CD = #{S_PROC_STAT_CD}
					</when>
					<otherwise>
						AND G.CHG_PROC_TYPE_CD IN ('50', '60', '70')
						AND B.PROC_STAT_CD IN ('31', '32', '33')
					</otherwise>
				</choose>


				<!-- 상품명 -->
				<if test="S_PROD_NM != null and S_PROD_NM != ''">
		            AND C.PROD_NM LIKE '%'|| #{S_PROD_NM} ||'%'
				</if>
				ORDER BY F.REGIST_DT DESC, POPTF.OP_GB_CD, OPT_INFO
			) ORD
		<include refid="buyPagingFooter" />
	</select>

	<select id="selectListSaleTakeBaReqHistTotCnt" parameterType="hashmap" resultType="int">
		SELECT
		      COUNT(1) AS TOT_CNT
		FROM ORD_INFO A,
		     ORD_PROD_INFO B,
		     PROD C,
		     MBER_INFO D,
		     MBER_INFO D1,
		     PROD_BUY_CONF_INFO E,
		     CHG_PROD_INFO F,
		     CHG_RTN_PROC_INFO G
		WHERE A.ORD_CD = B.ORD_CD
		AND A.MBER_SEQ = D.MBER_SEQ
		AND B.PROD_CODE = C.PROD_CODE
		AND C.MBER_SEQ = D1.MBER_SEQ
		AND B.ORD_CD = E.ORD_CD(+)
		AND B.PROD_CODE = E.PROD_CODE(+)
		AND B.PROD_SEQ = E.PROD_SEQ(+)
		AND B.ORD_CD = F.ORD_CD
		AND B.PROD_CODE = F.PROD_CODE
		AND B.PROD_SEQ = F.PROD_SEQ
		AND F.CHG_CD = G.CHG_CD
		AND B.PROD_TYPE_CD = '1'
		AND A.MBER_SEQ = #{S_MBER_SEQ}

		<include refid="SearchBuySale" />

		<!-- 반품신청 상태 -->
		<choose>
			<when test="S_PROC_STAT_CD != null and S_PROC_STAT_CD != ''">
				 AND B.PROC_STAT_CD = #{S_PROC_STAT_CD}
			</when>
			<otherwise>
				AND G.CHG_PROC_TYPE_CD IN ('50', '60', '70')
				AND B.PROC_STAT_CD IN ('31', '32', '33')
			</otherwise>
		</choose>

		<!-- 상품명 -->
		<if test="S_PROD_NM != null and S_PROD_NM != ''">
            AND C.PROD_NM LIKE '%'|| #{S_PROD_NM} ||'%'
		</if>
	</select>

	<select id="selectListSaleTakeBaReqProd" parameterType="hashmap" resultMap="viewRtnOrderMap">
		SELECT
		      A.ORD_CD,
		      TO_CHAR(A.ORD_REG_DATE, 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE,
		      G.CHG_CD,
		      <!--G.CHG_PROC_TYPE_CD AS PROC_STAT_CD,  -->
		      B.PROC_STAT_CD,
		      <!--(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'CHG_PROC_TYPE_CD' AND COM_CD = G.CHG_PROC_TYPE_CD) AS PROC_STAT_NM,  -->
		      (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD' AND COM_CD = B.PROC_STAT_CD) AS PROC_STAT_NM,
		      (CASE WHEN G.CHG_PROC_TYPE_CD = '60' THEN '환불대기중'
		             WHEN G.CHG_PROC_TYPE_CD = '70' THEN '환불완료'
		             ELSE ''
		      END) AS REFUND_STAT_NM,
		      B.PROD_ORD_AMT,
		      NVL((B.PROD_ORD_AMT + B.DLV_PRCE), 0) AS PROD_DLV_ORD_AMT,
		      0 AS DSCNT_AMT,
		      NVL((B.PROD_ORD_AMT + B.DLV_PRCE + 0), 0) AS EFUND_AMT,
		      B.DLV_PRCE,
		      B.PROD_CODE,
		      B.PROD_SEQ,
		      B.PROD_TYPE_CD,
		      B.PROD_PRCE,
		      B.ORD_QTY,
		      (SELECT PROD_IMG_URL FROM PROD_IMG WHERE PROD_CODE = B.PROD_CODE AND PROD_IMG_GB_CD ='11') AS IMG_URL,
		      B.SELLER_CD,
		      C.PROD_NM,
		      D1.MBER_GB_CD AS SELLER_MBER_GB_CD,
		      (CASE WHEN M.MINI_SHOP_NM IS NULL
			        THEN D1.MBER_NM
			        ELSE M.MINI_SHOP_NM
			   END) AS MINI_SHOP_NM,
			  (SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = M.MINI_PROFILE_SEQ) AS MINI_SHOP_PATH,
		      G.CHG_REASON_CD,
		      (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'CHG_REASON_CD' AND COM_CD = G.CHG_REASON_CD) AS CHG_REASON_NM,
		      G.CHG_REASON,
		      TO_CHAR(G.CHG_REG_DT, 'YYYY-MM-DD HH24:MI') AS CHG_REG_DT,
		      TO_CHAR(G.CHG_FIN_DT, 'YYYY-MM-DD HH24:MI') AS CHG_FIN_DT,
		      G.RCV_NM,
		      G.HP AS CONTACT,
		      G.ZIP_CD AS ZIP_CODE,
		      G.JUSO_DORO AS BAS_ADDR,
		      G.JUSO_DTL AS DTL_ADDR,
		      G.MEMO AS SHIP_MEMO,
		      (
			        CASE WHEN D1.MBER_GB_CD = '0'
			          THEN (SELECT MBER_PHONE FROM   MBER_INFO PU WHERE  PU.MBER_SEQ = C.MBER_SEQ)
			          ELSE (SELECT CS_PER_TEL FROM   SELLER_INFO_CFG PU WHERE  PU.MBER_SEQ = C.MBER_SEQ)
			        END
		       )  MBER_PHONE ,
		      A.CPN_USE_AMT,
 			  A.POINT_USE_AMT,
 			  C.DLV_WAY_CD,
 			  C.DLV_PAY_GB_CD,
 			  C.DLV_STAND_AMT,
 			  B.DLV_PAY_F_CD,
 			  CASE 
              WHEN (SELECT Count(*) 
                    FROM   ORD_PROD_INFO 
                    WHERE  ORD_CD = A.ORD_CD 
                           AND DLV_GRP_CODE = B.DLV_GRP_CODE) = 1 THEN 
              'N' 
              ELSE 'Y' 
            END AS DLV_GROUP_YN,
            (
                   SELECT REPLACE(LTRIM (SYS_CONNECT_BY_PATH (POPT.OPT_NM, ' // '), ' // '), '//', '/') AS OPT_NM
                          FROM   PROD_OP POPT 
                           WHERE  POPT.OPT_CD = POPTI.OPT_CD
                           START WITH POPT.PAR_OPT_CD = '0'
                           CONNECT BY PRIOR POPT.OPT_CD = POPT.PAR_OPT_CD
            ) AS OPT_INFO,
            POPTI.OPT_QTY,
            POPT.OPT_PRCE,
            POPTF.OP_GB_CD
 		FROM ORD_INFO A,
		     ORD_PROD_INFO B,
		     PROD C,
		     MBER_INFO D,
		     MBER_INFO D1,
		     MBER_MINI_SHOP_INFO M,
		     PROD_BUY_CONF_INFO E,
		     CHG_PROD_INFO F,
		     CHG_RTN_PROC_INFO G,
		     ORD_PROD_OPT_INFO POPTI,
			 PROD_OP POPT,
			 PROD_OP_INFO POPTF
		WHERE A.ORD_CD = B.ORD_CD
		AND A.MBER_SEQ = D.MBER_SEQ
		AND B.PROD_CODE = C.PROD_CODE
		AND C.MBER_SEQ = D1.MBER_SEQ
		AND C.MBER_SEQ = M.MBER_SEQ(+)
		AND B.ORD_CD = E.ORD_CD(+)
		AND B.PROD_CODE = E.PROD_CODE(+)
		AND B.PROD_SEQ = E.PROD_SEQ(+)
		AND B.ORD_CD = F.ORD_CD
		AND B.PROD_CODE = F.PROD_CODE
		AND B.PROD_SEQ = F.PROD_SEQ
		AND F.CHG_CD = G.CHG_CD
		AND B.PROD_TYPE_CD = '1'
		AND G.CHG_PROC_TYPE_CD IN ('50', '60', '70')
		AND B.ORD_CD =  POPTI.ORD_CD(+)
        AND B.PROD_CODE = POPTI.PROD_CODE(+)
        AND B.PROD_SEQ =  POPTI.PROD_SEQ(+)
        AND POPTI.OPT_CD = POPT.OPT_CD(+)	
        AND POPT.OPT_GRP_CD = POPTF.OPT_GRP_CD(+)		  
		<!-- 주문코드 -->
		<if test="S_ORD_CD != null and S_ORD_CD != ''">
		    AND A.ORD_CD = #{S_ORD_CD}
		</if>
		ORDER BY B.PROD_CODE, POPTF.OP_GB_CD, OPT_INFO
	</select>
	
	<select id="selectListSaleOrderCanHist" parameterType="hashmap" resultMap="listOrderMap">
		<include refid="buyPagingHeader" />
			SELECT ORD.*, 
				DENSE_RANK() OVER (ORDER BY ORD_CD DESC) AS RNUM  FROM(
				SELECT
			      A.ORD_CD,
			      TO_CHAR(R.CANC_DT, 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE,
			      B.PROC_STAT_CD,
	      		  (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD' AND COM_CD = B.PROC_STAT_CD) AS PROC_STAT_NM,
			      B.PROD_ORD_AMT,
			      B.DLV_PRCE,
			      B.PROD_CODE,
			      B.PROD_SEQ,
			      B.PROD_TYPE_CD,
			      B.PROD_PRCE,
			      B.ORD_QTY,
			      (SELECT PROD_IMG_URL FROM PROD_IMG WHERE PROD_CODE = B.PROD_CODE AND PROD_IMG_GB_CD ='11') AS IMG_URL,
			      B.SELLER_CD,
			      B.CANC_CD,
			      C.PROD_NM,
			      D1.MBER_GB_CD AS SELLER_MBER_GB_CD,
			      C.DLV_PAY_GB_CD,
			      (
                          SELECT REPLACE(LTRIM (SYS_CONNECT_BY_PATH (POPT.OPT_NM, ' // '), ' // '), '//', '/') AS OPT_NM
                          FROM   PROD_OP POPT 
                           WHERE  POPT.OPT_CD = POPTI.OPT_CD
                           START WITH POPT.PAR_OPT_CD = '0'
                           CONNECT BY PRIOR POPT.OPT_CD = POPT.PAR_OPT_CD
                   ) AS OPT_INFO,
                   POPTI.OPT_QTY,
                   POPT.OPT_PRCE,
                   POPTF.OP_GB_CD,
                   C.DLV_WAY_CD,
                   C.DLV_STAND_AMT,
                   B.DLV_PAY_F_CD,
                   CASE 
	                  WHEN (SELECT Count(*) 
	                        FROM   ORD_PROD_INFO 
	                        WHERE  ORD_CD = A.ORD_CD 
	                               AND DLV_GRP_CODE = B.DLV_GRP_CODE) = 1 THEN 
	                  'N' 
	                  ELSE 'Y' 
	                END AS DLV_GROUP_YN
				FROM ORD_INFO A,
				     ORD_PROD_INFO B,
				     PROD C,
				     MBER_INFO D,
				     MBER_INFO D1,
				     PROD_BUY_CONF_INFO E,
				     ORD_PROD_OPT_INFO POPTI,
				     PROD_OP POPT,
				     PROD_OP_INFO POPTF,
				     ORD_CANC_INFO R
				WHERE A.ORD_CD = B.ORD_CD
				AND A.MBER_SEQ = D.MBER_SEQ
				AND B.PROD_CODE = C.PROD_CODE
				AND B.CANC_CD = R.CANC_CD
				AND C.MBER_SEQ = D1.MBER_SEQ
				AND B.ORD_CD = E.ORD_CD(+)
				AND B.PROD_CODE = E.PROD_CODE(+)
				AND B.PROD_SEQ = E.PROD_SEQ(+)
				AND B.PROD_TYPE_CD = '1'
				AND A.MBER_SEQ = #{S_MBER_SEQ}
				AND B.PROC_STAT_CD = '50'
				AND B.ORD_CD =  POPTI.ORD_CD(+)
		        AND B.PROD_CODE = POPTI.PROD_CODE(+)
		        AND B.PROD_SEQ =  POPTI.PROD_SEQ(+)
		        AND POPTI.OPT_CD = POPT.OPT_CD(+)
		        AND POPT.OPT_GRP_CD = POPTF.OPT_GRP_CD(+)
				<include refid="SearchBuySale" />

				<!-- 상품명 -->
				<if test="S_PROD_NM != null and S_PROD_NM != ''">
		            AND C.PROD_NM LIKE '%'|| #{S_PROD_NM} ||'%'
				</if>
				ORDER BY R.CANC_DT, POPTF.OP_GB_CD, OPT_INFO
			) ORD
		<include refid="buyPagingFooter" />
	</select>

	<select id="selectListSaleOrderCanHistTotCnt" parameterType="hashmap" resultType="int">
		SELECT
		      COUNT(1) AS TOT_CNT
		FROM ORD_INFO A,
		     ORD_PROD_INFO B,
		     PROD C,
		     MBER_INFO D,
		     MBER_INFO D1,
		     PROD_BUY_CONF_INFO E
		WHERE A.ORD_CD = B.ORD_CD
		AND A.MBER_SEQ = D.MBER_SEQ
		AND B.PROD_CODE = C.PROD_CODE
		AND C.MBER_SEQ = D1.MBER_SEQ
		AND B.ORD_CD = E.ORD_CD(+)
		AND B.PROD_CODE = E.PROD_CODE(+)
		AND B.PROD_SEQ = E.PROD_SEQ(+)
		AND B.PROD_TYPE_CD = '1'
		AND A.MBER_SEQ = #{S_MBER_SEQ}
		AND B.PROC_STAT_CD = '50'
		<include refid="SearchBuySale" />

		<!-- 상품명 -->
		<if test="S_PROD_NM != null and S_PROD_NM != ''">
            AND C.PROD_NM LIKE '%'|| #{S_PROD_NM} ||'%'
		</if>
	</select>

	<select id="selectListSaleOrderCanProd" parameterType="hashmap" resultMap="viewRtnOrderMap">
		SELECT
		      A.ORD_CD,
		      TO_CHAR(A.ORD_REG_DATE, 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE,
		      B.PROC_STAT_CD,
		      (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD' AND COM_CD = B.PROC_STAT_CD) AS PROC_STAT_NM,
		      B.PROD_ORD_AMT,
		      NVL((B.PROD_ORD_AMT + B.DLV_PRCE), 0) AS PROD_DLV_ORD_AMT,
		      NVL(B.PROD_ORD_AMT, 0) AS PROD_DLV_ORD_AMT2,
			  A.DSCNT_AMT,
			  A.REAL_SELT_AMT,
		      NVL((B.PROD_ORD_AMT + B.DLV_PRCE + 0), 0) AS EFUND_AMT,
		      B.PROD_CODE,
		      B.PROD_SEQ,
		      B.PROD_TYPE_CD,
		      B.PROD_PRCE,
		      B.ORD_QTY,
		      (SELECT PROD_IMG_URL FROM PROD_IMG WHERE PROD_CODE = B.PROD_CODE AND PROD_IMG_GB_CD ='11') AS IMG_URL,
		      B.SELLER_CD,
		      C.PROD_NM,
		      D1.MBER_GB_CD AS SELLER_MBER_GB_CD,
		      (CASE WHEN M.MINI_SHOP_NM IS NULL
			        THEN D1.MBER_NM
			        ELSE M.MINI_SHOP_NM
			   END) AS MINI_SHOP_NM,
			  (SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = M.MINI_PROFILE_SEQ) AS MINI_SHOP_PATH,
		       F.CANC_REASON_CD,
		       CASE
		         WHEN F.SELLER_CANC_YN = 'Y' THEN
		         (SELECT COM_CD_NM
		          FROM   CODE
		          WHERE  GRP_CD = 'CANC_SELLER_REASON_CD'
		                 AND COM_CD = F.CANC_REASON_CD)
		         ELSE (SELECT COM_CD_NM
		               FROM   CODE
		               WHERE  GRP_CD = 'CANC_REASON_CD'
		                      AND COM_CD = F.CANC_REASON_CD)
		       END                                                 AS CANC_REASON_NM ,
		       F.CANC_REASON,
		       TO_CHAR(F.CANC_DT, 'YYYY-MM-DD HH24:MI') AS CANC_DT,
		       (
			        CASE WHEN D1.MBER_GB_CD = '0'
			          THEN (SELECT MBER_PHONE FROM   MBER_INFO PU WHERE  PU.MBER_SEQ = C.MBER_SEQ)
			          ELSE (SELECT CS_PER_TEL FROM   SELLER_INFO_CFG PU WHERE  PU.MBER_SEQ = C.MBER_SEQ)
			        END
		       )  MBER_PHONE ,
		       NVL(A.POINT_USE_AMT,'0') POINT_USE_AMT,
           	   NVL(A.CPN_USE_AMT,'0') CPN_USE_AMT,
	           	   C.DLV_PAY_GB_CD,
	           	   C.DLV_WAY_CD,
	           	   C.DLV_STAND_AMT,
	           	   B.DLV_PAY_F_CD,
	           	   CASE 
                  WHEN (SELECT Count(*) 
                        FROM   ORD_PROD_INFO 
                        WHERE  ORD_CD = A.ORD_CD 
                               AND DLV_GRP_CODE = B.DLV_GRP_CODE) = 1 THEN 
                  'N' 
                  ELSE 'Y' 
                END AS DLV_GROUP_YN,
	           B.DLV_PAY_F_CD,
	           CASE WHEN C.DLV_PAY_GB_CD = 1 OR B.DLV_PAY_F_CD = 20 THEN 0 ELSE NVL(B.DLV_PRCE,0) END DLV_PRCE,
	           G.TRD_AMT,
	           (
                      SELECT REPLACE(LTRIM (SYS_CONNECT_BY_PATH (POPT.OPT_NM, ' // '), ' // '), '//', '/') AS OPT_NM
                          FROM   PROD_OP POPT 
                           WHERE  POPT.OPT_CD = POPTI.OPT_CD
                           START WITH POPT.PAR_OPT_CD = '0'
                           CONNECT BY PRIOR POPT.OPT_CD = POPT.PAR_OPT_CD
               ) AS OPT_INFO,
               POPTI.OPT_QTY,
               POPT.OPT_PRCE,
			   POPTF.OP_GB_CD	
		FROM ORD_INFO A,
		     ORD_PROD_INFO B,
		     PROD C,
		     MBER_INFO D,
		     MBER_INFO D1,
		     MBER_MINI_SHOP_INFO M,
		     PROD_BUY_CONF_INFO E,
		     ORD_CANC_INFO F,
		     ORD_SETL_INFO G,
		     ORD_PROD_OPT_INFO POPTI,
			 PROD_OP POPT,
			 PROD_OP_INFO POPTF
		WHERE A.ORD_CD = B.ORD_CD
		AND A.MBER_SEQ = D.MBER_SEQ
		AND B.PROD_CODE = C.PROD_CODE
		AND C.MBER_SEQ = D1.MBER_SEQ
		AND C.MBER_SEQ = M.MBER_SEQ(+)
		AND B.ORD_CD = E.ORD_CD(+)
		AND B.ORD_CD = G.ORD_CD(+)
		AND B.PROD_CODE = E.PROD_CODE(+)
		AND B.PROD_SEQ = E.PROD_SEQ(+)
		AND B.CANC_CD = F.CANC_CD
		AND B.PROD_TYPE_CD = '1'
		AND B.PROC_STAT_CD = '50'
		AND G.TRD_GB_CD = '10'
		AND B.ORD_CD =  POPTI.ORD_CD(+)
        AND B.PROD_CODE = POPTI.PROD_CODE(+)
        AND B.PROD_SEQ =  POPTI.PROD_SEQ(+)
        AND POPTI.OPT_CD = POPT.OPT_CD(+)
        AND POPT.OPT_GRP_CD = POPTF.OPT_GRP_CD(+)
		<!-- 주문코드 -->
		<if test="S_ORD_CD != null and S_ORD_CD != ''">
		    AND A.ORD_CD = #{S_ORD_CD}
		</if>
		ORDER BY B.PROD_CODE, POPTF.OP_GB_CD, OPT_INFO
	</select>

	<select id="selectListOrderProd" parameterType="hashmap" resultMap="viewCancOrderMap">
		SELECT
	       A.ORD_CD,
	       A.TOT_ORD_PROD_CNT,
	       A.SELT_GB_CD,
	       NVL(B.PROD_CPN_CD,'N0') AS PROD_CPN_CD,
              CASE WHEN TO_CHAR(SYSDATE,'YYYYMM') = TO_CHAR(A.REGIST_DT,'YYYYMM') THEN 'Y' ELSE 'N' END AS PHONE_CANCEL_YN,
	       TO_CHAR(A.ORD_REG_DATE, 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE,
	       (CASE WHEN B.DLV_PAY_F_CD = 20
	       		 THEN  B.PROD_ORD_AMT + B.DLV_PRCE
	       		 ELSE PROD_ORD_AMT
	       END) AS RFND_AMT ,
		   B.PROC_STAT_CD,
	       B.PROD_ORD_AMT,
	       B.DLV_PRCE,
	       B.PROD_CODE,
	       B.PROD_SEQ,
	       B.PROD_TYPE_CD,
	       B.PROD_PRCE,
	       B.ORD_QTY,
	       (SELECT PROD_IMG_URL FROM PROD_IMG WHERE PROD_CODE = B.PROD_CODE AND PROD_IMG_GB_CD ='11') AS IMG_URL,
	       C.PROD_NM,
           D.MBER_SEQ,
           (
		        CASE WHEN D1.MBER_GB_CD = '0'
		          THEN (SELECT MBER_PHONE FROM   MBER_INFO PU WHERE  PU.MBER_SEQ = C.MBER_SEQ)
		          ELSE (SELECT CS_PER_TEL FROM   SELLER_INFO_CFG PU WHERE  PU.MBER_SEQ = C.MBER_SEQ)
		        END
	       )  MBER_PHONE ,
           C.MBER_SEQ AS SELLER_MBER_SEQ,
	       (CASE WHEN E.MINI_SHOP_NM IS NULL
	             THEN D1.MBER_NM
	             ELSE E.MINI_SHOP_NM
	        END) AS MINI_SHOP_NM,
           (SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = E.MINI_PROFILE_SEQ) AS MINI_SHOP_PATH,
	      F.RCV_NM,
          F.ZIP_CD,
          F.JUSO_DORO,
          F.JUSO_DTL,
          F.RCV_TEL,
          C.DLV_PAY_GB_CD,
          NVL (B.PROD_CPN_CD, 0) AS PROD_CPN_CD,
          NVL (B.DLV_GRP_CODE, 'NO') AS DLV_GRP_CODE,
          (CASE WHEN TO_CHAR(A.REGIST_DT,'YYYYMM') = TO_CHAR(SYSDATE,'YYYYMM')
		       		 THEN 'N'
		       		 ELSE 'Y'
		       END) AS RFND_YN,
		  (CASE 
            WHEN (SELECT Count(*) 
                  FROM   ORD_PROD_INFO 
                  WHERE  ORD_CD = A.ORD_CD 
                         AND DLV_GRP_CODE = B.DLV_GRP_CODE) = 1 THEN 
            'N' 
            ELSE 'Y' 
          END) AS DLV_GROUP_YN, 
          C.DLV_WAY_CD,
          C.DLV_STAND_AMT,
          B.DLV_PAY_F_CD,
          (
              SELECT REPLACE(LTRIM (SYS_CONNECT_BY_PATH (POPT.OPT_NM, ' // '), ' // '), '//', '/') AS OPT_NM
                          FROM   PROD_OP POPT 
                           WHERE  POPT.OPT_CD = POPTI.OPT_CD
                           START WITH POPT.PAR_OPT_CD = '0'
                           CONNECT BY PRIOR POPT.OPT_CD = POPT.PAR_OPT_CD
           ) AS OPT_INFO,
           POPTI.OPT_QTY,
           POPT.OPT_PRCE,
           POPTF.OP_GB_CD
        FROM ORD_INFO A,
		     ORD_PROD_INFO B,
		     PROD C,
		     MBER_INFO D,
		     MBER_INFO D1,
		     MBER_MINI_SHOP_INFO E,
         	 ORD_DLV_INFO F,
         	 ORD_PROD_OPT_INFO POPTI,
			 PROD_OP POPT,
			 PROD_OP_INFO POPTF
		WHERE A.ORD_CD = B.ORD_CD
		AND A.MBER_SEQ = D.MBER_SEQ
		AND B.PROD_CODE = C.PROD_CODE
    	AND F.ORD_CD = A.ORD_CD
    	AND F.ORD_CD = B.ORD_CD
    	AND C.MBER_SEQ = D1.MBER_SEQ
		AND C.MBER_SEQ = E.MBER_SEQ(+)
		AND B.ORD_CD =  POPTI.ORD_CD(+)
        AND B.PROD_CODE = POPTI.PROD_CODE(+)
        AND B.PROD_SEQ =  POPTI.PROD_SEQ(+)
        AND POPTI.OPT_CD = POPT.OPT_CD(+)
        AND POPT.OPT_GRP_CD = POPTF.OPT_GRP_CD(+)
		<!-- 주문코드 -->
		<if test="S_ORD_CD != null and S_ORD_CD != ''">
			AND A.ORD_CD = #{S_ORD_CD}
		</if>

		<!-- 상품코드 -->
		<if test="prodCd != null and prodCd.length > 0">
            AND B.PROD_CODE IN
         	<foreach item="item" index="index" collection="prodCd" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>

		<!-- 상품SEQ -->
		<if test="prodSeq != null and prodSeq.length > 0">
            AND B.PROD_SEQ IN
         	<foreach item="item" index="index" collection="prodSeq" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		ORDER BY B.PROD_CODE, POPTF.OP_GB_CD, OPT_INFO
	</select>

	<!-- 주문취소 - 단일,복합 상품 취소 구분 획득 -->
	<select id="selectMobileSaleOrderCancelGroupInfo" resultType="hashmap">
		SELECT
			  A.MBER_SEQ
			, A.POINT_USE_AMT
			, A.REAL_SELT_AMT
			, A.SELT_GB_CD
			, COUNT(*) AS CT
		FROM
			ORD_INFO A, ORD_PROD_INFO B
		WHERE
			    A.ORD_CD = B.ORD_CD
			AND A.ORD_CD = #{ORD_CD}
		GROUP BY A.MBER_SEQ, A.POINT_USE_AMT, A.REAL_SELT_AMT  , A.SELT_GB_CD
	</select>

	<!-- 결제취소 - 상품 결제 기본 정보  -->
	<select id="selectMobileDefaultProductSaleCancelInfo" resultType="hashmap">
		SELECT
			  A.MBER_SEQ
			, A.SELT_GB_CD
			, NVL(A.POINT_USE_AMT,0) AS POINT_USE_AMT
			, NVL(B.PROD_CPN_CD,'NO') AS PROD_CPN_CD
			, NVL(B.DLV_PRCE,0) AS DLV_PRCE
			, B.PROD_PRCE * B.ORD_QTY - NVL(B.CPN_USE_AMT,0) AS TOTAL_CANCEL_PRICE
		FROM
			ORD_INFO A, ORD_PROD_INFO B, PROD C, MBER_INFO D
		WHERE
			    A.ORD_CD = B.ORD_CD
			AND B.PROD_CODE = C.PROD_CODE
			AND C.MBER_SEQ = D.MBER_SEQ
			AND B.PROC_STAT_CD NOT IN ('33','50')
			AND A.ORD_CD = #{ORD_CD}
			AND B.PROD_CODE = #{PROD_CODE}
			AND B.PROD_SEQ = #{PROD_SEQ}
	</select>

	<!-- 주문취소 - 단일,복합 상품 취소 구분 획득 -->
	<select id="selectListBank" resultType="hashmap">
		SELECT
			  COM_CD
			, COM_CD_NM
		FROM
			CODE
		WHERE
			   GRP_CD='BANK_GB_CD'
	</select>

			<!-- 주문취소되었는지 확인 -->
	<select id="selectMobileSaleOrderCancelOrdcd" resultType="String" parameterType="String">
		SELECT
			 ORD_STAT_CD
		FROM
			ORD_INFO
		WHERE
			 ORD_CD = #{ORD_CD}
	</select>
</mapper>