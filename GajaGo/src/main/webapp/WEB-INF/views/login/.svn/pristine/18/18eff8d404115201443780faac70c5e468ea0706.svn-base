package com.ssocio.sharing.dao.web;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.springframework.ui.ModelMap;

import com.ssocio.sharing.cmmn.web.RspnsCnst;
import com.ssocio.sharing.service.web.WebTestServiceImpl;

@Component
public class WebTestDao {
	
// =========================================================================
			// # Log 설정
			// =========================================================================
			private static final Logger logger = LoggerFactory.getLogger(WebTestServiceImpl.class);
			
			// =========================================================================
			// # sqlSession 설정
			// -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
			// -- 하나만 사용할 경우 @Autowired
			// =========================================================================
			@Resource(name="sqlSessionMobile")
			private SqlSession sqlSession;

			public void setSqlSession(SqlSession sqlSession) {
				this.sqlSession = sqlSession;
			}
			

	/**
	 * <pre>
	 * 젠처 카테고리를 가져온다 
	 * 전체 카테고리를 가져온다
	 * @param paramDto
	 * @return
	 * @exception
	 * @date 2015. 7. 7. 오후 4:38:45
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.dao.web
	 * @비고
	 * 
	 * </pre>
	*/
	public List<Map<String, Object>> getCrtyList(Map<String, Object> paramDto) {
		return sqlSession.selectList("WebApiMapper.getCrtyList", paramDto);
	}


	/**
	 * <pre>
	 * 카테고리별 상품리스트 가져온다
	 * 카테고리별 상품리스트 가져온다
	 * @param paramDto
	 * @return
	 * @exception
	 * @date 2015. 7. 7. 오후 4:38:37
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.dao.web
	 * @비고
	 * 
	 * </pre>
	*/
	public List<Map<String, Object>> getAllPordList(Map<String, Object> paramDto) {
		return sqlSession.selectList("WebApiMapper.getAllPordList", paramDto);
	}




	public List<Map<String, Object>> getCateGoryfirstCD() {
		return sqlSession.selectList("WebApiMapper.getCateGoryfirstCD");
	}


	public List<Map<String, Object>> getSelectCategoryProd(Map<String, Object> inParam) {
		return sqlSession.selectList("WebApiMapper.getSelectCategoryProd",inParam);
	}


	public List<Map<String, Object>> getRecomProdlist(Map<String, Object> inParam) {
		return sqlSession.selectList("WebApiMapper.getRecomProdlist",inParam);
	}


	public Integer updateAlarmReliReg(Map<String, Object> inParam) {
		Integer retCnt = sqlSession.selectOne("WebApiMapper.selectAlarmCnt",inParam);
		if(retCnt > 0){
			retCnt =  sqlSession.update("WebApiMapper.updateAlarmReliReg",inParam);
		}else{
			retCnt = sqlSession.insert("WebApiMapper.insertAlarmReliReg",inParam);
		}
		return retCnt;
	}


	public Map<String, Object> selectUserInfo(Map<String, Object> inParam) {
		return sqlSession.selectOne("WebApiMapper.selectUserInfo",inParam);
	}


	public List<Object> selecSearchDeafalutProd(Map<String, Object> bodyParam) {
		return sqlSession.selectList("WebApiMapper.selecSearchProd",bodyParam);
	}


	public List<Map<String, Object>>  selectTalentProd(Map<String, Object> bodyParam) {
		return sqlSession.selectList("WebApiMapper.selectTalentProd",bodyParam);
	}


	public List<Map<String, Object>> selectwishProd(Map<String, Object> bodyParam) {
		return sqlSession.selectList("WebApiMapper.selectTalentProd",bodyParam);
	}


	public List<Map<String, Object>> selectAlertProd(
			Map<String, Object> bodyParam) {
		return sqlSession.selectList("WebApiMapper.selectAlertProd",bodyParam);
	}


	public List<Map<String, Object>> selectSharProdList() {
		return sqlSession.selectList("WebApiMapper.selectSharProdList");
	}


	public List<Map<String, Object>> selectRecomProdList(Map<String, Object> bodyParam) {
		return sqlSession.selectList("WebApiMapper.selectRecomProdList");
	}


	/**
	 * <pre>
	 * 기획전 리스트 가져온다
	 * 기획전 리스트 가져온다
	 * @param bodyParam
	 * @return
	 * @exception
	 * @date 2015. 7. 9. 오후 7:37:15
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.dao.web
	 * @비고
	 * 
	 * </pre>
	*/
	public List<Map<String, Object>> selectPlanList(Map<String, Object> bodyParam) {
		return sqlSession.selectList("WebApiMapper.selectPlanList",bodyParam);
	}


	public List<Map<String, Object>> selectPlanProdList(
			Map<String, Object> bodyParam) {
		return sqlSession.selectList("WebApiMapper.selectPlanProdList",bodyParam);
	}


	public Object selectMainBannerImg(Map<String, Object> bodyParam) {
		return sqlSession.selectOne("WebApiMapper.selectMainBannerImg",bodyParam);
	}


	public List<Map<String, Object>> selectFavoProdList(Map<String, Object> bodyParam) {
		return sqlSession.selectList("WebApiMapper.selectFavoProdList",bodyParam);
	}


	public List<Map<String, Object>> selectFavoCtryList(Map<String, Object> bodyParam) {
		return sqlSession.selectList("WebApiMapper.selectFavoCtryList",bodyParam);
	}


	public List<Map<String, Object>> selectLateProdList(Map<String, Object> inParam) {
		return sqlSession.selectList("WebApiMapper.selectLateProdList",inParam);
	}


	public Integer deleteLateProd(Map<String, Object> inParam) {
		return sqlSession.delete("WebApiMapper.deleteLateProd",inParam);
	}


	public List<Map<String, Object>> selectCardSellProdList(Map<String, Object> bodyParam) {
		return sqlSession.selectList("WebApiMapper.selectCardSellProdList",bodyParam);
	}


	public List<Map<String, Object>> selectCardSharingProdList(
			Map<String, Object> bodyParam) {
		return sqlSession.selectList("WebApiMapper.selectCardSharingProdList",bodyParam);
	}


	public List<Map<String, Object>> SelectMiniShoplist(
			Map<String, Object> bodyParam) {
		return sqlSession.selectList("WebApiMapper.SelectMiniShoplist",bodyParam);
	}


	public Map<String, Object> SelectMiniShopUser(Map<String, Object> bodyParam) {
		return sqlSession.selectOne("WebApiMapper.SelectMiniShopUser",bodyParam);
	}


	public List<Map<String, Object>> SelectCategoryList(
			List<String> list) {
		return sqlSession.selectList("WebApiMapper.SelectCategoryList",list);
	}


	public List<Map<String, Object>> SelectMiniShopPodlist(Map<String, Object> bodyParam) {
		return sqlSession.selectList("WebApiMapper.SelectMiniShopPodlist",bodyParam);
	}


	public List<Map<String, Object>> selectNoticeLlist() {
		return sqlSession.selectList("WebApiMapper.selectNoticeLlist");
	}


	public List<Map<String, Object>> selectNoticeDtl(Map<String, Object> inParam) {
		return sqlSession.selectList("WebApiMapper.selectNoticeDtl",inParam);
	}


	public Map<String, Object> selectNotiDeafultinfo(Map<String, Object> inParam) {
		return sqlSession.selectOne("WebApiMapper.selectNotiDeafultinfo",inParam);
	}


	public int insertNoticeReg(Map<String, Object> bodyParam) {
		return sqlSession.insert("WebApiMapper.insertNoticeReg",bodyParam);
	}


	public List<Map<String, Object>> selectFaqList(Map<String, Object> inParam) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		List<Map<String, Object>> list = null;
		logger.info("selectFaqList Start");
		try {
			list = sqlSession.selectList("WebApiMapper.selectFaqList", inParam);
		}
		catch (Exception e) {
			logger.error("selectFaqList DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

}
