package com.ssocio.sharing.dao.admin;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.springframework.ui.ModelMap;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.web.RspnsCnst;

/**
 * <pre>
 * 카테고리 Dao
 * 카테고리관리 Dao
 * @author Y.I.Chun
 * @version 
 * @since 2015. 7. 6. 오후 6:41:07
 * @see 
 * @History 
 *  Date          |    author    | 변경내용  
 *	2015. 7. 6.   |    Y.I.Chun  | 신규
 * @Todo
 * </pre>
 */
@Component
public class AdminCpnDao {
	
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminCtryDao.class);
	
	@Resource(name="sqlSessionAdmin")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	/**
	 * <pre>
	 * 카테고리트리정보 조회
	 * 카테고리트리정보를 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	public List<Map<String, Object>> selectListCpn (Map<String, Object> inParam) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------		
		logger.info("selectListCpn Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectListCpn", inParam);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	public int selectListCpnCount (Map<String, Object> inParam) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------		
		logger.info("selectListCpn Start");
		int count = 0;
		try {
			count =  sqlSession.selectOne("adminCpnMapper.selectListCpnCount", inParam);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return count;
	}

	public Map<String, Object> selectCpnDtl(String cpnGrpCd)  throws Exception{
		logger.info("selectCpnDtl Start");
		Map<String, Object> mm = null;
		try {
			mm =  sqlSession.selectOne("adminCpnMapper.selectCpnDtl", cpnGrpCd);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return mm;
	}

	public List<Map<String, Object>> selectCpnMarket(String cpnGrpCd) throws Exception{
		logger.info("selectCpnMarket Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectCpnMarket", cpnGrpCd);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	public List<Map<String, Object>> selectCpnProd(String cpnGrpCd) throws Exception{
		logger.info("selectCpnProd Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectCpnProd", cpnGrpCd);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	public List<Map<String, Object>> selectCpnCtry(String cpnGrpCd) throws Exception{		
		logger.info("selectCpnProd Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectCpnCtry", cpnGrpCd);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;		
	}

	public List<Map<String, Object>> selectCpnPlan(String cpnGrpCd) throws Exception{
		logger.info("selectCpnProd Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectCpnPlan", cpnGrpCd);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;	
	}

	public List<Map<String, Object>> selectPlanList() throws Exception{
		logger.info("selectPlanList Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectPlanList");
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;	
	}

	public List<Map<String, Object>> selectMarketList() throws Exception{
		logger.info("selectMarketList Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectMarketList");
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;	
	}

	public int selectProdCnt() throws Exception {
		logger.info("selectCpnDtl Start");
		int cnt=0;
		try {
			cnt =  sqlSession.selectOne("adminCpnMapper.selectProdCnt");
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return cnt;
	}

	public List<Map<String, Object>> selectMarketList(String cmpnyNm)throws Exception  {
		logger.info("selectMarketList Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectMarketList",cmpnyNm);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;	
	}

	public List<Map<String, Object>> selectMarket(String cmpnyNm)throws Exception   {
		logger.info("selectMarket Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectMarket",cmpnyNm);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;	
	}

	

	public List<Map<String, Object>> selectCpnUseList(Map<String, Object> inParam) throws Exception  {
		logger.info("selectMarket Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectCpnUseList",inParam);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;	
	}

	public int selectCpnUseListCount(Map<String, Object> inParam)throws Exception  {
		logger.info("selectListCpn Start");
		int count = 0;
		try {
			count =  sqlSession.selectOne("adminCpnMapper.selectCpnUseListCount", inParam);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return count;
	}

	public void deleteUse(Map<String, Object> inParam)throws Exception {
		
		try {
			sqlSession.delete("adminCpnMapper.deleteUse", inParam);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		
	}

	public List<Map<String, Object>> selectTotUseList(Map<String, Object> inParam) throws Exception {
		logger.info("selectTotUseList Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectTotUseList",inParam);
		} catch (Exception e) {
			e.getMessage();
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;	
	}

	public int selectTotUseListCount(Map<String, Object> inParam)throws Exception {
		logger.info("selectTotUseListCount Start");
		int count = 0;
		try {
			count =  sqlSession.selectOne("adminCpnMapper.selectTotUseListCount", inParam);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return count;
	}
	
	public List<Map<String, Object>> selectCpnUseListAll(String cpnGrpCd) throws Exception  {
		logger.info("selectMarket Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectCpnUseListAll",cpnGrpCd);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;	
	}

	public int selectTotProdListCount(Map<String, Object> inParam)  throws Exception {
		logger.info("selectTotProdListCount Start");
		int count = 0;
		try {
			count =  sqlSession.selectOne("adminCpnMapper.selectTotProdListCount", inParam);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return count;
	}

	public List<Map<String, Object>> selectTotProdList(Map<String, Object> inParam) throws Exception{
		logger.info("selectTotProdList Start");
			
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectTotProdList",inParam);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;	
	}

	public List<Map<String, Object>>  selectChanCode(String code) throws Exception{
		logger.info("selectChanCode Start");
		
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectChanCode",code);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	public void deleteCpnChan(String cpnGrpCd) throws Exception {
		logger.info("deleteCpnChan Start");
		try {
			  sqlSession.delete("adminCpnMapper.deleteCpnChan",cpnGrpCd);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public void insertCpnChan(ModelMap mm) throws Exception  {
		logger.info("insertCpnChan Start");
		try {
			  sqlSession.insert("adminCpnMapper.insertCpnChan",mm);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public void deleteCpnMarket(String cpnGrpCd)throws Exception  {
		logger.info("deleteCpnMarket Start");
		try {
			  sqlSession.delete("adminCpnMapper.deleteCpnMarket",cpnGrpCd);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}		
	}

	public void insertCpnMarket(ModelMap mm) throws Exception {
		logger.info("insertCpnMarket Start");
		try {
			  sqlSession.insert("adminCpnMapper.insertCpnMarket",mm);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public void deleteCpnProd(String cpnGrpCd)throws Exception   {
		logger.info("deleteCpnProd Start");
		try {
			  sqlSession.delete("adminCpnMapper.deleteCpnProd",cpnGrpCd);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}	
	}

	public void deleteCpnCtry(String cpnGrpCd) throws Exception  {
		logger.info("deleteCpnCtry Start");
		try {
			  sqlSession.delete("adminCpnMapper.deleteCpnCtry",cpnGrpCd);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}	
	}

	public void deleteCpnPlan(String cpnGrpCd) throws Exception  {
		logger.info("deleteCpnPlan Start");
		try {
			  sqlSession.delete("adminCpnMapper.deleteCpnPlan",cpnGrpCd);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}	
	}

	public void insertCpnProd(ModelMap mm)throws Exception  {
		logger.info("insertCpnProd Start");
		try {
			  sqlSession.insert("adminCpnMapper.insertCpnProd",mm);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		} 
	}  

	public void insertCpnCtry(ModelMap mm)throws Exception  {
		logger.info("insertCpnCtry Start");
		try {
			  sqlSession.insert("adminCpnMapper.insertCpnCtry",mm);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public void insertCpnPlan(ModelMap mm) throws Exception {
		logger.info("insertCpnPlan Start");
		try {
			  sqlSession.insert("adminCpnMapper.insertCpnPlan",mm);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public List<Map<String, Object>> selectCpnMber(String cpnGrpCd)  throws Exception  {
		logger.info("selectCpnMber Start");
		
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectCpnMber",cpnGrpCd);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	public void deleteCpnMber(String cpnGrpCd) throws Exception{
		logger.info("deleteCpnMber Start");
		try {
			  sqlSession.delete("adminCpnMapper.deleteCpnMber",cpnGrpCd);
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}	
	}

	public void insertCpnMber(ModelMap mm) throws Exception{
		logger.info("insertCpnMber Start");
		try {
			  sqlSession.insert("adminCpnMapper.insertCpnMber",mm);
		} catch (Exception e) {
			logger.error("insertCpnMber DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public void updateCpnInfo(ModelMap mm) throws Exception{
		logger.info("updateCpnInfo Start");		
		LoggerUtil.writeMap(mm);	
		try {
			  sqlSession.update("adminCpnMapper.updateCpnInfo",mm);
		} catch (Exception e) {
			logger.error("updateCpnInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public List<Map<String, Object>> selectCpnUse(String cpnGrpCd) throws Exception{
		logger.info("selectCpnUse Start");
		
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectCpnUse",cpnGrpCd);
		} catch (Exception e) {
			logger.error("selectCpnUse DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	public void insertCpnInfo(ModelMap mm) throws Exception{
		logger.info("insertCpnInfo Start");		
		LoggerUtil.writeMap(mm);	
		try {
			  sqlSession.insert("adminCpnMapper.insertCpnInfo",mm);
		} catch (Exception e) {
			logger.error("insertCpnInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public List<String> selectPrintCpnNo(String cpnGbCd) throws Exception{
		List<String> list = new ArrayList<>();
		logger.info("selectPrintCpnNo Start");		
		
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectPrintCpnNo",cpnGbCd);
		} catch (Exception e) {
			logger.error("insertCpnInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	public void insertCpnPrint(ModelMap mm) throws Exception{
		logger.info("insertCpnPrint Start");		
		LoggerUtil.writeMap(mm);	
		try {
			  sqlSession.insert("adminCpnMapper.insertCpnPrint",mm);
		} catch (Exception e) {
			logger.error("insertCpnPrint DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public int selectPrintCpnNoCount(Map<String, Object> inParam) throws Exception{
		logger.info("selectPrintCpnNoCount Start");
		int count = 0;
		try {
			count =  sqlSession.selectOne("adminCpnMapper.selectPrintCpnNoCount", inParam);
		} catch (Exception e) {
			logger.error("selectPrintCpnNoCount DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return count;
	}

	public List<Map<String, Object>>  selectPrintCpnNoList(Map<String, Object> inParam) throws Exception {
		logger.info("selectPrintCpnNoList Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectPrintCpnNoList", inParam);
		} catch (Exception e) {
			logger.error("selectPrintCpnNoList DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;		
	}

	public List<Map<String, Object>>  selectPrintCpnNoAll(Map<String, Object> inParam)  throws Exception {
		logger.info("selectPrintCpnNoAll Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectPrintCpnNoAll", inParam);
		} catch (Exception e) {
			logger.error("selectPrintCpnNoAll DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;	
	}

	public void updateCpnIssueMth(Map<String, Object> param)throws Exception {
		logger.info("updateCpnIssueMth Start");		
		LoggerUtil.writeMap(param);	
		try {
			  sqlSession.update("adminCpnMapper.updateCpnIssueMth",param);
		} catch (Exception e) {
			logger.error("updateCpnInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public String selectCpnSeq() throws Exception {
		logger.info("selectListCpn Start");
		String seq = "";
		try {
			seq =  sqlSession.selectOne("adminCpnMapper.selectCpnSeq");
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return seq;
	}

	public void insertInflowRouteInfo(ModelMap mm) throws Exception {
		logger.info("insertInflowRouteInfo Start");		
		LoggerUtil.writeMap(mm);	
		try {
			  sqlSession.insert("adminCpnMapper.insertInflowRouteInfo",mm);
		} catch (Exception e) {
			logger.error("insertCpnPrint DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public int selectInflowRouteInfoCount(Map<String, Object> inParam) throws Exception{
		logger.info("selectInflowRouteInfoCount Start");
		int count = 0;
		try {
			count =  sqlSession.selectOne("adminCpnMapper.selectInflowRouteInfoCount", inParam);
		} catch (Exception e) {
			logger.error("selectInflowRouteInfoCount DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return count;
	}

	public List<Map<String, Object>>  selectInflowRouteInfo(Map<String, Object> inParam)  throws Exception{
		logger.info("selectInflowRouteInfo Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminCpnMapper.selectInflowRouteInfo", inParam);
		} catch (Exception e) {
			logger.error("selectInflowRouteInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;	
	}

	public Map<String, Object> selectInflowRouteDtl(String cpnGrpCd) throws Exception{
		logger.info("selectInflowRouteDtl Start");
		Map<String, Object> mm = null;
		try {
			mm =  sqlSession.selectOne("adminCpnMapper.selectInflowRouteDtl", cpnGrpCd);
		} catch (Exception e) {
			logger.error("selectInflowRouteDtl DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return mm;
	}

	public void updateCpnInfoUrl(ModelMap mm) throws Exception{
		logger.info("updateCpnInfoUrl Start");		
		LoggerUtil.writeMap(mm);	
		try {
			  sqlSession.update("adminCpnMapper.updateCpnInfoUrl",mm);
		} catch (Exception e) {
			logger.error("updateCpnInfoUrl DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public void updateInflowRoute(ModelMap mm) throws Exception{
		logger.info("updateInflowRoute Start");		
		LoggerUtil.writeMap(mm);	
		try {
			  sqlSession.update("adminCpnMapper.updateInflowRoute",mm);
		} catch (Exception e) {
			logger.error("updateInflowRoute DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public void deleteCpnInfoUrl(String cpnGrpCd) throws Exception{
		logger.info("deleteCpnInfoUrl Start");			
		try {
			  sqlSession.delete("adminCpnMapper.deleteCpnInfoUrl",cpnGrpCd);
		} catch (Exception e) {
			logger.error("deleteCpnInfoUrl DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public void deleteInflowRouteInfo(String cpnGrpCd) throws Exception{
		logger.info("deleteInflowRouteInfo Start");			
		try {
			  sqlSession.delete("adminCpnMapper.deleteInflowRouteInfo",cpnGrpCd);
		} catch (Exception e) {
			logger.error("deleteInflowRouteInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}
	
 
}
