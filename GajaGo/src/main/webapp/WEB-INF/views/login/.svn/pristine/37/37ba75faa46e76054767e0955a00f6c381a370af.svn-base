package com.ssocio.sharing.dao.admin;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.admin.util.CommonUtil;
import com.ssocio.sharing.cmmn.web.RspnsCnst;

/**
 * <pre>
 * 설명
 * 설명
 * @author J.K.CHOI
 * @version
 * @since 2015. 7. 13. 오후 7:41:45
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 13.	|	J.K.CHOI	|신규
 * @비고
 * </pre>
 */
@Component
public class AdminAppDao {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminAppDao.class);
	
	/* --------------------------------------------------------------------------
		# sqlSession 설정
		 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
		 -- 하나만 사용할 경우 @Autowired
	   --------------------------------------------------------------------------*/
	@Resource(name="sqlSessionAdmin")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	/**
	 * <pre>
	 * 어플리케이션 버전 정보 상세 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 13. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object>  selectApp(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectApp Start");
		Map<String, Object> map = null;
		try {
			map =  sqlSession.selectOne("adminAppMapper.selectApp", inParam);
		} catch (Exception e) {
			logger.error("selectApp DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}
	
	/**
	 * <pre>
	 * 어플리케이션 버전 정보 리스트 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 13. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectListApp(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListApp Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminAppMapper.selectListApp", inParam);
		} catch (Exception e) {
			logger.error("selectListApp DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	 }
	
	  /**
	   * <pre>
	   * 리스트 카운트 조회
	   * 
	   * @param inParam
	   * @return
	   * @throws Exception
	   * @date 2015. 7. 13. 오후 2:10:39
	   * @author J.K.CHOI
	   * @see com.ssocio.sharing.dao.admin
	   * </pre>
	   */
	  public int selectListAppCount(Map<String, Object> inParam) throws Exception{
		  // // ------------------------------------------------------------------------
		  // # 시작로그
		  // ------------------------------------------------------------------------
		  logger.info("selectListAppCount Start");
		  int count= 0;
		  try {
			  count = sqlSession.selectOne("adminAppMapper.selectListAppCount", inParam);
		  }catch (Exception e) {
			  logger.error("selectListAppCount DB Error : " + e.toString());
			  throw new Exception(RspnsCnst.RC1000000004);
		  }
		  return count;
	  }
	
	/**
	 * <pre>
	 * 어플리케이션 버전 정보등록
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 13. 오후 3:34:20
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int insertAppReg(Map<String, Object> inParam) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("insertAppReg Start");
		int outParam = 0;
		try {
			outParam = sqlSession.insert("adminAppMapper.insertAppReg", inParam);
		}
		catch (Exception e) {
			logger.error("insertAppReg DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 어플리케이션 버전 정보 수정
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 13. 오후 3:34:26
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int updateAppReg(Map<String, Object> inParam) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("updateAppReg Start");
		int outParam = 0;
		try {
			outParam = sqlSession.update("adminAppMapper.updateAppReg", inParam);
		}
		catch (Exception e) {
			logger.error("updateAppReg DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	

	
	/**
	 * <pre>
	 * 어플리케이션 버전 정보정보 삭제
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 13. 오후 3:34:26
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int deleteApp(Map<String, Object> inParam) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("deleteApp Start");
		int outParam = 0;
		try {
			outParam = sqlSession.delete("adminAppMapper.deleteApp", inParam);
		}
		catch (Exception e) {
			logger.error("deleteApp DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
}
