package com.ssocio.sharing.dao.admin;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.web.RspnsCnst;


@Component
public class AdminPushDao {
	// --------------------------------------------------------------------------
		// # Log 설정
		// --------------------------------------------------------------------------
		private static final Logger logger = LoggerFactory.getLogger(AdminPushDao.class);
		
		// --------------------------------------------------------------------------
		// # sqlSession 설정
		//	 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
		//	 -- 하나만 사용할 경우 @Autowired
		// --------------------------------------------------------------------------
		@Resource(name="sqlSessionAdmin")
		private SqlSession sqlSession;

		public void setSqlSession(SqlSession sqlSession) {
			this.sqlSession = sqlSession;
		}

		public List<Map<String, Object>> selectListPush(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListPush Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminPushMapper.selectListPush",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}
		
		public List<Map<String, Object>> selectListPushSend(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListPushSend Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminPushMapper.selectListPushSend",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}
		public List<Map<String, Object>> selectListPushSendAll(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListPushSendAll Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminPushMapper.selectListPushSendAll",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}
		
		public int selectListPushCount(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListPushCount Start");
			int obj = 0;
			try {
				obj =  sqlSession.selectOne("adminPushMapper.selectListPushCount",paramDto);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return obj;
		}
		
		public int insertPush(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("insertPush Start");
			int ret = 0;
//			LoggerUtil.writeMap(paramDto);
			try {
				if("N".equals(paramDto.get("RESRV_YN"))){
					ret =  sqlSession.insert("adminPushMapper.insertPush1",paramDto);
				}else{
					ret =  sqlSession.insert("adminPushMapper.insertPush",paramDto);
				}
				
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				e.printStackTrace();
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return ret;
		}
		
		
		public int insertPushNone(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("insertPushNone Start");
			int ret = 0;
//			LoggerUtil.writeMap(paramDto);
			try {
				
					ret =  sqlSession.insert("adminPushMapper.insertPushNone",paramDto);
			
				
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				e.printStackTrace();
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return ret;
		}
		
		
		public int insertPushMber(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("insertPushMber Start");
			int ret = 0;
//			LoggerUtil.writeMap(paramDto);
			try {
				
					ret =  sqlSession.insert("adminPushMapper.insertPushMber",paramDto);
			
				
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				e.printStackTrace();
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return ret;
		}
		
		
		public int selectListPushMberCnt(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListPushMberCnt Start");
			int obj = 0;
			try {
				obj =  sqlSession.selectOne("adminPushMapper.selectListPushMberCnt",paramDto);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return obj;
		}
		
		
		public Map<String, Object> selectPush(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectPush Start");
			Map<String, Object> obj = null;
			try {
				obj =  sqlSession.selectOne("adminPushMapper.selectPush",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return obj;
		}
		
		public int updatePush(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("updatePush Start");
			int ret = 0;
			try {
				ret =  sqlSession.update("adminPushMapper.updatePush",paramDto);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return ret;
		}
		
		public int updatePushGrp(Map<String, Object> paramDto) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("updatePushGrp Start");
			int ret = 0;
			try {
				ret =  sqlSession.update("adminPushMapper.updatePushGrp",paramDto);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return ret;
		}
		
}
