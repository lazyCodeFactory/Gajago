package com.ssocio.sharing.controller.mobile;

import java.net.URLEncoder;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.service.web.MobileMyActService;
import com.ssocio.sharing.vo.web.WebSession;

/**
 * <pre>
 * 나의활동 컨트롤러
 * 나의활동를 위한 컨트롤러
 * @author 		: rocaf
 * @version
 * @since 
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * @비고
 * </pre>
 */
@Controller
public class MobileMyActController extends MobileReferController {

	private static final Logger logger = LoggerFactory.getLogger(MobileMyActController.class);
	
	@Autowired
	private MobileMyActService mobileMyActService;
	
	
	
	
	
	
	@RequestMapping("/mobile/myAct/selectChkdel.do")
	public ModelAndView selectChkdel(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		logger.debug("### GUBUN		:"+inParam.get("GUBUN"));
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			if(request.getSession().getAttribute("user")==null){
				String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
				return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
			}
			mav.addAllObjects( mobileMyActService.selectChkdel(inParam, user));
			mav.setViewName("jsonView");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * <pre>
	 * 1:1문의 삭제 
	 * 1:1문의 삭제 
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 11. 6. 오전 2:49:05
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.controller.mobile
	 * </pre>
	 */
	@RequestMapping("/mobile/myAct/deleteprodQna.do")
	public ModelAndView deleteprodQna(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		logger.debug("### GUBUN		:"+inParam.get("GUBUN"));
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			if(request.getSession().getAttribute("user")==null){
				String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
				return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
			}
			
			mav.addAllObjects( mobileMyActService.deleteprodQna(inParam, user));
			mav.setViewName("jsonView");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	
	
	
	
	/**
	 * <pre>
	 * 나의 이벤트 상세 
	 * 나의 이벤트 상세 
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 11. 6. 오전 2:49:05
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.controller.mobile
	 * </pre>
	 */
	@RequestMapping("/mobile/myAct/selectMyEvtDtl.do")
	public ModelAndView selectMyEvtDtl(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		logger.debug("### GUBUN		:"+inParam.get("GUBUN"));
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			if(request.getSession().getAttribute("user")==null){
				String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
				return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
			}
			
			mav.addObject("list", mobileMyActService.selectMyEvtDtl(inParam, user));
			mav.addObject("params", inParam);
			mav.addObject("MBER_NM", user.getMBER_NM());
			mav.setViewName("web/myPage/getMyEvtDtl");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	
	/**
	 * <pre>
	 * 1:1문의등록 수정하기 
	 * 1:1문의등록 수정하기 
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 9. 29. 오후 11:30:23
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.controller.mobile
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/mobile/myAct/updateQnaInfoReg.do")
	public ModelAndView updateQnaInfoReg(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		logger.debug("### GUBUN		:"+inParam.get("GUBUN"));
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			if(request.getSession().getAttribute("user")==null){
				String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
				return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
			}
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			logger.debug("### MBER_NM	:"+user.getMBER_NM());
			mav.addObject("result", mobileMyActService.updateQnaInfoReg(inParam, user));
			mav.addObject("params", inParam);
			mav.addObject("MBER_NM", user.getMBER_NM());
			mav.setViewName("jsonView");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * 1:1문의등록 상세 정보 가져오기 
	 */
	@RequestMapping("/mobile/myAct/updateQnaInfo.do")
	public ModelAndView updateQnaInfo(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		logger.debug("### GUBUN		:"+inParam.get("GUBUN"));
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			if(request.getSession().getAttribute("user")==null){
				String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
				return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
			}
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			logger.debug("### MBER_NM	:"+user.getMBER_NM());
			mav.addObject("result", mobileMyActService.updateQnaInfo(inParam, user));
			mav.addObject("params", inParam);
			mav.addObject("MBER_NM", user.getMBER_NM());
			mav.setViewName("web/myPage/updateQnaInfo");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * 나의활동 화면으로 이동
	 */
	@RequestMapping("/mobile/myAct/getMyActInfo.do")
	public ModelAndView getMyActInfo(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		logger.debug("### GUBUN		:"+inParam.get("GUBUN"));
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			if(request.getSession().getAttribute("user")==null){
				String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
				return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
			}
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			logger.debug("### MBER_NM		:"+user.getMBER_NM());
			logger.debug("### MBER_EMAIL	:"+user.getMBER_EMAIL());
			mav.addObject("params", inParam);
			mav.addObject("MBER_NM", mobileMyActService.getMyAuthYnInfo(inParam, user).get("mberNm"));
			mav.setViewName("web/myPage/getMyActInfo");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	/**
	 * 나의활동 조회
	 */
	@RequestMapping("/mobile/myAct/getMyActList.do")
	public ModelAndView getMyActList(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView("jsonView");
		LoggerUtil.writeMap(inParam);
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			if(request.getSession().getAttribute("user")==null){
				String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
				return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
			}
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			logger.debug("### arg	:"+inParam.get("arg") );
			String arg = (String)inParam.get("arg");
			if("A".equals(arg)){	// 상품후기
				logger.debug("### 상품후기	" );
				Map<String, Object> countList = (Map<String, Object>) mobileMyActService.getMyActAfterList(inParam, user);
				mav.addObject("result", countList.get("resultList"));
				mav.addObject("resultCnt", countList.get("resultListCnt"));
			}else if("B".equals(arg)){	// 이벤트참여
				logger.debug("### 이벤트참여	" );
				Map<String, Object> countList = (Map<String, Object>) mobileMyActService.getMyActEventList(inParam, user);
				mav.addObject("result", countList.get("resultList"));
				mav.addObject("resultCnt", countList.get("resultListCnt"));
			}else if("C".equals(arg)){	// 상품문의
				logger.debug("### 상품문의	" );
				Map<String, Object> countList = (Map<String, Object>) mobileMyActService.getMyActQuesList(inParam, user);
				mav.addObject("result", countList.get("resultList"));
				mav.addObject("resultCnt", countList.get("resultListCnt"));
			}else if("D".equals(arg)){	// 1:1문의
				logger.debug("### 1:1문의	" );
				Map<String, Object> countList = (Map<String, Object>) mobileMyActService.getMyActOneList(inParam, user);
				mav.addObject("result", countList.get("resultList"));
				mav.addObject("resultCnt", countList.get("resultListCnt"));
			}else{
				mav.addObject("result","");
				mav.addObject("resultCnt","0");
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	/**
	 * 나의활동 > 3.상품문의 
	 * 		- 상세화면으로 이동
	 */
	@RequestMapping("/mobile/myAct/getProdAnsView.do")
	public ModelAndView getProdAnsView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			if(request.getSession().getAttribute("user")==null){
				String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
				return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
			}
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			logger.debug("### MBER_NM	:"+user.getMBER_NM());
			
			mav.addObject("result", mobileMyActService.getProdAnsView(inParam, user));
			
			mav.addObject("params", inParam);
			mav.addObject("MBER_NM", user.getMBER_NM());
			mav.setViewName("web/myPage/getProdAnsView");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	/**
	 * 나의활동 > 3.상품문의 > 상세화면 > 수정화면 폼
	 * 		- [상품문의]수정화면으로 이동
	 */
	@RequestMapping("/mobile/myAct/updateProdAnsForm.do")
	public ModelAndView updateProdAnsForm(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			if(request.getSession().getAttribute("user")==null){
				String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
				return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
			}
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			logger.debug("### MBER_NM	:"+user.getMBER_NM());
			
			mav.addObject("result", mobileMyActService.getProdAnsView(inParam, user));
			
			mav.addObject("params", inParam);
			mav.addObject("MBER_NM", user.getMBER_NM());
			mav.setViewName("web/myPage/updateProdAnsForm");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	/**
	 * 나의활동 > 3.상품문의 > 상세화면 > 수정화면 폼 > 수정처리
	 * 		- [상품문의] 상세 수정
	 */
	@RequestMapping("/mobile/myAct/updateProdAnsProcess.do")
	public @ResponseBody String updateProdAnsProcess(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		String result = "";
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			// 필수 키값. REQ_SEQ, MBER_SEQ
			mobileMyActService.updateProdAnsProcess(inParam, user);
			JSONObject jsonObj = new JSONObject() ;
			jsonObj.put("result", "정상처리되었습니다.");
			result = jsonObj.toString();
			logger.debug("### result	:["+result	+"] >>>>");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
	/**
	 * 나의활동 > 4. 1:1문의 
	 * 		- 상세화면으로 이동
	 */
	@RequestMapping("/mobile/myAct/getProdQnaView.do")
	public ModelAndView getProdQnaView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			if(request.getSession().getAttribute("user")==null){
				String returnUrl = "/mobile/myPage/getMyPageInfo.do?";
				return new ModelAndView("redirect:/mobile/main/login.do"+"?ret="+URLEncoder.encode(returnUrl,"UTF-8"));
			}
			logger.debug("### MBER_SEQ		:"+user.getMBER_SEQ());
			logger.debug("### MOBILE_GUBUN	:"+user.getMOBILE_GUBUN());
			logger.debug("### MBER_GB_CD	:["+user.getMBER_GB_CD()	+"] >>>>>>>>>>>>>>>>>> 0.구매, 1.판매");
			logger.debug("### MBER_NM	:"+user.getMBER_NM());
			
			// 페이지
			mav.addObject("result", mobileMyActService.getProdQnaView(inParam, user));
			mav.addObject("params", inParam);
			mav.addObject("MBER_NM", user.getMBER_NM());
			mav.setViewName("web/myPage/getProdQnaView");
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
}
