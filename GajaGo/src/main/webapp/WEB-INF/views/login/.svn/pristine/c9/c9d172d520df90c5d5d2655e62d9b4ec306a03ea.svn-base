<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="webMainMapper">
	<resultMap id="mainPlanResultMap" type="hashmap">
		<id property="PLAN_CD" 			column="PLAN_CD" />
		<result property="PLAN_TITLE"	column="PLAN_TITLE" />
		<result property="PLAN_NM"		column="PLAN_NM" />
		<collection property="banners" 			javaType="java.util.ArrayList" ofType="java.util.HashMap">
			<id property="BANNER_SEQ" 			column="BANNER_SEQ" />
			<id property="BANNDER_VIEW_SEQ"		column="BANNER_VIEW_SEQ" />
			<result property="BANNER_URL"		column="BANNER_URL" />
			<result property="BANNER_IMG_URL"	column="BANNER_IMG_URL" />
		</collection>
		<collection property="templates" 		javaType="java.util.ArrayList" ofType="java.util.HashMap">
			<id property="TPL_SEQ" 				column="TPL_SEQ" />
			<id property="TPL_VIEW_SEQ"			column="TPL_VIEW_SEQ" />
			<result property="TPL_GB_CD"		column="TPL_GB_CD" />
			<result property="BANNER_IMG_URL"	column="BANNER_IMG_URL" />
			<collection property="contents"		javaType="java.util.ArrayList" ofType="java.util.HashMap">
				<id property="CONT_TPL_SEQ"						column="CONT_TPL_SEQ" />
				<id property="CONT_VIEW_SEQ"					column="CONT_VIEW_SEQ" />
				<result property="CONT_GB_CD"					column="CONT_GB_CD" />
				<result property="CONT_URL"						column="CONT_URL" />
				<result property="CONT_NM"						column="CONT_NM" />
				<result property="CONT_NM_USE_YN"				column="CONT_NM_USE_YN" />
				<result property="CONT_VIEW_GB_CD"				column="CONT_VIEW_GB_CD" />
				<result property="CONT_NO"						column="CONT_NO" />
				<result property="CONT_VIEW_CSS"				column="CONT_VIEW_CSS" />
				<result property="CONT_FILE_URL"				column="CONT_FILE_URL" />
				<result property="CONT_PROD_NM"					column="CONT_PROD_NM" />
				<result property="CONT_PROD_TYPE_CD"			column="CONT_PROD_TYPE_CD" />
				<result property="CONT_PROD_NRM_PRCE"			column="CONT_PROD_NRM_PRCE" />
				<result property="CONT_PROD_SELL_PRCE"			column="CONT_PROD_SELL_PRCE" />
				<result property="CONT_PROD_DLV_PAY_GB_CD"		column="CONT_PROD_DLV_PAY_GB_CD" />
				<result property="CONT_PROD_CPON_APPLY_PSBL_YN"	column="CONT_PROD_CPON_APPLY_PSBL_YN" />
				<result property="CONT_PROD_PS_PRCE"			column="CONT_PROD_PS_PRCE" />
				<result property="CONT_PROD_PS_DEPOSIT"			column="CONT_PROD_PS_DEPOSIT" />
				<result property="CONT_SP_PROD_DT_PRCE"			column="CONT_SP_PROD_DT_PRCE" />
 			</collection>
		</collection>
	</resultMap>

	<resultMap id="selectListPlanBanner" type="hashmap">
		<result property="MOVE_URL"					column="MOVE_URL" />
		<result property="FILE_URL"					column="FILE_URL" />
		<result property="FILE_WIDTH"					column="FILE_WIDTH" jdbcType="DECIMAL" javaType="Integer" />
		<result property="FILE_HEIGH"					column="FILE_HEIGH" jdbcType="DECIMAL" javaType="Integer" />
	</resultMap>

	<!-- 메인 기획전 목록 조회 -->
	<select id="selectListMainPlan" resultMap="mainPlanResultMap">
		SELECT Z.PLAN_CD                AS PLAN_CD
		    , Z.PLAN_TITLE              AS PLAN_TITLE
		    , Z.PLAN_NM                 AS PLAN_NM
		    , Z.BANNER_SEQ              AS BANNER_SEQ
		    , Z.BANNER_VIEW_SEQ         AS BANNER_VIEW_SEQ
		    , Z.BANNER_URL              AS BANNER_URL
		    , Z.BANNER_IMG_URL          AS BANNER_IMG_URL
		    , Z.TPL_SEQ                 AS TPL_SEQ
		    , Z.TPL_VIEW_SEQ            AS TPL_VIEW_SEQ
		    , Z.TPL_GB_CD	            AS TPL_GB_CD
		    , Z.CONT_TPL_SEQ	        AS CONT_TPL_SEQ
		    , Z.CONT_VIEW_SEQ           AS CONT_VIEW_SEQ
		    , Z.CONT_GB_CD              AS CONT_GB_CD
		    , Z.CONT_URL                AS CONT_URL
		    , Z.CONT_NM	                AS CONT_NM
		    , Z.CONT_NM_USE_YN          AS CONT_NM_USE_YN
		    , Z.CONT_VIEW_GB_CD         AS CONT_VIEW_GB_CD
		    , Z.CONT_NO                 AS CONT_NO
		    , Z.CONT_VIEW_CSS			AS CONT_VIEW_CSS
		    , FII.FILE_URL              AS CONT_FILE_URL
		    , P.PROD_NM                 AS CONT_PROD_NM
		    , P.PROD_TYPE_CD            AS CONT_PROD_TYPE_CD
		    , P.NRM_PRCE                AS CONT_PROD_NRM_PRCE
		    , P.SELL_PRCE               AS CONT_PROD_SELL_PRCE
		    , P.DLV_PAY_GB_CD        	AS CONT_PROD_DLV_PAY_GB_CD
		    , P.CPON_APPLY_PSBL_YN      AS CONT_PROD_CPON_APPLY_PSBL_YN
	    	, PS.SHARING_PRICE	        AS CONT_PROD_PS_PRCE
		    , PS.DEPOSIT		        AS CONT_PROD_PS_DEPOSIT
		    , SPD.SHARING_PRICE     	AS CONT_SP_PROD_DT_PRCE
        , Z.ALL_VIEW_SEQ            AS ALL_VIEW_SEQ
		FROM (
		    SELECT Y.PLAN_CD                AS PLAN_CD
		        , Y.PLAN_TITLE              AS PLAN_TITLE
		        , Y.PLAN_NM                 AS PLAN_NM
		        , Y.BANNER_SEQ              AS BANNER_SEQ
		        , Y.BANNER_VIEW_SEQ         AS BANNER_VIEW_SEQ
		        , Y.BANNER_URL              AS BANNER_URL
		        , Y.BANNER_IMG_URL          AS BANNER_IMG_URL
		        , Y.TPL_SEQ                 AS TPL_SEQ
		        , Y.TPL_VIEW_SEQ            AS TPL_VIEW_SEQ
		        , Y.TPL_GB_CD	            AS TPL_GB_CD
		        , PC.PLAN_SEQ	            AS CONT_TPL_SEQ
		        , PC.VIEW_SEQ               AS CONT_VIEW_SEQ
		        , PC.CONT_GB_CD             AS CONT_GB_CD
		        , PC.URL                    AS CONT_URL
		        , PC.CONT_NM	            AS CONT_NM
		        , PC.CONT_NM_USE_YN         AS CONT_NM_USE_YN
		        , PC.PLAN_VIEW_GB_CD        AS CONT_VIEW_GB_CD
		        , PC.PLAN_VIEW_CSS			AS CONT_VIEW_CSS
		        , PC.CONT_NO                AS CONT_NO
		        , PC.FILE_SEQ               AS CONT_FILE_SEQ
            , Y.ALL_VIEW_SEQ            AS ALL_VIEW_SEQ
		    FROM (
		        SELECT X.PLAN_CD                AS PLAN_CD
		            , X.PLAN_TITLE              AS PLAN_TITLE
		            , X.PLAN_NM                 AS PLAN_NM
		            , X.BANNER_SEQ              AS BANNER_SEQ
		            , X.BANNER_VIEW_SEQ         AS BANNER_VIEW_SEQ
		            , X.BANNER_URL              AS BANNER_URL
		            , FI.FILE_URL               AS BANNER_IMG_URL
		            , X.TPL_SEQ                 AS TPL_SEQ
		            , X.TPL_VIEW_SEQ            AS TPL_VIEW_SEQ
		            , X.TPL_GB_CD	              AS TPL_GB_CD
                , X.ALL_VIEW_SEQ            AS ALL_VIEW_SEQ
		        FROM (
		            SELECT PI.PLAN_CD               AS PLAN_CD
		                , PI.PLAN_TITLE             AS PLAN_TITLE
		                , PI.PLAN_NM                AS PLAN_NM
		                , PB.IMG_SEQ                AS BANNER_SEQ
		                , PB.VIEW_SEQ               AS BANNER_VIEW_SEQ
		                , PB.URL                    AS BANNER_URL
		                , PB.FILE_SEQ               AS BANNER_FILE_SEQ
		                , PT.PLAN_SEQ               AS TPL_SEQ
		                , PT.VIEW_SEQ               AS TPL_VIEW_SEQ
		                , PT.PLAN_TPL_GB_CD	        AS TPL_GB_CD
                    , PI.ALL_VIEW_SEQ           AS ALL_VIEW_SEQ
		            FROM (
		                SELECT PLAN_CD
		                  , PLAN_TITLE
		                  , PLAN_NM
		                  , VIEW_SEQ
                      , ALL_VIEW_SEQ
		                FROM PLAN_INFO
		                WHERE VIEW_YN = 'Y'
		                    AND ALL_VIEW_YN = 'Y'
		                    AND TO_CHAR(END_DT, 'YYYYMMDDHH24MISS') <![CDATA[>=]]> TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
		                ORDER BY VIEW_SEQ ASC
		            ) PI
		                LEFT OUTER JOIN PLAN_IMG_INFO PB ON PI.PLAN_CD = PB.PLAN_CD
		                LEFT OUTER JOIN PLAN_TPL PT ON PI.PLAN_CD = PT.PLAN_CD
		            ORDER BY PI.ALL_VIEW_SEQ ASC, PB.VIEW_SEQ ASC, PT.VIEW_SEQ ASC
		        )X LEFT OUTER JOIN FILE_INFO FI ON X.BANNER_FILE_SEQ = FI.FILE_SEQ
		    )Y LEFT OUTER JOIN PLAN_CONT PC ON Y.TPL_SEQ = PC.PLAN_SEQ AND Y.PLAN_CD = PC.PLAN_CD
        ORDER BY Y.PLAN_CD ASC, PC.PLAN_SEQ ASC
		)Z
			LEFT OUTER JOIN FILE_INFO FII ON Z.CONT_FILE_SEQ = FII.FILE_SEQ
			LEFT OUTER JOIN PROD P ON Z.CONT_NO = P.PROD_CODE
			LEFT OUTER JOIN PROD_SHARING PS ON Z.CONT_NO = PS.PROD_CODE
			LEFT OUTER JOIN SP_PROD_DTL SPD ON Z.CONT_NO = SPD.PROD_CODE
		WHERE Z.CONT_GB_CD IN ('30', '40')  or Z.CONT_GB_CD is null
    ORDER BY Z.ALL_VIEW_SEQ ASC, Z.PLAN_CD ASC, Z.TPL_VIEW_SEQ ASC, Z.CONT_VIEW_SEQ ASC
	</select>

	<!-- 메인 기획전 목록 조회 -->
	<select id="selectListAppMainPlan" resultType="hashmap">
		SELECT PLAN_CD
		  , REGIST_DT
		  , UPDT_DT
		  , PLAN_NM
		  , TO_CHAR(START_DT, 'YYYYMMDDHH24MISS') AS START_DT
		  , TO_CHAR(END_DT, 'YYYYMMDDHH24MISS') AS END_DT
		  , VIEW_SEQ
		  , VIEW_YN
		  , ALL_VIEW_SEQ
		  , ALL_VIEW_YN
		  , TMP_SAVE_YN
		  , TODAY_YN
		FROM PLAN_INFO
		WHERE VIEW_YN = 'Y'
			AND ALL_VIEW_YN = 'Y'
			AND TO_CHAR(END_DT, 'YYYYMMDDHH24MISS') <![CDATA[>=]]> TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')
		ORDER BY ALL_VIEW_SEQ ASC
	</select>

	<!-- 메인 기획전 배너 조회 -->
	<select id="selectListPlanBanner" parameterType="string" resultMap="selectListPlanBanner">
		SELECT A.PLAN_CD AS PLAN_CD
			, A.IMG_SEQ AS IMG_SEQ
			, A.VIEW_SEQ AS VIEW_SEQ
			, A.FILE_SEQ AS FILE_SEQ
			, B.FILE_TITLE AS FILE_TITLE
			, B.FILE_PATH AS FILE_PATH
			, B.FILE_URL AS FILE_URL
			, B.FILE_WIDTH AS FILE_WIDTH
			, B.FILE_HEIGH AS FILE_HEIGH
			, A.URL as MOVE_URL
		FROM PLAN_IMG_INFO A , FILE_INFO B
		WHERE A.PLAN_CD = #{planCd}
			AND A.FILE_SEQ = B.FILE_SEQ
		ORDER BY VIEW_SEQ ASC
	</select>

	<!-- 메인 기획전 배너 조회 -->
	<select id="selectListPlanTemplate" parameterType="string" resultType="hashmap">
		SELECT PLAN_CD
			, PLAN_SEQ
			, VIEW_SEQ
			, PLAN_TPL_GB_CD
			, ROW_CNT
		FROM PLAN_TPL
		WHERE PLAN_CD = #{planCd}
		ORDER BY VIEW_SEQ ASC
	</select>

	<!-- 메인 기획전 배너 조회 -->
	<select id="selectListPlanTemplateContent" parameterType="hashmap" resultType="hashmap">
		SELECT A.PLAN_CD
			, A.PLAN_SEQ
			, A.VIEW_SEQ
			, A.CONT_GB_CD
			, A.URL
			, A.CONT_NM
			, A.CONT_NM_USE_YN
			, A.CONT_NO
			, A.PLAN_VIEW_GB_CD
			, A.FILE_SEQ AS FILE_SEQ
			, B.FILE_TITLE AS FILE_TITLE
			, B.FILE_PATH AS FILE_PATH
			, B.FILE_URL AS FILE_URL
		FROM PLAN_CONT A, FILE_INFO B
		WHERE PLAN_CD = #{PLAN_CD}
			AND PLAN_SEQ = #{PLAN_SEQ}
			AND A.FILE_SEQ = B.FILE_SEQ
		ORDER BY A.VIEW_SEQ ASC
	</select>

	<select id="selectMberInfo" parameterType="int" resultType="hashmap">
		SELECT X.MBER_SEQ			    AS MBER_SEQ				<!-- 회원 일련번호 -->
		    , X.MBER_EMAIL		        AS MBER_EMAIL			<!-- 회원 이메일 -->
		    , X.BIRTH		        	AS BIRTH				<!-- 회원 생년월일 -->
		    , X.MBER_NM			        AS MBER_NM				<!-- 회원 이름 -->
		    , X.MBER_NICK			    AS MBER_NICK			<!-- 회원 별명 -->
		    , X.MBER_PHONE		        AS MBER_PHONE			<!-- 회원 휴대폰번호 -->
		    , X.MBER_GB_CD		        AS MBER_GB_CD			<!-- 회원 구분코드 -->
		    , X.MBER_REG_GB_CD	        AS MBER_REG_GB_CD		<!-- 회원 등록구분코드 -->
		    , X.SSO_GB_CD			    AS SSO_GB_CD			<!-- SSO 구분 코드 -->
		    , X.JOIN_CHAN_CD		    AS JOIN_CHAN_CD			<!-- 가입채널코드 -->
		    , X.POINT				    AS POINT				<!-- 회원 포인트 -->
		    , FI1.FILE_URL			    AS FILE_URL				<!-- 회원 프로필 파일 -->
		    , FI2.FILE_URL              AS MINI_SHOP_FILE_URL	<!-- 미니샵 프로필 파일 -->
		    , X.MS_SHOP_NM              AS MINI_SHOP_NM			<!-- 미니샵 이름 -->
		    , X.MS_SHOP_PATH            AS MINI_SHOP_PATH		<!-- 미니샵 경로 -->
		    , X.MS_RM                   AS MINI_SHOP_RM			<!-- 미니샵 ?  -->
		    , X.CPN_CNT	                AS CPN_CNT				<!-- 보유 쿠폰 개수 -->
		    , X.MBER_QNA_CNT            AS MBER_QNA_CNT			<!-- 고객 센터 문의 -->
		    , X.PROD_QNA_CNT            AS PROD_QNA_CNT			<!-- 판매센터 문의 -->
		    , X.SELL_CANCEL_QNA_CNT     AS SELL_CANCEL_QNA_CNT	<!-- 판매 취소/교환/반품 개수 -->
		    , X.SELL_PROD_QNA_CNT       AS SELL_PROD_QNA_CNT	<!-- 판매 상품문의 개수 -->
		    , X.BUY_CANCEL_QNA_CNT      AS BUY_CANCEL_QNA_CNT	<!-- 구매 취소/교환/반품 개수 -->
		    , X.CART_CNT                AS CART_CNT				<!-- 장바구니 개수 -->
		    , X.WISH_CNT                AS WISH_CNT 			<!-- 위시 개수 -->
		FROM (
		    SELECT MI.MBER_SEQ			AS MBER_SEQ
		        , MI.MBER_EMAIL			AS MBER_EMAIL
		        , MI.BIRTH				AS BIRTH
		        , MI.MBER_NM			AS MBER_NM
		        , MI.MBER_NICK			AS MBER_NICK
		        , MI.MBER_PHONE			AS MBER_PHONE
		        , MI.MBER_GB_CD			AS MBER_GB_CD
		        , MI.MBER_REG_GB_CD		AS MBER_REG_GB_CD
		        , MI.SSO_GB_CD			AS SSO_GB_CD
		        , MI.JOIN_CHAN_CD		AS JOIN_CHAN_CD
		        , NVL(MI.POINT,0) 		AS POINT
		        , MI.MBER_IMG           AS MBER_IMG
		        , MMSI.MINI_PROFILE_SEQ  AS MS_FILE_SEQ
		        , MMSI.MINI_SHOP_NM     AS MS_SHOP_NM
		        , MMSI.MINI_SHOP_PATH   AS MS_SHOP_PATH
		        , MMSI.RM               AS MS_RM
			    , NVL(( SELECT COUNT(AA.CPN_GRP_CD) FROM (

					SELECT M.CPN_GRP_CD
			          , CASE WHEN S.EXP_CHK = 'A' THEN S.EXP_START_DT
			              		ELSE S.ISSUE_DT
			                  	END AS EXP_START_DT                                         /* 유효기간시작일 */
			          , CASE WHEN S.EXP_CHK = 'A' THEN S.EXP_END_DT
			                 	ELSE S.ISSUE_DT + S.EXP_DAY
			            		END AS EXP_END_DT

			        FROM MBER_CPN_INFO M, CPN_INFO S
			        WHERE M.CPN_GRP_CD = S.CPN_GRP_CD
			              AND M.USE_YN='N' AND M.MBER_SEQ = #{MBER_SEQ}
			              AND M.CPN_NO IS NOT NULL
			              AND S.ISSUE_MTH = '20'                                          /* 쿠폰발급상태인것 */

				) AA
				WHERE 1=1
				AND TO_CHAR(AA.EXP_START_DT, 'YYYYMMDD') <![CDATA[ <= ]]> TO_CHAR(SYSDATE, 'YYYYMMDD')
				AND TO_CHAR(AA.EXP_END_DT, 'YYYYMMDD') <![CDATA[ >= ]]> TO_CHAR(SYSDATE, 'YYYYMMDD')),0) AS CPN_CNT
		        , NVL((SELECT COUNT(BOARD_SEQ) FROM BOARD_INFO WHERE MBER_SEQ = #{MBER_SEQ} AND BOARD_TYPE_CD = '40'), 0) AS MBER_QNA_CNT
		        , NVL((SELECT COUNT(BOARD_SEQ) FROM BOARD_INFO WHERE MBER_SEQ = #{MBER_SEQ} AND BOARD_TYPE_CD = '72'), 0) AS PROD_QNA_CNT
		        , NVL((SELECT COUNT(*)
		        		 FROM ORD_PROD_INFO OPI
		        			, SELLER_INFO_CFG SIC
		        		WHERE OPI.SELLER_CD = SIC.SELLER_CD
		        		  AND SIC.MBER_SEQ = #{MBER_SEQ}
		        		  AND OPI.PROC_STAT_CD IN ('31', '32', '33', '41', '42', '43', '50')), 0) AS SELL_CANCEL_QNA_CNT
		        , NVL((SELECT COUNT(BOARD.BOARD_SEQ)
		                 FROM PROD INFO, BOARD_INFO BOARD
		                WHERE INFO.PROD_CODE = BOARD.PROD_CODE
		                  AND INFO.MBER_SEQ = #{MBER_SEQ}
		                  AND BOARD.BOARD_TYPE_CD = '72'), 0) AS SELL_PROD_QNA_CNT
		        , NVL((SELECT COUNT(*)
		              	 FROM ORD_PROD_INFO
		              	WHERE MBER_SEQ = #{MBER_SEQ}
		              	  AND PROC_STAT_CD IN ('31', '32', '33', '41', '42', '43', '50')), 0) AS BUY_CANCEL_QNA_CNT
		        , NVL((SELECT COUNT(*) FROM CART WHERE MBER_SEQ = #{MBER_SEQ}), 0) AS CART_CNT
		        , NVL((SELECT COUNT(*) FROM PROD_WISH WHERE MBER_SEQ = #{MBER_SEQ}), 0) AS WISH_CNT
		    FROM MBER_INFO MI
		        LEFT OUTER JOIN MBER_MINI_SHOP_INFO MMSI ON MI.MBER_SEQ = MMSI.MBER_SEQ
		    WHERE MI.MBER_SEQ = #{MBER_SEQ}
		)X
		    LEFT OUTER JOIN FILE_INFO FI1 ON X.MBER_IMG = FI1.FILE_SEQ
		    LEFT OUTER JOIN FILE_INFO FI2 ON X.MS_FILE_SEQ = FI2.FILE_SEQ
	</select>

	<select id="selectBuyInfo" parameterType="int" resultType="hashmap">
		SELECT S.PROD_TYPE_CD AS PROD_TYPE_CD
		     , SUM(NVL(S.QTY, 0)) AS PROD_QTY
		  FROM (
		SELECT COUNT(1) AS QTY, '2' as PROD_TYPE_CD
		FROM ORD_INFO A,
		     ORD_PROD_INFO B,
		     PROD C,
		     PROD_SHARING D,
		     INVC_INFO E,
		     MBER_INFO F,
		     MBER_INFO F1
		WHERE A.ORD_CD = B.ORD_CD
		AND A.MBER_SEQ = F.MBER_SEQ
		AND B.PROD_CODE = C.PROD_CODE
		AND B.PROD_CODE = D.PROD_CODE
		AND B.ORD_CD = E.ORD_CD(+)
		AND B.PROD_CODE = E.PROD_CODE(+)
		AND B.PROD_SEQ = E.PROD_SEQ(+)
		AND C.MBER_SEQ = F1.MBER_SEQ
		AND B.PROD_TYPE_CD = '2'
	    AND A.MBER_SEQ = #{MBER_SEQ}
	    AND B.PROC_STAT_CD IN ('10', '21', '22', '85', '86', '87', '88', '89', '90', '91', '92')
		        UNION ALL
		       SELECT COUNT(1) AS QTY, '1' as PROD_TYPE_CD
		         FROM ORD_INFO A
		            , ORD_PROD_INFO B
		            , PROD C
		            , MBER_INFO D
		            , MBER_INFO D1
		            , PROD_BUY_CONF_INFO E
		        WHERE A.ORD_CD = B.ORD_CD
		          AND B.PROC_STAT_CD NOT IN ('50', '15' )
		          AND A.MBER_SEQ = D.MBER_SEQ
		          AND B.PROD_CODE = C.PROD_CODE
		          AND C.MBER_SEQ = D1.MBER_SEQ
		          AND B.ORD_CD = E.ORD_CD (+)
		          AND B.PROD_CODE = E.PROD_CODE (+)
		          AND B.PROD_SEQ = E.PROD_SEQ (+)
		          AND B.PROD_TYPE_CD = '1'
		          AND A.MBER_SEQ = #{MBER_SEQ}
		          AND B.PROC_STAT_CD IN ('10', '21', '22', '23', '99' )
		        UNION ALL
		       SELECT COUNT(1) AS QTY, '3' as PROD_TYPE_CD
		         FROM (
		              SELECT D.ORD_CD
		                   , D.PROD_SEQ
		                   , A.PROD_CODE
		                   , B.PROD_NM
		                   , (CASE WHEN A.PROC_STAT_CD = '97' THEN A.REGIST_DT ELSE D.REGIST_DT END ) AS REGIST_DT
		                   , A.MBER_SEQ
		                   , A.PROD_TYPE_CD
		                   , (CASE WHEN D.PROC_STAT_CD = '22' OR D.PROC_STAT_CD = '23' THEN D.PROC_STAT_CD ELSE A.PROC_STAT_CD END ) AS PROC_STAT_CD
		                FROM PROD_SUBMIT_INFO A
		                   , PROD B
		                   , MBER_INFO C
		                   , ORD_PROD_INFO D
		               WHERE A.PROD_CODE = B.PROD_CODE
		                 AND A.MBER_SEQ = C.MBER_SEQ
		                 AND A.PROD_CODE = D.PROD_CODE (+)
		                 AND A.MBER_SEQ = #{MBER_SEQ}
		                 AND A.PROD_TYPE_CD = '3'
		                 AND D.PROD_TYPE_CD (+) = '3'
		                 AND A.PROC_STAT_CD IN ('22', '23', '95', '96', '97' )
		            ) T
		        UNION ALL
		       SELECT COUNT(1) AS QTY, '5' as PROD_TYPE_CD
		         FROM PROD_SUBMIT_INFO A
		            , PROD B
		            , MBER_INFO C
		        WHERE A.PROD_CODE = B.PROD_CODE
		          AND A.MBER_SEQ = C.MBER_SEQ
		          AND A.MBER_SEQ = #{MBER_SEQ}
		          AND A.PROD_TYPE_CD = '5'
		          AND A.PROC_STAT_CD IN ('93', '94' )
		     ) S
		 GROUP BY S.PROD_TYPE_CD
	</select>

	<select id="selectProdInfo" parameterType="int" resultType="hashmap">

		SELECT X.PROD_TYPE_CD		AS PROD_TYPE_CD
		    , COUNT(X.PROD_CODE) 	AS PROD_QTY
		FROM (
		    SELECT PROD_CODE
		        , PROD_TYPE_CD
		    FROM PROD
		    WHERE MBER_SEQ = #{MBER_SEQ}
		        AND PROD_STAT_CD = '0'
		        AND PROD_TYPE_CD = '1'
		    UNION
		    SELECT PROD_CODE
		        , PROD_TYPE_CD
		    FROM PROD
		    WHERE MBER_SEQ = #{MBER_SEQ}
		        AND PROD_STAT_CD = '0'
		        AND PROD_TYPE_CD = '2'
		    UNION
		    SELECT PROD_CODE
		        , PROD_TYPE_CD
		    FROM PROD
		    WHERE MBER_SEQ = #{MBER_SEQ}
		        AND PROD_STAT_CD = '0'
		        AND PROD_TYPE_CD = '3'
		        AND REGIST_DT <![CDATA[<=]]> SYSDATE AND FREESHARE_END_DT <![CDATA[>=]]> SYSDATE
		)X
		GROUP BY X.PROD_TYPE_CD
	</select>

	<select id="selectQnaInfo" parameterType="int" resultType="hashmap">
		SELECT X1.PROD_QNA_CNT      AS PROD_QNA_CNT
		    , X2.PROD_QNA_NEW       AS PROD_QNA_NEW
		    , Y1.CUSTOM_QNA_CNT     AS CUSTOM_QNA_CNT
		    , Y2.CUSTOM_QNA_NEW     AS CUSTOM_QNA_NEW
		FROM(
		    SELECT COUNT(*)         AS PROD_QNA_CNT
		    FROM BOARD_INFO
		    WHERE BOARD_TYPE_CD = '72'
		        AND MBER_SEQ = #{MBER_SEQ}
		) X1,(
		    SELECT COUNT(*)         AS PROD_QNA_NEW
		    FROM BOARD_INFO
		    WHERE BOARD_TYPE_CD = '72'
		        AND MBER_SEQ = #{MBER_SEQ}
		        AND VIEW_CNT IS NULL
		        AND ANS_CONTENTS IS NOT NULL
		) X2, (
		    SELECT COUNT(*)         AS CUSTOM_QNA_CNT
		    FROM BOARD_INFO
		    WHERE BOARD_TYPE_CD = '40'
		        AND MBER_SEQ = #{MBER_SEQ}
		) Y1, (
		    SELECT COUNT(*)         AS CUSTOM_QNA_NEW
		    FROM BOARD_INFO
		    WHERE BOARD_TYPE_CD = '40'
		        AND MBER_SEQ = #{MBER_SEQ}
		        AND VIEW_CNT IS NULL
		        AND ANS_CONTENTS IS NOT NULL
		) Y2
	</select>

	<select id="selectSellInfo" parameterType="int" resultType="hashmap">

	SELECT COUNT(1) AS PROD_QTY, '2' as PROD_TYPE_CD
	  FROM ORD_INFO OI
	     , ORD_PROD_INFO OPI
	     , PROD PI
	     , PROD_SHARING PS
	     , CHG_PROD_INFO CPI
	 WHERE OI.ORD_CD = OPI.ORD_CD
	   AND OPI.PROD_CODE = PI.PROD_CODE
	   AND PI.PROD_CODE = PS.PROD_CODE
	   AND OPI.ORD_CD = CPI.ORD_CD (+)
	   AND OPI.PROD_CODE = CPI.PROD_CODE (+)
	   AND OPI.PROD_SEQ = CPI.PROD_SEQ (+)
	   AND PI.PROD_TYPE_CD = '2'
	   AND PI.MBER_SEQ = #{MBER_SEQ}
	   AND OPI.PROC_STAT_CD IN ('10', '21', '22', '23', '85', '86', '87', '88', '89' )
	   UNION ALL
	SELECT COUNT(1) AS PROD_QTY, '1' as PROD_TYPE_CD
	  FROM ORD_INFO OI
	     , ORD_PROD_INFO OPI
	     , PROD PI
	     , CHG_PROD_INFO CPI
	 WHERE OI.ORD_CD = OPI.ORD_CD
	   AND OPI.PROD_CODE = PI.PROD_CODE
	   AND OPI.ORD_CD = CPI.ORD_CD (+)
	   AND OPI.PROD_CODE = CPI.PROD_CODE (+)
	   AND OPI.PROD_SEQ = CPI.PROD_SEQ (+)
	   AND PI.PROD_TYPE_CD = '1'
	   AND PI.MBER_SEQ = #{MBER_SEQ}
	   AND OPI.PROC_STAT_CD IN ('10', '21', '22', '23', '99' )
	      UNION ALL
	SELECT COUNT(1) AS PROD_QTY, '3' as PROD_TYPE_CD
	  FROM (
	       SELECT X.CNT AS CNT
	            , X.PROD_CODE AS PROD_CODE
	            , X.PROD_NM AS PROD_NM
	            , X.PROD_TYPE_CD AS PROD_TYPE_CD
	            , X.DLV_WAY_CD AS DLV_WAY_CD
	            , X.FREESHARE_START_DT AS FREESHARE_START_DT
	            , X.FREESHARE_END_DT AS FREESHARE_END_DT
	            , OPI.ORD_CD AS ORD_CD
	            , OPI.REGIST_DT AS ORD_REGIST_DT
	            , NVL(OPI.PROC_STAT_CD, '97') AS PROC_STAT_CD
	            , OPI.PROD_SEQ AS PROD_SEQ
	         FROM (
	              SELECT COUNT(PI.PROD_CODE) AS CNT
	                   , PI.PROD_CODE
	                   , PI.PROD_NM AS PROD_NM
	                   , PI.PROD_TYPE_CD AS PROD_TYPE_CD
	                   , PI.DLV_WAY_CD AS DLV_WAY_CD
	                   , PI.REGIST_DT AS FREESHARE_START_DT
	                   , PI.FREESHARE_END_DT AS FREESHARE_END_DT
	                FROM PROD PI
	                   , PROD_SUBMIT_INFO PSI
	               WHERE PI.PROD_CODE = PSI.PROD_CODE
	                 AND PI.PROD_TYPE_CD = '3'
	                 AND PI.MBER_SEQ = #{MBER_SEQ}
	               GROUP BY PI.PROD_CODE
	                   , PI.PROD_NM
	                   , PI.PROD_TYPE_CD
	                   , PI.DLV_WAY_CD
	                   , PI.REGIST_DT
	                   , PI.FREESHARE_END_DT
	            ) X LEFT OUTER JOIN ORD_PROD_INFO OPI ON X.PROD_CODE = OPI.PROD_CODE LEFT OUTER JOIN PROD_IMG IMG ON X.PROD_CODE = IMG.PROD_CODE
	          AND IMG.PROD_IMG_GB_CD = '11'
	          )

	</select>

	<select id="selectSharInfo" parameterType="int" resultType="hashmap">
		SELECT ROUND(( X.PREV / (X.PREV + X.NEXT) * 100 ), 0) AS PERC
			  ,X.PROD_NM									  AS PROD_NM
			  ,X.FILE_URL									  AS FILE_URL
			  ,TO_CHAR(X.END_DT, 'YYYY-MM-DD')		 		  AS END_DT
			  ,X.PROD_CODE									  AS PROD_CODE
		FROM (
		    SELECT SYSDATE - SOD.OPEN_DT AS PREV
		        , SOD.END_DT - SYSDATE  AS NEXT
		        , SP.PROD_NM
		        , SOD.END_DT
		        , FI.FILE_URL
		        , SP.PROD_CODE
		    FROM ORD_INFO OI
		        INNER JOIN ORD_PROD_INFO OPI ON OI.ORD_CD = OPI.ORD_CD
		        INNER JOIN SP_PROD SP ON SP.PROD_CODE = OPI.PROD_CODE
		        LEFT OUTER JOIN SP_OPEN_DETAIL SOD ON SOD.ORD_CD = OPI.ORD_CD
		        INNER JOIN SP_IMAGE SI ON SI.PROD_CODE = SP.PROD_CODE
		        INNER JOIN FILE_INFO FI ON FI.FILE_SEQ = SI.FILE_NO
		    WHERE OI.MBER_SEQ = #{MBER_SEQ}
		        AND OPI.PROD_TYPE_CD = '4'
		        AND OPI.PROC_STAT_CD IN ('11', '22', '85', '86')
		        AND SI.SP_IMG_GB_CD = '02'
		)X
	</select>


	<select id="selectSharCnt" parameterType="int" resultType="Integer">
		SELECT COUNT(*) FROM ORD_PROD_INFO
		WHERE PROC_STAT_CD  IN ('11', '22', '85', '86')
		 AND PROD_TYPE_CD = '4'
		 AND MBER_SEQ = #{mberSeq}
	</select>
	<select id="selectPushMsgInfoCnt" resultType="Integer">
	SELECT COUNT(*)
	  FROM PUSH
	 WHERE MBER_SEQ = #{MBER_ESQ}
	   AND (PUSH_READY_YN = 'N' OR PUSH_READY_YN IS NULL) <!-- 기본값을 꼽아 줘야 하나 안주고 있음 IS 예외처리. -->
	</select>

	<update id="updateConnCnt" parameterType="hashmap">
		UPDATE MBER_DTL_INFO
		SET CONN_CNT = (SELECT CONN_CNT FROM MBER_DTL_INFO WHERE MBER_SEQ = #{MBER_SEQ})+1
		WHERE MBER_SEQ = #{MBER_SEQ}
	</update>

	<insert id="insertConnLog" parameterType="hashmap">
		INSERT INTO  MBER_CON_LOG(
		        CON_DATE                  /*접속일자*/
		       ,REG_SEQ                   /*등록일련번호*/
		       ,MBER_SEQ                  /*회원일련번호  */
		       ,CON_GB                    /*접속구분 CON_GB_CD*/
		       ,CON_IP                    /*접속IP*/
		       ,REGIST_DT                 /*등록일시*/
		) VALUES(
		         TO_CHAR(SYSDATE, 'YYYYMMDD')
		       , (SELECT (COUNT(MBER_SEQ) +1) CNT FROM MBER_CON_LOG WHERE CON_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD') AND MBER_SEQ = #{MBER_SEQ})
		       , #{MBER_SEQ}
		       , #{CON_GB}
		       , #{CON_IP}
		       , SYSDATE
		)
	</insert>

	<update id="updateLastLoginDt" parameterType="hashmap">
		UPDATE MBER_INFO
		SET LAST_LOGIN_DT = SYSDATE
		WHERE MBER_SEQ = #{MBER_SEQ}
	</update>

	<select id="insLoginfoDupChk" parameterType="hashmap" resultType="String">
	<!--
		SELECT (CASE WHEN TO_CHAR(REG_DT, 'YYYYMMDDHH24MISS') = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') THEN 'Y' ELSE 'N' END ) AS STAT_FLAG
		  FROM (
		       SELECT A.MBER_SEQ
		            , MAX(NVL(B.REGIST_DT, A.REGIST_DT)) AS REG_DT
		         FROM MBER_INFO A LEFT OUTER JOIN MBER_CON_LOG B ON A.MBER_SEQ = B.MBER_SEQ
		        WHERE A.MBER_SEQ = #{MBER_SEQ}
		        GROUP BY A.MBER_SEQ
		     ) STD -->
		SELECT NVL(A.STAT_FLAG, 'Y') AS STAT_FLAG
		  FROM (
		       SELECT (CASE WHEN TO_CHAR(REG_DT, 'YYYYMMDDHH24MISS') = TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') THEN 'Y' ELSE 'N' END ) AS STAT_FLAG
		         FROM (
		              SELECT A.MBER_SEQ
		                   , MAX(NVL(B.REGIST_DT, A.REGIST_DT)) AS REG_DT
		                FROM MBER_INFO A LEFT OUTER JOIN MBER_CON_LOG B ON A.MBER_SEQ = B.MBER_SEQ
		               WHERE A.MBER_SEQ = #{MBER_SEQ}
		               GROUP BY A.MBER_SEQ
		            ) STD
		     ) A, (
		       SELECT 'N' STAT_FLAG
		         FROM DUAL
		     ) B
		 WHERE A.STAT_FLAG (+) = B.STAT_FLAG
	</select>

	<select id="selectAllPlanList" resultType="hashmap">
		SELECT
			A.PLAN_CD ,
			A.PLAN_NM ,
			B.FILE_SEQ ,
			B.URL,
    		B.VIEW_SEQ,
			C.FILE_URL
		FROM
			PLAN_INFO A ,
			PLAN_IMG_INFO B ,
			FILE_INFO C
		WHERE
			A.VIEW_YN = 'Y'
			<!-- AND A.ALL_VIEW_YN = 'Y' -->
      		AND B.VIEW_SEQ = '1'
			AND B.FILE_SEQ = C.FILE_SEQ
			AND A.PLAN_CD = B.PLAN_CD
			AND TO_CHAR (SYSDATE, 'YYYYMMDDHH24MI') BETWEEN TO_CHAR (A.START_DT,'YYYYMMDDHH24MI')
			AND TO_CHAR (A.END_DT , 'YYYYMMDDHH24MI')
			ORDER BY A.VIEW_SEQ ASC
	</select>
</mapper>