package com.ssocio.sharing.dao.admin;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.web.RspnsCnst;

/**
 * <pre>
 * 설명
 * 설명
 * @author J.K.CHOI
 * @version
 * @since 2015. 7. 17. 오후 7:41:45
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 17.	|	J.K.CHOI	|신규
 * @비고
 * </pre>
 */
@Component
public class AdminAdjustDao {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminAdjustDao.class);
	
	/* --------------------------------------------------------------------------
		# sqlSession 설정
		 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
		 -- 하나만 사용할 경우 @Autowired
	   --------------------------------------------------------------------------*/
	@Resource(name="sqlSessionAdmin")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	/**
	 * <pre>
	 * 정산대기 전체정산 리스트 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectListAdjust(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListAdjust Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminAdjustMapper.selectListAdjust", inParam);
		} catch (Exception e) {
			logger.error("selectListAdjust DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	 }
	
	/**
	 * <pre>
	 * 정산대기리스트 전체정산 정산금액, 판매자수 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object>  selectAmtCnt(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectAmtCnt Start");
		Map<String, Object> map = null;
		try {
			map =  sqlSession.selectOne("adminAdjustMapper.selectAmtCnt", inParam);
		} catch (Exception e) {
			logger.error("selectAmtCnt DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}
	
	/**
	 * <pre>
	 * 정산대기리스트 판매정산 정산금액, 판매자수 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object>  selectSellAmtCnt(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSellAmtCnt Start");
		Map<String, Object> map = null;
		try {
			map =  sqlSession.selectOne("adminAdjustMapper.selectSellAmtCnt", inParam);
		} catch (Exception e) {
			logger.error("selectSellAmtCnt DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}
	
	/**
	 * <pre>
	 * 정산대기리스트 셰어링정산 정산금액, 판매자수 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object>  selectShareAmtCnt(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectShareAmtCnt Start");
		Map<String, Object> map = null;
		try {
			map =  sqlSession.selectOne("adminAdjustMapper.selectShareAmtCnt", inParam);
		} catch (Exception e) {
			logger.error("selectShareAmtCnt DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}
	
	/**
	 * <pre>
	 * 정산대기 판매정산 리스트 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectListSellAdjust(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListSellAdjust Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminAdjustMapper.selectListSellAdjust", inParam);
		} catch (Exception e) {
			logger.error("selectListSellAdjust DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	/**
	 * <pre>
	 * 정산대기 셰어링정산 리스트 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectListShareAdjust(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListShareAdjust Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminAdjustMapper.selectListShareAdjust", inParam);
		} catch (Exception e) {
			logger.error("selectListShareAdjust DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	/**
	 * <pre>
	 * 정산대기 리스트 엑셀
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Object selectListAdjustToExcel(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListAdjustToExcel Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminAdjustMapper.selectListAdjustToExcel", inParam);
		} catch (Exception e) {
			logger.error("selectListAdjustToExcel DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	 }
	
	public Object selectListAdjustByTrToExcel(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListAdjustByTrToExcel Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminAdjustMapper.selectListAdjustByTrToExcel", inParam);
		} catch (Exception e) {
			logger.error("selectListAdjustByTrToExcel DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	  /**
	   * <pre>
	   * 정산대기 전체정산 리스트 카운트 조회
	   * 
	   * @param inParam
	   * @return
	   * @throws Exception
	   * @date 2015. 7. 28. 오후 2:10:39
	   * @author J.K.CHOI
	   * @see com.ssocio.sharing.dao.admin
	   * </pre>
	   */
	  public int selectListAdjustCount(Map<String, Object> inParam) throws Exception{
		  // // ------------------------------------------------------------------------
		  // # 시작로그
		  // ------------------------------------------------------------------------
		  logger.info("selectListAdjustCount Start");
		  int count= 0;
		  try {
			  count = sqlSession.selectOne("adminAdjustMapper.selectListAdjustCount", inParam);
		  }catch (Exception e) {
			  e.printStackTrace();
			  logger.error("selectListAdjustCount DB Error : " + e.toString());
			  throw new Exception(RspnsCnst.RC1000000004);
		  }
		  return count;
	  }
	  /**
	   * <pre>
	   * 정산대기 판매정산 리스트 카운트 조회
	   * 
	   * @param inParam
	   * @return
	   * @throws Exception
	   * @date 2015. 7. 28. 오후 2:10:39
	   * @author J.K.CHOI
	   * @see com.ssocio.sharing.dao.admin
	   * </pre>
	   */
	  public int selectListSellAdjustCount(Map<String, Object> inParam) throws Exception{
		  // // ------------------------------------------------------------------------
		  // # 시작로그
		  // ------------------------------------------------------------------------
		  logger.info("selectListSellAdjustCount Start");
		  int count= 0;
		  try {
			  count = sqlSession.selectOne("adminAdjustMapper.selectListSellAdjustCount", inParam);
		  }catch (Exception e) {
			  e.printStackTrace();
			  logger.error("selectListSellAdjustCount DB Error : " + e.toString());
			  throw new Exception(RspnsCnst.RC1000000004);
		  }
		  return count;
	  }
	  /**
	   * <pre>
	   * 정산대기 셰어링정산 리스트 카운트 조회
	   * 
	   * @param inParam
	   * @return
	   * @throws Exception
	   * @date 2015. 7. 28. 오후 2:10:39
	   * @author J.K.CHOI
	   * @see com.ssocio.sharing.dao.admin
	   * </pre>
	   */
	  public int selectListShareAdjustCount(Map<String, Object> inParam) throws Exception{
		  // // ------------------------------------------------------------------------
		  // # 시작로그
		  // ------------------------------------------------------------------------
		  logger.info("selectListShareAdjustCount Start");
		  int count= 0;
		  try {
			  count = sqlSession.selectOne("adminAdjustMapper.selectListShareAdjustCount", inParam);
		  }catch (Exception e) {
			  e.printStackTrace();
			  logger.error("selectListShareAdjustCount DB Error : " + e.toString());
			  throw new Exception(RspnsCnst.RC1000000004);
		  }
		  return count;
	  }
	  
	
	/**
	 * <pre>
	 * 정산대기 판매정산 상세리스트 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 29. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectDtlListSellAdjust(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectDtlListSellAdjust Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminAdjustMapper.selectDtlListSellAdjust", inParam);
		} catch (Exception e) {
			logger.error("selectDtlListSellAdjust DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	 }
	
	/**
	 * <pre>
	 * 정산대기 셰어링정산 상세리스트 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 29. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectDtlListShareAdjust(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectDtlListShareAdjust Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminAdjustMapper.selectDtlListShareAdjust", inParam);
		} catch (Exception e) {
			logger.error("selectDtlListShareAdjust DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	/**
	 * <pre>
	 * 정산대기 상세 선택정산완료
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 29. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int goCpltAdjust(Map<String, Object> inParam) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("goCpltAdjust Start");
		int outParam = 0;
		try {
			outParam = sqlSession.update("adminAdjustMapper.goCpltAdjust", inParam);
		}
		catch (Exception e) {
			logger.error("deleteLevel DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	public int insertAdjustInfo(Map<String, Object> inParam) throws Exception {
		logger.info("########## insertAdjustInfo Start");
		int ret = 0;
		try {
			ret = sqlSession.insert("adminAdjustMapper.insertAdjustInfo", inParam);
		} catch (Exception e) {
			logger.error("insertAdjustInfo DB Error : " + e.toString());
			throw new Exception();
		}
		return ret;
	}
	
	/**
	 * <pre>
	 * 정산대기 상세 정산상태변경
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 29. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int insertAdjInfo(Map<String, Object> inParam) throws Exception {
		logger.info("########## insertAdjInfo Start");
		int outParam = 0;
		try {
			outParam = sqlSession.insert("adminAdjustMapper.insertAdjInfo", inParam);
		} catch (Exception e) {
			logger.error("insertAdjInfo DB Error : " + e.toString());
			throw new Exception(e);
		}
		return outParam;
	}
	
	public int chgAdjStatF(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("chgAdjStatF Start");
		int outParam = 0;
		try {
			outParam =  sqlSession.update("adminAdjustMapper.chgAdjStatF", inParam);
		} catch (Exception e) {
			logger.error("insertAdjustInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	public int chgAdjStatW(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("chgAdjStatW Start");
		int outParam = 0;
		try {
			outParam =  sqlSession.update("adminAdjustMapper.chgAdjStatW", inParam);
		} catch (Exception e) {
			logger.error("insertAdjustInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	public int chgAdjStatN(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("chgAdjStatN Start");
		int outParam = 0;
		try {
			outParam =  sqlSession.update("adminAdjustMapper.chgAdjStatN", inParam);
		} catch (Exception e) {
			logger.error("insertAdjustInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	public int chgAdjStatR(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("chgAdjStatR Start");
		int outParam = 0;
		try {
			outParam =  sqlSession.update("adminAdjustMapper.chgAdjStatR", inParam);
		} catch (Exception e) {
			logger.error("insertAdjustInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	
	/**
	 * <pre>
	 * 정산대기 판매정산 상세조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 29. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object>  selectSellAdjust(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSellAdjust Start");
		Map<String, Object> map = null;
		try {
			map =  sqlSession.selectOne("adminAdjustMapper.selectSellAdjust", inParam);
		} catch (Exception e) {
			logger.error("selectSellAdjust DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}
	
	/**
	 * <pre>
	 * 정산대기 셰어링정산 상세조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 29. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object>  selectShareAdjust(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectShareAdjust Start");
		Map<String, Object> map = null;
		try {
			map =  sqlSession.selectOne("adminAdjustMapper.selectShareAdjust", inParam);
		} catch (Exception e) {
			logger.error("selectShareAdjust DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}
	
	 /**
	   * <pre>
	   * 정산대기 판매정산 상세 리스트 카운트 조회
	   * 
	   * @param inParam
	   * @return
	   * @throws Exception
	   * @date 2015. 7. 29. 오후 2:10:39
	   * @author J.K.CHOI
	   * @see com.ssocio.sharing.dao.admin
	   * </pre>
	   */
	  public int selectDtlListSellAdjustCount(Map<String, Object> inParam) throws Exception{
		  // // ------------------------------------------------------------------------
		  // # 시작로그
		  // ------------------------------------------------------------------------
		  logger.info("selectDtlListSellAdjustCount Start");
		  int count= 0;
		  try {
			  count = sqlSession.selectOne("adminAdjustMapper.selectDtlListSellAdjustCount", inParam);
		  }catch (Exception e) {
			  logger.error("selectDtlListSellAdjustCount DB Error : " + e.toString());
			  throw new Exception(RspnsCnst.RC1000000004);
		  }
		  return count;
	  }
	  
	  /**
	   * <pre>
	   * 정산대기 셰어링정산 상세 리스트 카운트 조회
	   * 
	   * @param inParam
	   * @return
	   * @throws Exception
	   * @date 2015. 7. 29. 오후 2:10:39
	   * @author J.K.CHOI
	   * @see com.ssocio.sharing.dao.admin
	   * </pre>
	   */
	  public int selectDtlListShareAdjustCount(Map<String, Object> inParam) throws Exception{
		  // // ------------------------------------------------------------------------
		  // # 시작로그
		  // ------------------------------------------------------------------------
		  logger.info("selectDtlListShareAdjustCount Start");
		  int count= 0;
		  try {
			  count = sqlSession.selectOne("adminAdjustMapper.selectDtlListShareAdjustCount", inParam);
		  }catch (Exception e) {
			  logger.error("selectDtlListShareAdjustCount DB Error : " + e.toString());
			  throw new Exception(RspnsCnst.RC1000000004);
		  }
		  return count;
	  }
	  
	/**
	 * <pre>
	 * 정산완료 전체정산 리스트 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectCpltListAdjust(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectCpltListAdjust Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminAdjustMapper.selectCpltListAdjust", inParam);
		} catch (Exception e) {
			logger.error("selectCpltListAdjust DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	 }
		
	/**
	 * <pre>
	 * 정산완료리스트 전체정산 정산금액, 판매자수 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object>  selectCpltAmtCnt(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectCpltAmtCnt Start");
		Map<String, Object> map = null;
		try {
			map =  sqlSession.selectOne("adminAdjustMapper.selectCpltAmtCnt", inParam);
		} catch (Exception e) {
			logger.error("selectCpltAmtCnt DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}
		
	/**
	 * <pre>
	 * 정산완료리스트 판매정산 정산금액, 판매자수 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object>  selectCpltSellAmtCnt(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectCpltSellAmtCnt Start");
		Map<String, Object> map = null;
		try {
			map =  sqlSession.selectOne("adminAdjustMapper.selectCpltSellAmtCnt", inParam);
		} catch (Exception e) {
			logger.error("selectCpltSellAmtCnt DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}
		
	/**
	 * <pre>
	 * 정산완료리스트 셰어링정산 정산금액, 판매자수 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object>  selectCpltShareAmtCnt(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectCpltShareAmtCnt Start");
		Map<String, Object> map = null;
		try {
			map =  sqlSession.selectOne("adminAdjustMapper.selectCpltShareAmtCnt", inParam);
		} catch (Exception e) {
			logger.error("selectCpltShareAmtCnt DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}
		
	/**
	 * <pre>
	 * 정산완료 판매정산 리스트 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectCpltListSellAdjust(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectCpltListSellAdjust Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminAdjustMapper.selectCpltListSellAdjust", inParam);
		} catch (Exception e) {
			logger.error("selectCpltListSellAdjust DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
		
	/**
	 * <pre>
	 * 정산완료 셰어링정산 리스트 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectCpltListShareAdjust(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectCpltListShareAdjust Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminAdjustMapper.selectCpltListShareAdjust", inParam);
		} catch (Exception e) {
			logger.error("selectCpltListShareAdjust DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	/**
	 * <pre>
	 * 정산완료 리스트 엑셀
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Object selectCpltListAdjustToExcel(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectCpltListAdjustToExcel Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminAdjustMapper.selectCpltListAdjustToExcel", inParam);
		} catch (Exception e) {
			logger.error("selectCpltListAdjustToExcel DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	 }
	
	/**
	 * <pre>
	 * 지급요청 엑셀
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Object selectPayRequestToExcel(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectPayRequestToExcel Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminAdjustMapper.selectPayRequestToExcel", inParam);
		} catch (Exception e) {
			logger.error("selectPayRequestToExcel DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
		
	  /**
	   * <pre>
	   * 정산완료 전체리스트 카운트 조회
	   * 
	   * @param inParam
	   * @return
	   * @throws Exception
	   * @date 2015. 7. 28. 오후 2:10:39
	   * @author J.K.CHOI
	   * @see com.ssocio.sharing.dao.admin
	   * </pre>
	   */
	  public int selectCpltListAdjustCount(Map<String, Object> inParam) throws Exception{
		  // // ------------------------------------------------------------------------
		  // # 시작로그
		  // ------------------------------------------------------------------------
		  logger.info("selectCpltListAdjustCount Start");
		  int count= 0;
		  try {
			  count = sqlSession.selectOne("adminAdjustMapper.selectCpltListAdjustCount", inParam);
		  }catch (Exception e) {
			  e.printStackTrace();
			  logger.error("selectCpltListAdjustCount DB Error : " + e.toString());
			  throw new Exception(RspnsCnst.RC1000000004);
		  }
		  return count;
	  }
	  /**
	   * <pre>
	   * 정산완료 판매정산 리스트 카운트 조회
	   * 
	   * @param inParam
	   * @return
	   * @throws Exception
	   * @date 2015. 7. 28. 오후 2:10:39
	   * @author J.K.CHOI
	   * @see com.ssocio.sharing.dao.admin
	   * </pre>
	   */
	  public int selectCpltListSellAdjustCount(Map<String, Object> inParam) throws Exception{
		  // // ------------------------------------------------------------------------
		  // # 시작로그
		  // ------------------------------------------------------------------------
		  logger.info("selectCpltListSellAdjustCount Start");
		  int count= 0;
		  try {
			  count = sqlSession.selectOne("adminAdjustMapper.selectCpltListSellAdjustCount", inParam);
		  }catch (Exception e) {
			  e.printStackTrace();
			  logger.error("selectCpltListSellAdjustCount DB Error : " + e.toString());
			  throw new Exception(RspnsCnst.RC1000000004);
		  }
		  return count;
	  }
	  /**
	   * <pre>
	   * 정산완료 셰어링정산 리스트 카운트 조회
	   * 
	   * @param inParam
	   * @return
	   * @throws Exception
	   * @date 2015. 7. 28. 오후 2:10:39
	   * @author J.K.CHOI
	   * @see com.ssocio.sharing.dao.admin
	   * </pre>
	   */
	  public int selectCpltListShareAdjustCount(Map<String, Object> inParam) throws Exception{
		  // // ------------------------------------------------------------------------
		  // # 시작로그
		  // ------------------------------------------------------------------------
		  logger.info("selectCpltListShareAdjustCount Start");
		  int count= 0;
		  try {
			  count = sqlSession.selectOne("adminAdjustMapper.selectCpltListShareAdjustCount", inParam);
		  }catch (Exception e) {
			  e.printStackTrace();
			  logger.error("selectCpltListShareAdjustCount DB Error : " + e.toString());
			  throw new Exception(RspnsCnst.RC1000000004);
		  }
		  return count;
	  }
	  
	
	  /**
		 * <pre>
		 * 정산완료 판매정산 상세리스트 조회
		 * 
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 7. 29. 오후 2:10:39
		 * @author J.K.CHOI
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public List<Map<String, Object>> selectCpltDtlListSellAdjust(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectCpltDtlListSellAdjust Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminAdjustMapper.selectCpltDtlListSellAdjust", inParam);
			} catch (Exception e) {
				logger.error("selectCpltDtlListSellAdjust DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		 }
		
		/**
		 * <pre>
		 * 정산완료 셰어링정산 상세리스트 조회
		 * 
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 7. 29. 오후 2:10:39
		 * @author J.K.CHOI
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public List<Map<String, Object>> selectCpltDtlListShareAdjust(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectCpltDtlListShareAdjust Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminAdjustMapper.selectCpltDtlListShareAdjust", inParam);
			} catch (Exception e) {
				logger.error("selectCpltDtlListShareAdjust DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}
		
	/**
	   * <pre>
	   * 정산완료 판매정산 상세 리스트 카운트 조회
	   * 
	   * @param inParam
	   * @return
	   * @throws Exception
	   * @date 2015. 7. 29. 오후 2:10:39
	   * @author J.K.CHOI
	   * @see com.ssocio.sharing.dao.admin
	   * </pre>
	   */
	  public int selectCpltDtlListSellAdjustCount(Map<String, Object> inParam) throws Exception{
		  // // ------------------------------------------------------------------------
		  // # 시작로그
		  // ------------------------------------------------------------------------
		  logger.info("selectCpltDtlListSellAdjustCount Start");
		  int count= 0;
		  try {
			  count = sqlSession.selectOne("adminAdjustMapper.selectCpltDtlListSellAdjustCount", inParam);
		  }catch (Exception e) {
			  logger.error("selectCpltDtlListSellAdjustCount DB Error : " + e.toString());
			  throw new Exception(RspnsCnst.RC1000000004);
		  }
		  return count;
	  }
	  
	  /**
	   * <pre>
	   * 정산완료 셰어링정산 상세 리스트 카운트 조회
	   * 
	   * @param inParam
	   * @return
	   * @throws Exception
	   * @date 2015. 7. 29. 오후 2:10:39
	   * @author J.K.CHOI
	   * @see com.ssocio.sharing.dao.admin
	   * </pre>
	   */
	  public int selectCpltDtlListShareAdjustCount(Map<String, Object> inParam) throws Exception{
		  // // ------------------------------------------------------------------------
		  // # 시작로그
		  // ------------------------------------------------------------------------
		  logger.info("selectCpltDtlListShareAdjustCount Start");
		  int count= 0;
		  try {
			  count = sqlSession.selectOne("adminAdjustMapper.selectCpltDtlListShareAdjustCount", inParam);
		  }catch (Exception e) {
			  logger.error("selectCpltDtlListShareAdjustCount DB Error : " + e.toString());
			  throw new Exception(RspnsCnst.RC1000000004);
		  }
		  return count;
	  }
	  
	/**
	 * <pre>
	 * 정산완료 판매정산 상세조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 29. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object>  selectCpltSellAdjust(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectCpltSellAdjust Start");
		Map<String, Object> map = null;
		try {
			map =  sqlSession.selectOne("adminAdjustMapper.selectCpltSellAdjust", inParam);
		} catch (Exception e) {
			logger.error("selectSellAdjust DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}
	
	/**
	 * <pre>
	 * 정산완료 셰어링정산 상세조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 29. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object>  selectCpltShareAdjust(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectCpltShareAdjust Start");
		Map<String, Object> map = null;
		try {
			map =  sqlSession.selectOne("adminAdjustMapper.selectCpltShareAdjust", inParam);
		} catch (Exception e) {
			logger.error("selectCpltShareAdjust DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}
	
	  /**
	 * <pre>
	 * 엑셀 정산
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 29. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */  
	public int updateAdjHistStatA(Map<String, Object> excelParam) throws Exception {
	// // ------------------------------------------------------------------------
	  // # 시작로그
	  // ------------------------------------------------------------------------
	  logger.info("updateAdjHistStatA Start");
	  int count= 0;
	  try {
		  count = sqlSession.update("adminAdjustMapper.updateAdjHistStatA", excelParam);
	  }catch (Exception e) {
		  logger.error("updateAdjHistStatA DB Error : " + e.toString());
		  throw new Exception(RspnsCnst.RC1000000004);
	  }
	  return count;
	}
	
	public int getAdjustHistCnt(Map<String, Object> inParam) throws Exception {
		// // ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("getAdjustHistCnt Start");
		int cnt = 0;
		try {
			cnt = sqlSession.selectOne("adminAdjustMapper.getAdjustHistCnt", inParam);
		}catch (Exception e) {
			logger.error("getAdjustHistCnt DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return cnt;
	}
	
	public int getAdjustInfoByTxtCnt(Map<String, Object> inParam) throws Exception {
		// // ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("getAdjustInfoByTxtCnt Start");
		int cnt = 0;
		try {
			cnt = sqlSession.selectOne("adminAdjustMapper.getAdjustInfoByTxtCnt", inParam);
		}catch (Exception e) {
			logger.error("getAdjustInfoByTxtCnt DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return cnt;
	}
	
	public String getAdjustFilePath() throws Exception {
		// // ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("getAdjustFilePath Start");
		String cnt = "";
		try {
			cnt = sqlSession.selectOne("adminAdjustMapper.getAdjustFilePath");
		}catch (Exception e) {
			logger.error("getAdjustFilePath DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return cnt;
	}
	
	public List<Map<String, Object>> listAdjustHist(Map<String, Object> inParam) throws Exception {
		// // ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("listAdjustHist Start");
		List<Map<String, Object>> list = null;
		try {
			list = sqlSession.selectList("adminAdjustMapper.listAdjustHist", inParam);
		}catch (Exception e) {
			logger.error("listAdjustHist DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	public int insertAdjustLog(Map<String, Object> excelParam) throws Exception {
		// // ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("insertAdjustLog Start");
		int count= 0;
		try {
			count = sqlSession.update("adminAdjustMapper.insertAdjustLog", excelParam);
		}catch (Exception e) {
			logger.error("insertAdjustLog DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return count;
	}
	
	public int insertAdjustInfoByTxt(Map<String, Object> excelParam) throws Exception {
		// // ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("insertAdjustInfoByTxt Start");
		int count= 0;
		try {
			count = sqlSession.update("adminAdjustMapper.insertAdjustInfoByTxt", excelParam);
		}catch (Exception e) {
			logger.error("insertAdjustInfoByTxt DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return count;
	}
	
	public int updateAdjustHistCplt(Map<String, Object> excelParam) throws Exception {
	// // ------------------------------------------------------------------------
	  // # 시작로그
	  // ------------------------------------------------------------------------
	  logger.info("updateAdjustHistCplt Start");
	  int count= 0;
	  try {
		  count = sqlSession.update("adminAdjustMapper.updateAdjustHistCplt", excelParam);
	  }catch (Exception e) {
		  logger.error("updateAdjustHistCplt DB Error : " + e.toString());
		  throw new Exception(RspnsCnst.RC1000000004);
	  }
	  return count;
	}
	
	public int insertAdjustPaymntInfo(Map<String, Object> excelParam) throws Exception {
		// // ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("insertAdjustPaymntInfo Start");
		int count= 0;
		try {
			count = sqlSession.update("adminAdjustMapper.insertAdjustPaymntInfo", excelParam);
		}catch (Exception e) {
			logger.error("insertAdjustPaymntInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return count;
	}
	
	public int updateAdjustPaymntInfo(Map<String, Object> excelParam) throws Exception {
		// // ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("updateAdjustPaymntInfo Start");
		int count= 0;
		try {
			count = sqlSession.update("adminAdjustMapper.updateAdjustPaymntInfo", excelParam);
		}catch (Exception e) {
			logger.error("updateAdjustPaymntInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return count;
	}
	
	// 정산 배치
	public int insertAdjustLogForTr(Map<String, Object> ord_cd) throws Exception{
		return sqlSession.insert("adminAdjustMapper.insertAdjustLogForTr", ord_cd);
	}
	
	// 정산 배치
	public int insertAdjustTrInfo(Map<String, Object> ord_cd) throws Exception{
		return sqlSession.insert("adminAdjustMapper.insertAdjustTrInfo", ord_cd);
	}

}
