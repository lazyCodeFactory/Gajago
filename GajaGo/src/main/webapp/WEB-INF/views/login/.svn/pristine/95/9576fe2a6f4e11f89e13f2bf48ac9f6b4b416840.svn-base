/**
 * 
 */
package com.ssocio.sharing.dao.web;

import java.math.BigDecimal;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

/**
 * <pre>
 * Common Dao
 * 공통 처리 Dao
 * @author S.B.LEE
 * @version
 * @since 2015. 8. 14. 오후 6:34:53
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 8. 14.	|	SEOKBAE	|신규
 * @비고
 * </pre>
 */
@Component
public class WebMainEtcDao {
	private static final Logger logger = LoggerFactory.getLogger(WebMainEtcDao.class);
	
	@Resource(name="sqlSessionWeb")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	// 2.약관 동의(변경)			termsAgree TERMS_AGREE 		
	public List<Object> termsAgree(Map<String, Object> inParam) throws Exception{
		logger.info("inParam ::::::::: " + inParam);
		return this.sqlSession.selectList("webMainEtcMapper.termsAgree",inParam);
	}
	// 3.이용정지 안내			useingStop USEING_STOP 
	public Map<String, Object> useingStop(Map<String, Object> inParam) throws Exception{
		return this.sqlSession.selectOne("webMainEtcMapper.useingStop",inParam);
	}
	// 4.판매회원 가입 반려 안내 	sellerGuide SELLER_GUIDE
	public Map<String, Object> sellerGuide(Map<String, Object> inParam) throws Exception{
		return this.sqlSession.selectOne("webMainEtcMapper.sellerGuide",inParam);
	}
	public int countTermsAgree(Map<String, Object> inParam) throws Exception {
		logger.info("selectTermsAgree start");
		return this.sqlSession.selectOne("webMainEtcMapper.countTermsAgree",inParam);
	}
	/**
	 * 2-1.약정정보 등록 처리(저장)
	 */
	public Integer insertTermsAgree(Map<String, Object> inParam) {
		logger.debug("insertTermsAgree - inParam:"+inParam);
		return sqlSession.insert("webMainEtcMapper.insertTermsAgree",inParam);
	}
	/**
	 * 2-1.약정정보 수정 처리(저장)
	 */
	public Integer updateTermsAgree(Map<String, Object> inParam) {
		logger.debug("updateTermsAgree - inParam:"+inParam);
		return sqlSession.update("webMainEtcMapper.updateTermsAgree",inParam);
	}
	public Map<String, Object> useingStop2(Map<String, Object> inParam) throws Exception{
		return this.sqlSession.selectOne("webMainEtcMapper.useingStop2",inParam);
	}
}
