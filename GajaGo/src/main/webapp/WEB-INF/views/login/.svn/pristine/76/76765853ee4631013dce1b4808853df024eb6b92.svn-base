package com.ssocio.sharing.controller.admin;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.service.admin.AdminTelcomService;
import com.ssocio.sharing.vo.admin.AdminSession;


/**
 * <pre>
 * 통신사 관리를 위한 컨트롤러 
 * 통신사 관리를 위한 컨트롤러
 * @author J.S.LEE
 * @version
 * @since 2015. 7. 20. 오전 10:04:15
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 20.	|	S.B.LEE	|신규
 * @비고
 * </pre>
 */
@Controller
public class AdminTelcomController {
	
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminTelcomController.class);
	
	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private AdminTelcomService adminTelcomService;
	
	
	/**
	 * <pre>
	 * 통신사 정보 리스트 불러오기
	 * 통신사 정보 리스트 불러오기 
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 20. 오후 12:06:18
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/telcom/selectListTelcomInfo.do")
	public ModelAndView selectListOrder(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("SELECT ORDER LIST START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		AdminSession session = (AdminSession) request.getSession().getAttribute("manager");
		LoggerUtil.writeMap(inParam);
		
		try {
			mav.addObject("list", adminTelcomService.selectListTelcomInfo(inParam));
			mav.setViewName("admin/telcom/selectListTelcomInfo");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return mav;
	}

	
	/**
	 * <pre>
	 * 통신사 등록하기 
	 * 통신사 등록하기
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 20. 오후 12:06:43
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/telcom/insertTelcomReg.do")
	public ModelAndView insertTelcomReg(MultipartHttpServletRequest req, HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("SELECT ORDER LIST START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView("jsonView");
		LoggerUtil.writeMap(inParam);
		
		try {
			 adminTelcomService.insertTelcomReg(inParam,req);
//			mav.setViewName("admin/telcom/selectListTelcomInfo");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return mav;
	}
	
	
	@RequestMapping("/admin/telcom/updateTelcomReg.do")
	public ModelAndView updateTelcomReg(MultipartHttpServletRequest req, HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("SELECT ORDER LIST START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView("jsonView");
		LoggerUtil.writeMap(inParam);
		
		try {
			 adminTelcomService.updateTelcomReg(inParam,req);
//			mav.setViewName("admin/telcom/selectListTelcomInfo");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return mav;
	}
	
	/**
	 * <pre>
	 * 통신사 삭제 하기 
	 * 통신사 삭제 하기 
	 * @param req
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 9. 27. 오후 3:59:28
	 * @author LeeJinSe
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/telcom/deleteTelcomReg.do")
	public ModelAndView deleteTelcomReg(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("DELETE TELCOM REG START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView("jsonView");
		LoggerUtil.writeMap(inParam);
		
		try {
			mav.addObject("Cnt", adminTelcomService.deleteTelcomReg(inParam));
//			mav.setViewName("admin/telcom/selectListTelcomInfo");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return mav;
	}
	
}
