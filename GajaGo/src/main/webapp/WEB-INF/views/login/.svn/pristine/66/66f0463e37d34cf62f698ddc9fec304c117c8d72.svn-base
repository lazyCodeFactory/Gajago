package com.ssocio.sharing.dao.web;

import java.util.List;
import java.util.Map;
import javax.annotation.Resource;
import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.service.web.WebTestServiceImpl;

@Component
public class MobileMyBasketDao {
	private static final Logger logger = LoggerFactory.getLogger(WebTestServiceImpl.class);
	@Resource(name="sqlSessionMobile")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	/**
	 * 장바구니 > B-1.판매상품 옵션이 존재할때 
	 */
	public List<Map<String, Object>> getMySellList(Map<String, Object> inParam) {		
		return sqlSession.selectList("MobileMyBasketMapper.getMySellList",inParam);
	}
	
	/**
	 * 장바구니 > B.셰어링 상품
	 */
	public List<Map<String, Object>> getMySharingList(Map<String, Object> inParam) {		
		return sqlSession.selectList("MobileMyBasketMapper.getMySharingList",inParam);
	}
	/**
	 * 장바구니 > New View 출력 여부
	 */
	public int updateCartViewYn(Map<String, Object> inParam) {		
		return sqlSession.update("MobileMyBasketMapper.updateCartViewYn",inParam);
	}
	/**
	 * 장바구니 삭제
	 */
	public Integer deleteMyBasket(Map<String, Object> inParam) {
		logger.debug("장바구니 삭제 - deleteMyBasket:"+inParam);
		return sqlSession.delete("MobileMyBasketMapper.deleteMyBasket",inParam);
	}
	/**
	 * 장바구니 옵션 삭제
	 * 	- 상품코드, MBER_SEQ
	 */
	public int deleteMyBasketOpt(Map<String, Object> inParam) throws Exception{
		logger.debug("장바구니 옵션 삭제 - deleteMyBasketOpt:"+inParam);
		return this.sqlSession.delete("MobileMyBasketMapper.deleteMyBasketOpt", inParam);
	}
	/**
	 * 
	 * <pre>
	 * 설명 장바구니 상품 등록 및 수정
	 * 설명
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 20. 오후 3:39:22
	 * @author WOOK.KIM
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public int insertUpdateCart(Map<String, Object> inParam) throws Exception{
		return this.sqlSession.update("MobileMyBasketMapper.insertUpdateCart", inParam);
	}
	
	/**
	 * 
	 * <pre>
	 * 설명  장바구니 상품 옵션 등록 및 정
	 * 설명
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 20. 오후 4:05:21
	 * @author WOOK.KIM
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public int inserUpdateCartOpt(Map<String, Object> inParam) throws Exception{
		return this.sqlSession.update("MobileMyBasketMapper.insertUpdateCartOpt", inParam);
	}
	/**
	 *	장바구니 개수 조회 
	 */
	public int selectCountCart(int mberSeq) throws Exception{
		int reqInt = 0;
		try {
			reqInt = sqlSession.selectOne("MobileMyBasketMapper.selectCountCart", mberSeq);
		} catch (Exception e) {
			logger.error("selectGrpProdInfo DB Error : " + e.toString());
		}
		return reqInt;
	}
	
	/**
	 *	장바구니 옵션 개수 조회 
	 *		- 조건 : MBER_SEQ, PROD_CODE, OPT_CD
	 */
	public int selectCountCartOptAll(Map<String, Object> inParam) throws Exception{
		return this.sqlSession.selectOne("MobileMyBasketMapper.selectCountCartOptAll", inParam);
	}	
	/**
	 * 장바구니 옵션 삭제
	 * 	- 옵션, 상품코드, MBER_SEQ
	 */
	public int deleteCartOpt(Map<String, Object> inParam) throws Exception{
		logger.debug("장바구니 옵션 삭제 - deleteCartOpt:"+inParam);
		return this.sqlSession.delete("MobileMyBasketMapper.deleteCartOpt", inParam);
	}
	
	public int getMyBasketStockCnt(Map<String, Object> inParam) throws Exception{
		logger.debug("장바구니 재고 확인 - getMyBasketStockCnt:"+inParam);
		return this.sqlSession.selectOne("MobileMyBasketMapper.getMyBasketStockCnt", inParam);
	}
}
