package com.ssocio.sharing.controller.app;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.io.IOUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ssocio.sharing.cmmn.util.CmmnCnst;
import com.ssocio.sharing.service.web.AppEmailService;

@Controller
public class APPEmailController  {
	
	private static final Logger logger = LoggerFactory.getLogger(APPEmailController.class);

	
	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private AppEmailService appEmailService;


	@RequestMapping(value = "/app/check.do", method = RequestMethod.GET, produces=MediaType.IMAGE_JPEG_VALUE)
	public  @ResponseBody byte[] selectPlaninfo( @RequestParam Map<String, Object> inParam ) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("@@@@ /app/check.do		 IN @@@@@");
		

		byte[] b = {1};
			
		try{
			
			String no = (String) inParam.get("no");
			int ret = appEmailService.updateEmailRead(inParam);
			
			
			File f = new File(CmmnCnst.EML_CHK_PATH);
			
			try {
				InputStream in = new FileInputStream(f);
				try {
				b	= IOUtils.toByteArray(in);

				} finally {
					IOUtils.closeQuietly(in);
				}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			
			logger.info("☆★☆★☆★☆★☆★☆★no: "+no+": ret :"+ ret+"★☆★☆★☆★☆★☆★☆★☆★");
			logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		}catch (Exception e) {
			e.printStackTrace();
		}
		return b;
	}
	
	
}
