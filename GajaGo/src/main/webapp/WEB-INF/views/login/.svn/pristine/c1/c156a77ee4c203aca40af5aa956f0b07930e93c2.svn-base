package com.ssocio.sharing.vo.admin;

import org.json.simple.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public abstract class PlanContainer {
	private static final Logger logger = LoggerFactory.getLogger(PlanContainer.class);
	
	public static final int CONTAINER_TYPE_BANNER = 10;
	public static final int CONTAINER_TYPE_TPL_CARD = 20;
	public static final int CONTAINER_TYPE_TPL_SYMMETRY = 30;
	public static final int CONTAINER_TYPE_TPL_BANNER = 40;

	protected String planCd = "";
	
	//	json형식의 데이터 파싱시 int가 아닌 long으로 들어오면서 cannot cast가 되어서 long으로 선언.
	//	json 객체에 담겨지는 정보
	protected long sequence;	//	기획전별 일련번호(banner에서 imgSeq | content에서는 planSeq)
	protected int idx;
	protected int viewSeq;
	
	protected boolean isDel = false;
	protected boolean isNew = false;
	
	protected boolean isPreview = false;
	
	protected PlanContainer(){
		planCd = "";
		
		sequence = 0L;
		idx = 0;
		viewSeq = 0;
		
		isDel = false;
		isNew = false;
	}
	
	protected PlanContainer(JSONObject json){
		idx = (int)(long)json.get("id");
		isDel = (boolean)json.get("isDel");
		viewSeq = (int)(long)json.get("seq") + 1;
		isNew = (boolean)json.get("isNew");
		
		if( !isNew){
			this.sequence = Long.parseLong((String)json.get("imgSeq"));
		}
		else{
			this.sequence = 0L;
		}
	}
	
	public long getSequence() {
		return sequence;
	}

	public void setSequence(long imgSeq) {
		this.sequence = imgSeq;
	}
	
	public String getPlanCd() {
		return planCd;
	}

	public void setPlanCd(String planCd) {
		this.planCd = planCd;
	}

	public int getViewSeq() {
		return viewSeq;
	}

	public void setViewSeq(int viewSeq) {
		this.viewSeq = viewSeq;
	}

	public boolean isDel() {
		return isDel;
	}

	public void setDel(boolean isDel) {
		this.isDel = isDel;
	}

	public boolean isNew() {
		return isNew;
	}

	public void setNew(boolean isNew) {
		this.isNew = isNew;
	}

	public boolean isPreview() {
		return isPreview;
	}

	public void setPreview(boolean isPreview) {
		this.isPreview = isPreview;
	}

}
