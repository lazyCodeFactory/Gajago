package com.ssocio.sharing.controller.admin;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.service.admin.AdminSmsService;

/**
 * <pre>
 * 발송관리  Controller
 * 스마트폰 리스트 / 수정/ 삭제/ 등록 기능을 위한 Controller
 * @author guitarhyo
 * @version
 * @since 2015. 7. 13. 오후 
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 13	|	guitarhyo	|신규
 * @비고
 * </pre>
 */
@Controller
public class AdminSmsController extends AdminReferController {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminSmsController.class);
	
	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private AdminSmsService adminSmsService;


	
	/**
	 * <pre>
	 * > 메시지 발송 리스트
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/sms/selectListSms.do")
	public ModelAndView selectListSms(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN selectListSms START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		
		try {

			mav.addObject("list", adminSmsService.selectListSms(inParam));
			System.out.println(mav);
			mav.setViewName("admin/sms/selectListSms");
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN selectListSms END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}
	
	
	
	/**
	 * <pre>
	 * > 메시지 발송 상세 조회
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/sms/selectSms.do")
	public ModelAndView selectSms(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  selectSms  START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		
		try {
			ModelMap retMap = new ModelMap();	
			retMap = adminSmsService.selectSms(inParam);
			logger.debug(retMap.toString());
			mav.addObject("list", retMap);
//			String SND_STAT = (String) retMap.get("SND_STAT");
//			if("00".equals(SND_STAT)){//2015-07-20 서대운 팀장 요청으로 수정 페이지는 없음
			
//				mav.setViewName("admin/sms/updateSms");
//			}else{
//				mav.setViewName("admin/sms/selectSms");
//			}
			mav.setViewName("admin/sms/selectSms");
			System.out.println(mav);
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN selectSms END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}
	
	

	/**
	 * <pre>
	 * > 메시지 발송 등록 페이지
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/sms/insertSms.do")
	public ModelAndView insertSms(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  insertSms  START☆★☆★☆★☆★☆★☆★☆");

		ModelMap modelMap = new ModelMap();
		LoggerUtil.writeMap(inParam);
		
		try {

			if(inParam.get("MBER_EMAIL") != null && !"".equals(inParam.get("MBER_EMAIL"))){
				logger.debug(">>>>> MBER_EMAIL : "+inParam.get("MBER_EMAIL").toString());
				modelMap = adminSmsService.selectListSmsMberSearch(inParam);
				logger.debug(">>>>> modelMap : "+modelMap.toString());
			}
			modelMap.put("openDay", StringUtil.getDatewithGapCurrent("yyyy-MM-dd","DATE",1));
			logger.debug(modelMap.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN insertSms END☆★☆★☆★☆★☆★☆★☆");
		return  new ModelAndView("admin/sms/insertSms",modelMap);
	}
	
	
	/**
	 * <pre>
	 * > 메시지 발송 등록 페이지
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/sms/insertSmsReg.do")
	public @ResponseBody String insertSmsReg(MultipartHttpServletRequest req,HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  insertSmsReg  START☆★☆★☆★☆★☆★☆★☆");

		ModelMap modelMap = new ModelMap();
		LoggerUtil.writeMap(inParam);
		String retCode ="F";
		try {

			modelMap = adminSmsService.insertSmsReg(req,inParam);
			retCode = (String) modelMap.get("retCode");
			if(retCode == null){
				retCode ="F";
			}
			logger.debug(modelMap.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN insertSmsReg END☆★☆★☆★☆★☆★☆★☆");
		return retCode;
	}
	
	
	
	/**
	 * <pre>
	 * > 메시지 발송 취소 업데이트
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 20. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/sms/updateSms.do")
	public @ResponseBody String updateSms(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  updateSms  START☆★☆★☆★☆★☆★☆★☆");

		ModelMap modelMap = new ModelMap();
		LoggerUtil.writeMap(inParam);
		String retCode ="F";
		try {

			modelMap = adminSmsService.updateSms(inParam);
			retCode = (String) modelMap.get("retCode");
			if(retCode == null){
				retCode ="F";
			}
			logger.debug(modelMap.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN updateSms END☆★☆★☆★☆★☆★☆★☆");
		return retCode;
	}
	
	/**
	 * <pre>
	 * > 메시지 발송 등록 팝업 페이지
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 15. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/sms/insertSmsPopup.do")
	public ModelAndView insertSmsPop(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  insertSmsPop START☆★☆★☆★☆★☆★☆★☆");

		ModelMap modelMap = new ModelMap();
		LoggerUtil.writeMap(inParam);
		
		try {
			if(inParam.get("MBER_EMAIL")!=null && !"".equals(inParam.get("MBER_EMAIL"))){
				modelMap = adminSmsService.selectListSmsMberSearch(inParam);
				modelMap.put("MBER_EMAIL", inParam.get("MBER_EMAIL"));

			}
			
		logger.debug(modelMap.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN insertSmsPop END☆★☆★☆★☆★☆★☆★☆");
		return  new ModelAndView("admin/sms/insertSmsPopup",modelMap);
	}
	
	
	
	@RequestMapping("/admin/sms/uploadSmsExcel.do")
	public ModelAndView uploadProdExcel(MultipartHttpServletRequest req, @RequestParam Map<String, Object> inParam){
		ModelAndView mav = new ModelAndView("jsonView2");	    
	    try {
	    	mav.addObject("uploadResult",  adminSmsService.uploadSmsExcel(req,inParam));
	    	mav.addObject("error_code", "000");
	    } catch (Exception e) {
	      mav.addObject("error_code", "500");
	      mav.addObject("error_message", e.getMessage());
	    }	
	    return mav;
	}
	
	
}
