package com.ssocio.openmarket.common;

import java.util.Map;

import org.springframework.web.multipart.MultipartHttpServletRequest;

public class Util {

	public static int kParseInt(Object obj) {
		if (obj == null) {
			return 0;
		}
		String str = String.valueOf(obj);
		if (str == null || str.trim().equalsIgnoreCase("")) {
			return 0;
		}
		return Integer.parseInt(str);
	}

	public static int kParseInt(Object obj, int def) {
		if (obj == null) {
			return def;
		}
		String str = String.valueOf(obj);
		if (str == null || str.trim().equalsIgnoreCase("")) {
			return def;
		}
		return Integer.parseInt(str);
	}

	/**
	 * check required parameter
	 * 
	 * @param parameters
	 * @param map
	 * @return if required parameters are exist, return null. otherwise return
	 *         required parameter name.
	 * @throws Exception
	 */
	public static String checkRequiredParameters(String[] parameters, Map<String, Object> map) throws Exception {
		String key = null;
		try {
			for (int i = 0; i < parameters.length; i++) {
				Object obj = parameters[i];
				System.out.println("key : " + parameters[i] + ", value : " + map.get(parameters[i]) + ", type : " + obj.getClass().getName());
				if (!map.containsKey(parameters[i])) {
					key = parameters[i];
					break;
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
			throw e;
		}
		return key;
	}
	
	public static String checkRequiredImage(String[] imageParameters, MultipartHttpServletRequest request) throws Exception {
		String key = null;
		try {
			for (int i = 0; i < imageParameters.length; i++) {
				if ( request.getFile(imageParameters[i]) == null ) {
					key = imageParameters[i];
					break;
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
			throw e;
		}
		return key;
	}
	
}
