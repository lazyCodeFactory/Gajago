$(function() {
	// table
	if($('.commGroup .menuTbl tbody tr').length > 4){
		$('.commGroup .menuTbl tr:last-child td').css('border-bottom','0');
	}
	if($('.commCode .menuTbl tbody tr').length > 4){
		$('.commCode .menuTbl tr:last-child td').css('border-bottom','0');
	}

	// 정렬순서
	$('.count a').on('click', function(){
		var $in = $(this).parent().find("input");
		var value = parseInt($in.val());

		if($(this).hasClass('m') && value > 1)
			$in.val(value-1);
		else if($(this).hasClass('p'))
			$in.val(value+1);
	});

	// 레이어팝업 닫기
	$(".lay_pop .btn_close").click(function(){
		$(this).parents(".lay_pop").removeClass("on").css({"top":"50%","left":"50%"});
		return false;
	});
	
	// 레이어팝업 drag
	$.fn.drag = function(){
	var max_wd = $(document).width();
	var max_ht = $(document).height(); 
		$(this).find(".pop_header").mousedown(function(e){
			var pop_wd = $(this).parent(".lay_pop").width();
			var pop_ht = $(this).parent(".lay_pop").height();

			$(this).data("clickPointX" , e.pageX - $(this).offset().left)
			$(this).data("clickPointY" , e.pageY - $(this).offset().top);

			$(this).mousemove(function(e){
				var pop_top = e.pageY  - $(this).data("clickPointY");
				var pop_left = e.pageX  - $(this).data("clickPointX");
				if(pop_top <= 0){
					pop_top = 0;
				}else if(pop_top >= (max_ht-pop_ht)){
					pop_top = (max_ht-pop_ht)-2;
				}else if(pop_left <= 0){
					pop_left = 0;
				}else if(pop_left >= (max_wd-pop_wd)){
					pop_left = (max_wd-pop_wd)-2;
				};
				$(".lay_pop").css({zIndex:1000});
				$(this).parent(".lay_pop").css({
					top:pop_top,
					left:pop_left,
					zIndex:10000
				});
			}).mouseup(function(){
				$(".lay_pop").css({zIndex:1000});
				$(this).parent(".lay_pop").css({zIndex:10000});
				$(this).unbind("mousemove");
			});
		});
	};

	// 레이어팝업
	function message_popup(){
		var win_wd = $(window).width();
		var win_height = $(window).height();

		// 공통그룹코드 추가
		$(".btn_comm_group").click(function(){
			var wd = $(".pop_comm_group").width();
			var wh = $(".pop_comm_group").height();
			$(".pop_comm_group").css({"left":(win_wd - wd)/2,"top":(win_height - wh)/2}).addClass("on");
			return false;
		});
		
		// 공통코드 추가
		$(".btn_comm").click(function(){
			var wd = $(".pop_group").width();
			var wh = $(".pop_group").height();
			$(".pop_group").css({"left":(win_wd - wd)/2,"top":(win_height - wh)/2}).addClass("on");
			return false;
		});

		$(".lay_pop").drag();
	}message_popup();
});

/* ======================================================================
Function : 그룹코드 추가 팝업
Return   : 없음
========================================================================= */
function addGroup(){
	$('#GL_GROUP_CODE').val("");
	$('#GL_GROUP_CODE_NM').val("");
	$('#GL_USE_YN').val("Y");
	$('#GL_DC').val("");
	$('#GL_RM').val("");
	
	$('#GroupTitle').text("공통그룹코드 추가");
	$('#GL_GROUP_CODE').removeAttr("readonly");
	$('#commend').val("insert");
	$('#chkOverlap').show();
	$("#impossibleID").hide();
		$("#possibleID").hide();
	
	var win_wd = $(window).width();
	var win_height = $(window).height();
	
	var wd = $(".pop_comm_group").width();
	var wh = $(".pop_comm_group").height();
	$(".pop_comm_group").css({"left":(win_wd - wd)/2,"top":(win_height - wh)/2}).addClass("on");
}

/* ======================================================================
Function : 공통코드 리스트
Return   : 없음
========================================================================= */
$.selectRow = function (groupcode, groupcodeNm) {	
	$("#CL_GROUP_CODE").val(groupcode);
	$("#CL_GROUP_CODE_NM").text(groupcodeNm);
	var objTr = $(event.srcElement).parent().closest("tr");
	
	$(objTr).css("backgroundColor", "#e3e3e3e3");    //.selected라는 background-color 지정 class 세팅
	$(objTr).siblings().css("backgroundColor", "");    //클릭된 tr을 제외한 나머지 tr에서 class 제거
	
	$.ajax({
		type: 'post'
		, async: true
		, url: '/admin/code/selectListCodeGroup.do'
		, dataType:'json'
		, data:  {"S_GROUP_CODE":groupcode}
		, success: function(data) {
			$('#codeBody').html("");		      
			$.each(data.list, function(key,val) {
				var selectedY = '';
				var selectedN = '';
				if(val.USE_YN=="Y"){selectedY = "selected='selected'";}
				if(val.USE_YN=="N"){selectedN = "selected='selected'";}
				var code = "";
				code += "<tr id='SUB"+val.COM_CD+"'>";
				code += "  <td class='name'>"+val.COM_CD+"</td>";
				code += "  <td>"+val.COM_CD_NM+"</td>";
				code += "  <td>";
				code += "    <div class='count'>";
				code += "      <input type='text' id='SORT"+val.COM_CD+"' name='I_SORT_SEQ' value='"+val.SORT_SEQ+"' maxlength='2' style='width:40px;' readonly='readonly' />";
				code += "      <a href=\"javascript:updateCodeSort('"+groupcode+"','"+val.COM_CD+"','UP')\" class='p'><img src='/resources/admin/images/btn_up.gif' alt='' /></a>";
				code += "      <a href=\"javascript:updateCodeSort('"+groupcode+"','"+val.COM_CD+"','DOWN')\" class='m'><img src='/resources/admin/images/btn_down.gif' alt='' /></a>";
				code += "    </div>";
				code += "  </td>";
				code += "  <td>";
				code += "    <select name='I_USE_YN' id='I_USE_YN' style='width:50px;' onchange=\"updateCodeUseYn('"+groupcode+"','"+val.COM_CD+"', jQuery(this).val());\">";
				code += "      <option value='Y' "+selectedY+">Y</option>";
				code += "      <option value='N' "+selectedN+">N</option>";
				code += "    </select>";
				code += "  </td>";
				code += "  <td><a href=\"javascript:selectCode('"+groupcode+"', '"+val.COM_CD+"');\" class='btn_w'>수정</a></td>";
				code += "  <td><a href=\"javascript:deleteCode('"+groupcode+"', '"+val.COM_CD+"');\" class='btn_w'>삭제</a></td>";
				code += "</tr>";
				$('#codeBody').append(code);
			});
		}
		, error: function(data, status, err) {
			alert('서버와의 통신이 실패했습니다.');
		}
	});
};

/* ======================================================================
Function : 그룹코드 중복 체크
Return   : 없음
========================================================================= */
function chkOverlapGroupCode() {
	if($("#GL_GROUP_CODE").val()==''){
		alert('그룹코드를 입력해주세요.');
		return;
	}
	
	$.ajax({
		type: 'post'
		, async: true
		, url: '/admin/code/chkOverlapGroupCode.do'
		, dataType:'json'
		, data:  {"GL_GROUP_CODE":$('#GL_GROUP_CODE').val()}
		, success: function(data) {
			console.log(data.isOverlap);
			if(data.isOverlap){
				$("#impossibleID").show();
				$("#possibleID").hide();
			}else{
				$("#impossibleID").hide();
				$("#possibleID").show();
				chkOverlap=true;
			}
		}
		, error: function(data, status, err) {
			alert('서버와의 통신이 실패했습니다.');
		}
	});
}

/* ======================================================================
Function : 그룹코드  저장(등록/수정)
Return   : 없음
========================================================================= */
function saveGroupCode() {
	var url = '';
	
	if($('#GL_GROUP_CODE').val()==""){
		alert('그룹코드를 입력해주세요.');
		$("#GL_GROUP_CODE").focus();
		return;   
	}
	
	if($('#GL_GROUP_CODE_NM').val()==""){
		alert('그룹코드명을 입력해주세요.');
		$("#GL_GROUP_CODE_NM").focus();
		return;	  
	}
	
	if($('#commend').val()=="insert"){
		if(!chkOverlap){
			alert('중복확인을 해주세요.');
			$("#chkOverlap").focus();
			return;
		}
		url = '/admin/code/insertGroupCodeReg.do';  
	} else if($('#commend').val()=="update"){
		url = '/admin/code/updateGroupCodeReg.do';
	}
	
	$.ajax({
		type: 'post'
		, async: true
		, url: url
		, dataType:'json'
		, data:  $("#frmGroup").serialize()
		, success: function(data) {
			if ( data.CNT == 0 ) {
				alert('그룹코드 추가에 실패하였습니다.');
			} else {
				alert('저장 되었습니다.');
				location.reload();
			}
		}
		, error: function(data, status, err) {
			alert('서버와의 통신이 실패했습니다.');
		}
	});
}

/* ======================================================================
Function : 그룹코드 사용여부 수정
Return   : 없음
========================================================================= */
function updateGroupUseYn(group, use){
	$.ajax({
		type: 'post'
		, async: true
		, url: '/admin/code/updateGroupUseYn.do'
		, dataType:'json'
		, data:  {"I_GROUP_CODE":group, "I_USE_YN":use}
		, success: function(data) {
			alert('변경되었습니다.');
		}
		, error: function(data, status, err) {
			alert('서버와의 통신이 실패했습니다.');
		}
	});
}

/* ======================================================================
Function : 그룹코드 조회
Return   : 없음
========================================================================= */
function selectGroup(group){
	$.ajax({
		type: 'post'
		, async: true
		, url: '/admin/code/selectGroup.do'
		, dataType:'json'
		, data:  {"I_GROUP_CODE":group}
		, success: function(data) {
			var group = data.item;
			$('#GL_GROUP_CODE').val(group.GRP_CD);
			$('#GL_GROUP_CODE_NM').val(group.GRP_CD_NM);
			$('#GL_USE_YN').val(group.USE_YN);
			$('#GL_DC').val(group.DC);
			$('#GL_RM').val(group.RM);
			
			$('#GroupTitle').text("공통그룹코드 수정");
			$('#commend').val("update");
			$('#GL_GROUP_CODE').attr("readonly","readonly");
			$('#chkOverlap').hide();
			$("#impossibleID").hide();
			$("#possibleID").hide();
			
			var win_wd = $(window).width();
			var win_height = $(window).height();
			
			var wd = $(".pop_comm_group").width();
			var wh = $(".pop_comm_group").height();
			$(".pop_comm_group").css({"left":(win_wd - wd)/2,"top":(win_height - wh)/2}).addClass("on");
		}
		, error: function(data, status, err) {
			alert('서버와의 통신이 실패했습니다.');
		}
	});
}

/* ======================================================================
Function : 그룹코드 삭제
Return   : 없음
========================================================================= */
function deleteGroup(group){
	$.ajax({
		type: 'post'
		, async: true
		, url: '/admin/code/deleteGroupReg.do'
		, dataType:'json'
		, data:  {"I_GROUP_CODE":group}
		, beforeSend: function() {
			if(!confirm("한번 삭제된 코드는 복원이 불가합니다.\n정말 삭제하시겠습니까?")){
				return true;
			}
		}
		, success: function(data) {
			if ( data.CNT == 0 ) {
				alert('메뉴 삭제에 실패하였습니다.');
			} else {
				alert('삭제 되었습니다.');
				$("#"+group).remove();
			}
			
		}
		, error: function(data, status, err) {
			alert('서버와의 통신이 실패했습니다.');
		}
	});
}

/* ======================================================================
Function : 공통코드 추가 팝업
Return   : 없음
========================================================================= */
function addCode(){
	if($("#CL_GROUP_CODE").val()==''){
		alert('먼저 그룹코드를 선택해 주세요.');
		return;
	}
	
	$('#CL_CODE').val("");
	$('#CL_CODE_NM').val("");
	$('#CL_USE_YN').val("Y");
	$('#CL_DC').val("");
	$('#CL_RM').val("");
	
	$('#CodeTitle').text("공통코드 추가");
	$('#CL_CODE').removeAttr("readonly");
	$('#CL_commend').val("insert");
	$('#CL_chkOverlap').show();
	$("#CL_impossibleID").hide();
	$("#CL_possibleID").hide();
	
	var win_wd = $(window).width();
	var win_height = $(window).height();

	var wd = $(".pop_code").width();
	var wh = $(".pop_code").height();
	$(".pop_code").css({"left":(win_wd - wd)/2,"top":(win_height - wh)/2}).addClass("on");
}

/* ======================================================================
Function : 공통코드 중복 체크
Return   : 없음
========================================================================= */
function chkOverlapCode() {
	
	if($("#CL_CODE").val()==''){
		alert('공통코드를 입력해주세요.');
		return;
	}

	$.ajax({
		type: 'post'
		, async: true
		, url: '/admin/code/chkOverlapCode.do'
		, dataType:'json'
		, data:  {"CL_GROUP_CODE":$('#CL_GROUP_CODE').val(), "CL_CODE":$('#CL_CODE').val()}
		, success: function(data) {
			if(data.isOverlap){
				$("#CL_impossibleID").show();
				$("#CL_possibleID").hide();
			} else {
				$("#CL_impossibleID").hide();
				$("#CL_possibleID").show();
				CL_chkOverlap=true;
			}
		}
		, error: function(data, status, err) {
			alert('서버와의 통신이 실패했습니다.');
		}
	});
}

/* ======================================================================
Function : 공통코드  저장(등록/수정)
Return   : 없음
========================================================================= */
function saveCode(){
	var url = '';
	
	if($('#CL_CODE').val()==""){
		alert('공통코드를 입력해주세요.');
		$("#GL_GROUP_CODE").focus();
		return;   
	}
	if($('#CL_CODE_NM').val()==""){
		alert('공통코드명을 입력해주세요.');
		$("#GL_GROUP_CODE_NM").focus();
		return;   
	}
	
	if($('#CL_commend').val()=="insert"){
		if(!CL_chkOverlap){
			alert('중복확인을 해주세요.');
			$("#chkOverlap").focus();
			return;
		}
		url = '/admin/code/insertCodeReg.do';  
	} else if($('#CL_commend').val()=="update"){
		url = '/admin/code/updateCodeReg.do';
	}
	
	$.ajax({
		type: 'post'
		, async: true
		, url: url
		, dataType:'json'
		, data:  $("#frmCode").serialize()
		, success: function(data) {
			if ( data.CNT == 0 ) {
				alert('실패 하였습니다.');
			} else {
				// 빠른 서브메뉴 입력을 위하여 추가
				rtn = confirm("저장 되었습니다. 계속추가 하시겠습니까?")
				if (!rtn){
					$.selectRow($("#CL_GROUP_CODE").val(), $("#CL_GROUP_CODE_NM").text());
				} else {
					$("#CL_CODE_NM").focus();
				}
				
			}
		}
		, error: function(data, status, err) {
			alert('서버와의 통신이 실패했습니다.');
		}
	});
}

/* ======================================================================
Function : 공통코드 정렬순서 변경
Return   : 없음
========================================================================= */
function updateCodeSort(groupcode, code, direction){
	var $selectRow = $("#SUB"+code);
	
	$("#ajaxFrm").empty();
	$("#ajaxFrm").append("<input type='hidden' name='I_GROUP_CODE' value='"+groupcode+"'>");
	
	//정렬순서 위로
	if(direction=='UP'){
		var $prevRow = $selectRow.prev();
		console.log($prevRow.text());
		if($prevRow.text()==''){
			alert('이미 첫번째 정렬된 코드 입니다.');
		}else{
			var prevID = $prevRow.attr('id').substring(3);
			var selectVal = $("#SORT"+code).val();  //선된 row 정렬순서
			var prevVal = $("#SORT"+prevID).val();//이전 row 정렬순서
			
			$("#ajaxFrm").append("<input type='hidden' name='I_CODE' value='"+code+"'>");
			$("#ajaxFrm").append("<input type='hidden' name='I_CODE' value='"+$prevRow.attr('id').substring(3)+"'>");
			$("#ajaxFrm").append("<input type='hidden' name='I_SORT' value='"+prevVal+"'>");
			$("#ajaxFrm").append("<input type='hidden' name='I_SORT' value='"+selectVal+"'>");
			
			$.ajax({
				type: 'post'
				, async: true
				, url: '/admin/code/updateCodeSort.do'
				, data: $("#ajaxFrm").serialize()
				, beforeSend: function() {}
				, success: function(data) {
					if (data.CNT == 0) {
						alert('정렬순서를 변경에 실패하였습니다.');
					} else {
						//정렬순서 값 변경
						$("#SORT"+code).val(prevVal);
						$("#SORT"+prevID).val(selectVal);
						
						//tr위치 바꾸기
						$selectRow.insertBefore($prevRow);
						
						alert('정렬순서를 변경하였습니다.');
					}
				}
				, error: function(data, status, err) {
					alert('서버와의 통신이 실패했습니다.');
				}
			});
		}
	} else { //정렬순서 아래로
		var $nextRow = $selectRow.next();
		
		
		if($nextRow.text()==''){
			alert('이미 마지막 정렬된 코드 입니다.');
		}else{
			var nextID = $nextRow.attr('id').substring(3);
			var selectVal = $("#SORT"+code).val();
			var nextVal = $("#SORT"+nextID).val();
			
			$("#ajaxFrm").append("<input type='hidden' name='I_CODE' value='"+code+"'>");
			$("#ajaxFrm").append("<input type='hidden' name='I_CODE' value='"+$nextRow.attr('id').substring(3)+"'>");
			$("#ajaxFrm").append("<input type='hidden' name='I_SORT' value='"+nextVal+"'>");
			$("#ajaxFrm").append("<input type='hidden' name='I_SORT' value='"+selectVal+"'>");
			
			$.ajax({
				type: 'post'
				, async: true
				, url: '/admin/code/updateCodeSort.do'
				, data: $("#ajaxFrm").serialize()
				, beforeSend: function() {}
				, success: function(data) {
					if (data.CNT == 0) {
						alert('정렬순서를 변경에 실패하였습니다.');
					} else {
						//정렬순서 값 변경
						$("#SORT"+code).val(nextVal);
						$("#SORT"+nextID).val(selectVal);
						
						//tr위치 바꾸기
						$nextRow.insertBefore($selectRow);
						
						alert('정렬순서를 변경하였습니다.');
					}
					
				}
				, error: function(data, status, err) {
					alert('서버와의 통신이 실패했습니다.');
				}
			});
		}
	}
}

/* ======================================================================
Function : 공통코드 조회
Return   : 없음
========================================================================= */
function selectCode(group, code){
	$.ajax({
		type: 'post'
		, async: true
		, url: '/admin/code/selectCode.do'
		, dataType:'json'
		, data:  {"I_GROUP_CODE":group, "I_CODE":code}
		, success: function(data) {
			var val = data.item;
			$('#CL_CODE').val(val.COM_CD);
			$('#CL_CODE_NM').val(val.COM_CD_NM);
			$('#CL_USE_YN').val(val.USE_YN);
			$('#CL_DC').val(val.DC);
			$('#CL_RM').val(val.RM);
			$('#CL_CODE_VALUE').val(val.COM_CD_VAL);
			$('#CodeTitle').text("공통코드 수정");
			$('#CL_commend').val("update");
			$('#CL_CODE').attr("readonly","readonly");
			$('#CL_chkOverlap').hide();
			$("#CL_impossibleID").hide();
			$("#CL_possibleID").hide();
	
			var win_wd = $(window).width();
			var win_height = $(window).height();
			var wd = $(".pop_code").width();
			var wh = $(".pop_code").height();
			$(".pop_code").css({"left":(win_wd - wd)/2,"top":(win_height - wh)/2}).addClass("on");
		}
		, error: function(data, status, err) {
			alert('서버와의 통신이 실패했습니다.');
		}
	});
}

/* ======================================================================
Function : 공통코드 사용여부 수정
Return   : 없음
========================================================================= */
function updateCodeUseYn(group, code, use){
	$.ajax({
		type: 'post'
		, async: true
		, url: '/admin/code/updateCodeUseYn.do'
		, dataType:'json'
		, data:  {"I_GROUP_CODE":group, "I_CODE":code, "I_USE_YN":use}
		, success: function(data) {
			if ( data.CNT == 0) {
				alert('사용여부 변경에 실패하였습니다.');
			} else {
				alert('변경되었습니다.');
			}
		}
		, error: function(data, status, err) {
			alert('서버와의 통신이 실패했습니다.');
		}
	});
}

/* ======================================================================
Function : 공통코드 삭제
Return   : 없음
========================================================================= */
function deleteCode(group, code){
	$.ajax({
		type: 'post'
		, async: true
		, url: '/admin/code/deleteCodeReg.do'
		, dataType:'json'
		, data:  {"CL_GROUP_CODE":group, "CL_CODE":code}
		, beforeSend: function() {
			if(!confirm("한번 삭제된 코드는 복원이 불가합니다.\n정말 삭제하시겠습니까?")){
				return true;
			}
		}
		, success: function(data) {
			if ( data.CNT == 0 ) {
				alert('삭제 실패 되었습니다.');
			} else {
				alert('삭제 되었습니다.');
				$("#SUB"+code).remove();
			}
		}
		, error: function(data, status, err) {
			alert('서버와의 통신이 실패했습니다.');
		}
	});
}

/* ======================================================================
Function : 레이어 팝업 닫기
Return   : 없음
========================================================================= */
function closePopup(){
  $(".lay_pop").removeClass("on").css({"top":"50%","left":"50%"});
}

function hitEnterKey(e){
	  if(e.keyCode == 13){
		  saveCode();
	  }else{
	   e.keyCode == 0;
	  return;
	  }
	 } 