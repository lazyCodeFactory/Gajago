package com.ssocio.sharing.dao.web;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;

@Component
public class MobileSearchDao {
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(MobileSearchDao.class);
	

	private static final String SELECT_LIST_PROD = "mobileSearchMapper.selectListProd";
	private static final String SELECT_COUNT_PROD = "mobileSearchMapper.selectCountProd";
	private static final String SELECT_LIST_PROD_TYPE = "mobileSearchMapper.selectListProdType";
	private static final String SELECT_LIST_PROD_TYPE_ALL = "mobileSearchMapper.selectListProdTypeALL";
	private static final String SELECT_LIST_PROD_AUTO = "mobileSearchMapper.selectListAutoSearch";
	private static final String SELECT_LIST_PROD_ALL = "mobileSearchMapper.selectListProdALL";
	
	private static final String SELECT_LIST_CTRY_TYPE = "mobileSearchMapper.selectListCtryType";
	
	private static final String SELECT_LIST_HIT_KEYWORD = "mobileSearchMapper.selectListHitKeyword";
	private static final String UPDATE_HIT_KEYWORD = "mobileSearchMapper.updateHitKeyword";

	private static final String INSERT_WANT_PROD = "mobileSearchMapper.insertWantProd";
	
	private static final String SITE_DEFAULT_CTRY = "mobileSearchMapper.selectDefaultCtry";
	 
	
	// --------------------------------------------------------------------------
	// # sqlSession 설정
	//   -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
	//   -- 하나만 사용할 경우 @Autowired
	// --------------------------------------------------------------------------
	@Resource(name="sqlSessionWeb")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	
	public List<Map<String, Object>> selectListProdTypeALL(Map<String, Object> inParam) throws Exception{
		
		return this.sqlSession.selectList(SELECT_LIST_PROD_TYPE_ALL, inParam);
	}
	
	public List<Map<String, Object>> selectListCtryType(Map<String, Object> inParam) throws Exception{
		return this.sqlSession.selectList(SELECT_LIST_CTRY_TYPE, inParam);
	}
	
	public List<Map<String, Object>> selectListProdType(Map<String, Object> inParam) throws Exception{
		return this.sqlSession.selectList(SELECT_LIST_PROD_TYPE, inParam);
	}
	
	public int selectCountProd(Map<String, Object> inParam) throws Exception{
		return this.sqlSession.selectOne(SELECT_COUNT_PROD, inParam);
	}
	
	
	public List<Map<String, Object>> selectListProd(Map<String, Object> inParam) throws Exception{
		inParam.put("ORDER_KIND", StringUtil.nvl((String)inParam.get("ORDER_KIND"), "POPULAR"));
		LoggerUtil.writeMap(inParam);
		return this.sqlSession.selectList(SELECT_LIST_PROD, inParam);
	}
	
	public List<Map<String, Object>> selectListProdAll(Map<String, Object> inParam) throws Exception{
		return this.sqlSession.selectList(SELECT_LIST_PROD_ALL, inParam);
	}
	

	public List<String> selectListAutoSearch(String searchNm) throws Exception{
		return this.sqlSession.selectList(SELECT_LIST_PROD_AUTO, searchNm);
	}
	
	
	public int updateHitKeyword(Map<String, Object> inParam) throws Exception{
		return this.sqlSession.update(UPDATE_HIT_KEYWORD, inParam);
	}
	 
	public List<Map<String, Object>>  selectListHitKeyword() throws Exception{
		return this.sqlSession.selectList(SELECT_LIST_HIT_KEYWORD);
	}
	
	public int insertWantProd(Map<String, Object> inParam) throws Exception{
		return this.sqlSession.insert(INSERT_WANT_PROD, inParam);
	}
	
	public String  selectDefaultCtry() throws Exception{
		return this.sqlSession.selectOne(SITE_DEFAULT_CTRY);
	}
	
//	------------------------------------------------------------------
	
}
