/**
 * 
 */
package com.ssocio.sharing.dao.web;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.web.RspnsCnst;
import com.ssocio.sharing.vo.web.realPrc;

/**
 * <pre>
 * 스마트폰 셰어링
 * 스마트폰 셰어링 Dao
 * @author S.B.LEE
 * @version
 * @since 2015. 8. 19. 오후 2:53:28
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 8. 19.	|	SEOKBAE	|신규
 * @비고
 * </pre>
 */
@Component
public class WebSmartPhoneDao {
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(WebSmartPhoneDao.class);
	
	// --------------------------------------------------------------------------
	// # sqlSession 설정
	//   -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
	//   -- 하나만 사용할 경우 @Autowired
	// --------------------------------------------------------------------------
	@Resource(name="sqlSessionWeb")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 리스트
	 * 스마트폰 셰어링 상품 리스트 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 19. 오후 2:59:39
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public List<Map<String, Object>> selectListShar(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListShar Start");
		List<Map<String, Object>> outParam = new ArrayList<Map<String,Object>>();
		try {
			outParam = sqlSession.selectList("webSmartPhoneMapper.selectListShar", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 리스트
	 * 스마트폰 셰어링 리스트 총 카운트 수 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 20. 오후 3:57:33
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public int selectListSharCount(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListSharCount Start");
		int outParam = 0;
		try {
			outParam =  sqlSession.selectOne("webSmartPhoneMapper.selectListSharCount", inParam);
		} catch (Exception e) {
			logger.error("selectListSharCount DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링
	 * 스마트폰 셰어링 통산지 리스트 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 20. 오후 5:18:28
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public List<Map<String, Object>> selectListTelcom(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListTelcom Start");
		List<Map<String, Object>> outParam = new ArrayList<Map<String,Object>>();
		try {
			outParam =  sqlSession.selectList("webSmartPhoneMapper.selectListTelcom", inParam);
		} catch (Exception e) {
			logger.error("selectListTelcom DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 상품 상세
	 * 스마트폰 세어링 상품 상세 이미지 리스트 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 27. 오후 3:00:49
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public List<Map<String, Object>> selectSharProdImg(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSharProdImg Start");
		List<Map<String, Object>> outParam = new ArrayList<Map<String,Object>>();
		try {
			outParam = sqlSession.selectList("webSmartPhoneMapper.selectSharProdImg", inParam);
		} catch (Exception e) {
			logger.error("selectSharProdImg DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 상품 상세
	 * 상품 정보 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 28. 오후 4:14:58
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public Map<String, Object> selectSharDtl(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSharDtl Start");
		Map<String, Object> outParam = new HashMap<String, Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectSharDtl", inParam);
		} catch (Exception e) {
			logger.error("selectSharDtl DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 상품 상세
	 * 상품 후기 갯수 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 28. 오후 4:16:52
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public int selectEpilogueCnt(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectEpilogueCnt Start");
		int outParam = 0;
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectEpilogueCnt", inParam);
		} catch (Exception e) {
			logger.error("selectEpilogueCnt DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 상품 상세 조회
	 * 상품 후기 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 28. 오후 4:17:12
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public List<Map<String, Object>> selectEpilogue(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectEpilogue Start");
		List<Map<String, Object>> outParam = new ArrayList<Map<String,Object>>();
		try {
			outParam = sqlSession.selectList("webSmartPhoneMapper.selectEpilogue", inParam);
		} catch (Exception e) {
			logger.error("selectEpilogue DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 상품 상세
	 * 댓글 갯수 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 28. 오후 4:16:52
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public int selectCommentCnt(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectCommentCnt Start");
		int outParam = 0;
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectCommentCnt", inParam);
		} catch (Exception e) {
			logger.error("selectCommentCnt DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 상품 상세 조회
	 * 댓글 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 28. 오후 4:17:12
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public List<Map<String, Object>> selectComment(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectComment Start");
		List<Map<String, Object>> outParam = new ArrayList<Map<String,Object>>();
		try {
			outParam = sqlSession.selectList("webSmartPhoneMapper.selectComment", inParam);
		} catch (Exception e) {
			logger.error("selectComment DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 주문 상품 정보
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 4. 오후 1:15:31
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public Map<String, Object> selectSharPordInfo(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSharPordInfo Start");
		Map<String, Object> outParam = new HashMap<String,Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectSharPordInfo", inParam);
		} catch (Exception e) {
			logger.error("selectSharPordInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 중고폰 매입
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 8. 오후 11:19:13
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public int insertTokenId(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("insertTokenId Start");
		int outParam = 0;
		try {
			outParam = sqlSession.insert("webSmartPhoneMapper.insertTokenId", inParam);
		} catch (Exception e) {
			logger.error("insertTokenId DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	public Map<String, Object> selectUpUserInfo(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectUpUserInfo Start");
		Map<String, Object> outParam = new HashMap<String, Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectUpUserInfo", inParam);
		} catch (Exception e) {
			logger.error("insertTokenId DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	public List<Map<String, Object>> selectOlivarInfo(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectOlivarInfo Start");
		List<Map<String, Object>> outParam = new ArrayList<Map<String,Object>>();
		try {
			outParam = sqlSession.selectList("webSmartPhoneMapper.selectOlivarInfo", inParam);
		} catch (Exception e) {
			logger.error("selectOlivarInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 신청
	 * 스마트폰 요금 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 1. 오후 10:31:31
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public Map<String, Object> selectCharge(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectCharge Start");
		Map<String, Object> outParam = new HashMap<String, Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectCharge", inParam);
		} catch (Exception e) {
			logger.error("selectCharge DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 신청 정보
	 * 색상리스트 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 1. 오후 1:36:02
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public List<Map<String, Object>> selectSpColor(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSpColor Start");
		List<Map<String, Object>> outParam = new ArrayList<Map<String,Object>>();
		try {
			outParam = sqlSession.selectList("webSmartPhoneMapper.selectSpColor", inParam);
		} catch (Exception e) {
			logger.error("selectSpColor DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 신청 정보
	 * 약정기간 리스트 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 1. 오후 2:42:27
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public List<Map<String, Object>> selectSpStip(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSpStip Start");
		List<Map<String, Object>> outParam = new ArrayList<Map<String,Object>>();
		try {
			outParam = sqlSession.selectList("webSmartPhoneMapper.selectSpStip", inParam);
		} catch (Exception e) {
			logger.error("selectSpStip DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 신청 정보
	 * 요금제 리스트 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 1. 오후 2:55:34
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public List<Map<String, Object>> selectSpPayplan(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSpPayplan Start");
		List<Map<String, Object>> outParam = new ArrayList<Map<String,Object>>();
		try {
			outParam = sqlSession.selectList("webSmartPhoneMapper.selectSpPayplan", inParam);
		} catch (Exception e) {
			logger.error("selectSpPayplan DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 신청
	 * 스마트폰 셰어링 지원금 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 14. 오후 10:53:30
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public Map<String, Object> selectSpSup(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSpSup Start");
		Map<String, Object> outParam = new HashMap<String,Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectSpSup", inParam);
		} catch (Exception e) {
			logger.error("selectSpSup DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 중고폰 매입 (올리바) 가능 여부
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 11. 오전 1:40:25
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public Map<String, Object> selectOlivarYn(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectOlivarYn Start");
		Map<String, Object> outParam = new HashMap<String,Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectOlivarYn", inParam);
		} catch (Exception e) {
			logger.error("selectOlivarYn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 본인인증 여부 확인
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 8. 오후 2:52:30
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public Map<String, Object> selectMberInfo(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectMberInfo Start");
		Map<String, Object> outParam = new HashMap<String,Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectMberInfo", inParam);
		} catch (Exception e) {
			logger.error("selectMberInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 주문번호 조회
	 * 스마트폰 셰어링 주문 번호 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 1. 오전 1:53:04
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public String selectOrdInfoSeq(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectOrdInfoSeq Start");
		String outParam = "";
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectOrdInfoSeq", inParam);
		} catch (Exception e) {
			logger.error("selectOrdInfoSeq DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 신청
	 * 스마트폰 셰어링 신청하기
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 16. 오후 4:04:07
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public int insertSharingOrder(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("insertSharingOrder Start");
		int outParam = 0;
		try {
			outParam = sqlSession.insert("webSmartPhoneMapper.insertSharingOrder", inParam);
		} catch (Exception e) {
			logger.error("insertSharingOrder DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	public int insertSharingOrdDtl(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("insertSharingOrdDtl Start");
		int outParam = 0;
		try {
			outParam = sqlSession.insert("webSmartPhoneMapper.insertSharingOrdDtl", inParam);
		} catch (Exception e) {
			logger.error("insertSharingOrdDtl DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 신청
	 * 스마트폰 셰어링 결제정보
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 15. 오후 9:01:35
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public int insertSharSetlInfo(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("insertSharSetlInfo Start");
		int outParam = 0;
		try {
			outParam = sqlSession.insert("webSmartPhoneMapper.insertSharSetlInfo", inParam);
		} catch (Exception e) {
			logger.error("insertSharSetlInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	public int insertOrdDlvInfo(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("insertOrdDlvInfo Start");
		int outParam = 0;
		try {
			outParam = sqlSession.insert("webCtryMapper.insertOrdDlvInfo", inParam);
		} catch (Exception e) {
			logger.error("insertOrdDlvInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	public int updateMberInfo(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("updateMberInfo Start");
		int outParam = 0;
		try {
			outParam = sqlSession.update("webSmartPhoneMapper.updateMberInfo", inParam);
		} catch (Exception e) {
			logger.error("updateMberInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링
	 * 신청완료
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 8. 오후 9:44:07
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public Map<String, Object> selectComAppli(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectComAppli Start");
		Map<String, Object> outParam = new HashMap<String,Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectComAppli", inParam);
		} catch (Exception e) {
			logger.error("selectComAppli DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	public Map<String, Object> selectOlivarUrl(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectOlivarUrl Start");
		Map<String, Object> outParam = new HashMap<String,Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectOlivarUrl", inParam);
		} catch (Exception e) {
			logger.error("selectOlivarUrl DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	public Map<String, Object> selectOlPrce(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectOlPrce Start");
		Map<String, Object> outParam = new HashMap<String,Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectOlPrce", inParam);
		} catch (Exception e) {
			logger.error("selectOlPrce DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 주문 내역 개수
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 2. 오후 2:03:40
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public int selectSharOrdInfoCnt(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSharOrdInfoCnt Start");
		int outParam = 0;
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectSharOrdInfoCnt", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}	
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 주문 내역 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 2. 오후 2:00:04
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public List<Map<String, Object>> selectSharOrdInfo(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSharOrdInfo Start");
		List<Map<String, Object>> outParam = new ArrayList<Map<String,Object>>();
		try {
			outParam = sqlSession.selectList("webSmartPhoneMapper.selectSharOrdInfo", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 주문 내역 개수
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 2. 오후 2:03:40
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public int selectSharOrdInfoChgCnt(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSharOrdInfoCnt Start");
		int outParam = 0;
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectSharOrdInfoChgCnt", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}	
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 주문 내역 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 2. 오후 2:00:04
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public List<Map<String, Object>> selectSharTermiOrdInfo(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSharTermiOrdInfo Start");
		List<Map<String, Object>> outParam = new ArrayList<Map<String,Object>>();
		try {
			outParam = sqlSession.selectList("webSmartPhoneMapper.selectSharTermiOrdInfo", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 주문 내역 개수
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 2. 오후 2:03:40
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public int selectSharTermiOrdInfoCnt(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSharTermiOrdInfoCnt Start");
		int outParam = 0;
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectSharTermiOrdInfoCnt", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}	
	
	
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 주문 내역 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 2. 오후 2:00:04
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public List<Map<String, Object>> selectSharOrdChgInfo(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSharOrdInfo Start");
		List<Map<String, Object>> outParam = new ArrayList<Map<String,Object>>();
		try {
			outParam = sqlSession.selectList("webSmartPhoneMapper.selectSharOrdChgInfo", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 주문 내역 상세
	 * 주문 내역 상세 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 2. 오후 8:02:51
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public Map<String, Object> selectSharOrdDtl(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSharOrdDtl Start");
		Map<String, Object> outParam = new HashMap<String, Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectSharOrdDtl", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링
	 * 스마트폰 셰어링 셰어링 확정
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 16. 오후 4:05:40
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public int updateSharDate(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSharOrdDtl Start");
		int outParam = 0;
		try {
			outParam = sqlSession.update("webSmartPhoneMapper.updateSharDate", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 교환 
	 * 스마트폰 셰어링 교환 상세
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 17. 오후 8:14:02
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public Map<String, Object> selectSharChgDtl(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSharChgDtl Start");
		Map<String, Object> outParam = new HashMap<String,Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectSharChgDtl", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 주문취소 상품 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 2. 오후 2:00:04
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public List<Map<String, Object>> selectSharOrdCanProd(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSharOrdCanProd Start");
		List<Map<String, Object>> outParam = new ArrayList<Map<String,Object>>();
		try {
			outParam = sqlSession.selectList("webSmartPhoneMapper.selectSharOrdDtl", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 주문취소사유
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 2. 오후 8:02:51
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public Map<String, Object> selectSharCanlDtl(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSharCanlDtl Start");
		Map<String, Object> outParam = new HashMap<String, Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectSharCanlDtl", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 해지 리스트
	 * 스마트폰 셰어링 해지 상세 정보 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 14. 오전 11:30:38
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public Map<String, Object> selectSharTermiProdDtl(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectSharTermiProdDtl Start");
		Map<String, Object> outParam = new HashMap<String,Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectSharTermiProdDtl", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 해지 신청
	 * 스마트폰 세어링 해지자 정보 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 13. 오후 6:52:08
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public Map<String, Object> selectTermiInfo(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectTermiInfo Start");
		Map<String, Object> outParam = new HashMap<String,Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectTermiInfo", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 해지
	 * 스마트폰 셰어링 해지 등록
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 13. 오후 8:01:30
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public int insertSharTermi(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("insertSharTermi Start");
		int outParam = 0;
		try {
			outParam = sqlSession.insert("webSmartPhoneMapper.insertSharTermi", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 스마트폰 셰어링 해지
	 * 스마트폰 셰어링 해지 등록
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 9. 13. 오후 8:01:48
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public int updateSharOrd(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("updateSharOrd Start");
		int outParam = 0;
		try {
			outParam = sqlSession.update("webSmartPhoneMapper.updateSharOrd", inParam);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return outParam;
	}
	
	
	public String selectsiteIFUrl() throws Exception {
		return sqlSession.selectOne("webSmartPhoneMapper.selectsiteIFUrl");
	}

	
	public int selectSharPayProdCount(Map<String, Object> inParam) {
		return sqlSession.selectOne("webSmartPhoneMapper.selectSharPayProdCount",inParam);
	}
	
	public List<Map<Object,String>> selectSharPayProd(Map<String, Object> inParam) {
		return sqlSession.selectList("webSmartPhoneMapper.selectSharPayProd",inParam);
	}

	public int selectSharUseCnt(Map<String, Object> inParam) throws Exception{
		return sqlSession.selectOne("webSmartPhoneMapper.selectSharUseCnt",inParam);
	}

	public int CheckSharWaitCnt(Map<String, Object> inParam) {
		return sqlSession.selectOne("webSmartPhoneMapper.CheckSharWaitCnt",inParam);
	}

	public Map<String, Object> selectOrdShipProdInfo(Map<String, Object> inParam) throws Exception {
		return sqlSession.selectOne("webSmartPhoneMapper.selectOrdShipProdInfo",inParam);
	}

	public int getAge(int MBER_SEQ) throws Exception  {
		return sqlSession.selectOne("webSmartPhoneMapper.getAge",MBER_SEQ);
	}

	public Map<String, Object> selectBillCancelKey(Map<String, Object> inParam)  throws Exception {
		return sqlSession.selectOne("webSmartPhoneMapper.selectBillCancelKey",inParam);
	}


	public int insertOrderCancel(Map<String, Object> inParam) throws Exception {
		return sqlSession.insert("webSmartPhoneMapper.insOrdcancel", inParam);
	}

	public int updateOrdProdInfoReg(Map<String, Object> inParam)  throws Exception {
		return sqlSession.update("webSmartPhoneMapper.updateOrdProdInfoReg", inParam);
	}

	public int insertCancelSeltInfo(Map<String, Object> inParam)  throws Exception {
		return sqlSession.insert("webSmartPhoneMapper.insertCancelSeltInfo", inParam);
	}

	public Map<String, Object> selectOrdDlvinfo(Map<String, Object> paramDto)  throws Exception {
		return sqlSession.selectOne("webSmartPhoneMapper.selectOrdDlvinfo",paramDto);
	}
	
	public String selectMobileSmartOrderCancelOrdcd(String ORD_CD) throws Exception {
		return sqlSession.selectOne("webSmartPhoneMapper.selectMobileSmartOrderCancelOrdcd",ORD_CD);
	}

	public  Map<String, Object> selectSharingRealPrce(Map<String, Object> inParam)  throws Exception {
		return sqlSession.selectOne("webSmartPhoneMapper.selectSharingRealPrce",inParam);
	}

	public Map<String, Object> selectOlivarSumPrceInfo(Map<String, Object> inParam)  throws Exception {
		return sqlSession.selectOne("webSmartPhoneMapper.selectOlivarSumPrceInfo",inParam);
	}

	public Object selectRetUrl(Map<String, Object> inParam) throws Exception {
		return sqlSession.selectOne("webSmartPhoneMapper.selectRetUrl");
	}

	public int insertPaytbProc(Map<String, Object> inParam)  throws Exception {
		return sqlSession.insert("webSmartPhoneMapper.insertPaytbProc", inParam);
	}

	public String selectChgChkCnt(Map<String, Object> inParam) throws Exception {
		return sqlSession.selectOne("webSmartPhoneMapper.selectChgChkCnt",inParam);
	}


	/**
	 * <pre>
	 * 스마트폰 셰어링 이용내역
	 * 스마트폰 셰어링 이용내역 상태 카운트
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 12. 16
	 * @author Y.S.KIM
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public Map<String, Object> selectSmartPoneSharUsingCount(Map<String, Object> inParam) throws Exception {
		logger.info("selectSmartPoneSharUsingCount Start");
		Map<String, Object> outParam = new HashMap<String, Object>();
		try {
			outParam = sqlSession.selectOne("webSmartPhoneMapper.selectSmartPoneSharUsingCount",inParam);
		} catch (Exception e) {
			logger.error("selectComment DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}

	public int inserthisTbreg(Map<String, Object> inParam) {
		return sqlSession.insert("webSmartPhoneMapper.inserthisTbreg", inParam);
	}

	/**
	 * <pre>
	 * 회수지 정보 가져오기 
	 * 회수지 정보 가져오기 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 12. 29. 오후 6:13:13
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.web
	 * </pre>
	 */
	public Map<String, Object> selectSharRtnDlvInfo(Map<String, Object> inParam) throws Exception {
		return sqlSession.selectOne("webSmartPhoneMapper.selectSharRtnDlvInfo",inParam);
	}

	
}
