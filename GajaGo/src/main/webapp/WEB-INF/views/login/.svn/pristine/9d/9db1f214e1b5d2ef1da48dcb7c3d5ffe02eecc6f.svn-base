package com.ssocio.sharing.dao.admin;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.springframework.ui.ModelMap;

import com.ssocio.sharing.cmmn.web.RspnsCnst;


/**
 * <pre>
 * 스마트폰 쉐어링 주문관리 DAO
 * 스마트폰 쉐어링 주문관리 DAO
 * @author J.S.LEE
 * @version
 * @since 2015. 7. 21. 오후 7:22:01
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 21.	|	S.B.LEE	|신규
 * @비고
 * </pre>
 */
@Component
public class AdminSharingOrderDao {
	// --------------------------------------------------------------------------
		// # Log 설정
		// --------------------------------------------------------------------------
		private static final Logger logger = LoggerFactory.getLogger(AdminSharingOrderDao.class);
		
		@Resource(name="sqlSessionAdmin")
		private SqlSession sqlSession;

		public void setSqlSession(SqlSession sqlSession) {
			this.sqlSession = sqlSession;
		}

		public int selectListOrderProdCount(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.updateSortSeq Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.selectOne("adminSharingOrderMapper.selectListOrderProdCount", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public Object selectListOrderProd(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSharingOrderMapper.selectListOrderProd",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}

		public Object spprod_order_total()  throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			Map<String, Object> list = null;
			try {
				list =  sqlSession.selectOne("adminSharingOrderMapper.spprod_order_total");
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}

		public int selectListChgProdCount(Map<String, Object> inParam)  throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.updateSortSeq Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.selectOne("adminSharingOrderMapper.selectListChgProdCount", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public Object selectListChgProd(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSharingOrderMapper.selectListChgProd",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}

		/**
		 * <pre>
		 * 
		 * 
		 * @param inParam
		 * @return
		 * @exception
		 * @date 2015. 7. 23. 오후 5:22:24
		 * @author LeeJinSe
		 * @see com.ssocio.sharing.dao.admin
		 * @비고
		 * 
		 * </pre>
		*/
		public List<Map<String, Object>> selectListTermiProd(Map<String, Object> inParam)  throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSharingOrderMapper.selectListTermiProd",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}

		public int selectListTermiProdCount(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.updateSortSeq Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.selectOne("adminSharingOrderMapper.selectListTermiProdCount", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public Object selectOrderDtl(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.updateSortSeq Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.selectOne("adminSharingOrderMapper.selectOrderDtl", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public Object selectWaitProdCnt(Map<String, Object> inParam)  throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.updateSortSeq Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.selectOne("adminSharingOrderMapper.selectWaitProdCnt", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public Object searchUniqueNo(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSharingOrderMapper.searchUniqueNo",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}


		public int updateShprodTBreg(Map<String, Object> inParam)  throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("updateShprodTBreg.updateSortSeq Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.insert("adminSharingOrderMapper.updateShprodTBreg", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}


		public Object selectOrdinfo(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.updateSortSeq Start");
			Map<String, Object> outParam = new HashMap<String, Object>();
			try {
				outParam =  sqlSession.selectOne("adminSharingOrderMapper.selectOrdinfo", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public int updateOrdProdInfoTBreg(Map<String, Object> inParam)  throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.updateSortSeq Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.update("adminSharingOrderMapper.updateOrdProdInfoTBreg", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public int updateDlvinfoTBreg(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.updateSortSeq Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.update("adminSharingOrderMapper.updateDlvinfoTBreg", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public int updatePOpenDtlTBreg(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.updateSortSeq Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.update("adminSharingOrderMapper.updatePOpenDtlTBreg", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public int updateINvcInfolTBreg(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.updateSortSeq Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.update("adminSharingOrderMapper.updateINvcInfolTBreg", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public int updateShPreprodTBreg(Map<String, Object> inParam)  throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.updateSortSeq Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.update("adminSharingOrderMapper.updateShPreprodTBreg", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public int updateChgShprodTBreg(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.updateSortSeq Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.update("adminSharingOrderMapper.updateChgShprodTBreg", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public Object selectOrderinfo(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.selectOrderinfo Start");
			Map<String, Object> outParam = new HashMap<String, Object>();
			try {
				outParam =  sqlSession.selectOne("adminSharingOrderMapper.selectOrderinfo", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public Object selectCrtnDlvinfo(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.selectCrtnDlvinfo Start");
			Map<String, Object> outParam = new HashMap<String, Object>();
			try {
				outParam =  sqlSession.selectOne("adminSharingOrderMapper.selectCrtnDlvinfo", inParam);
			} catch (Exception e) {
				logger.error("selectCrtnDlvinfo DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public Object selectApplyInfoList(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.selectOrderinfo Start");
			List<HashMap<String, Object>> outParam = new ArrayList<HashMap<String, Object>>();
			try {
				outParam =  sqlSession.selectList("adminSharingOrderMapper.selectApplyInfoList", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public Object selectApplyInfoTotalList(Map<String, Object> inParam)  throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.selectOrderinfo Start");
			List<HashMap<String, Object>> outParam = new ArrayList<HashMap<String, Object>>();
			try {
				outParam =  sqlSession.selectList("adminSharingOrderMapper.selectApplyInfoTotalList", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

//		public int updateChgProcReg(Map<String, Object> inParam)  throws Exception{
//			// ------------------------------------------------------------------------
//			// # 시작로그
//			// ------------------------------------------------------------------------
//			logger.info("adminMenuMapper.updateSortSeq Start");
//			int outParam = 0;
//			try {
//				outParam =  sqlSession.update("adminSharingOrderMapper.updateChgProcReg", inParam);
//			} catch (Exception e) {
//				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
//				throw new Exception(RspnsCnst.RC1000000004);
//			}
//			return outParam;
//		}

		public int insertOrderHisTBReg(Map<String, Object> inParam)  throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.insertOrderHisTBReg Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.insert("adminSharingOrderMapper.insertOrderHisTBReg", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public int updateChgDlvInfocReg(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.updateSortSeq Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.update("adminSharingOrderMapper.updateChgDlvInfocReg", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

	

		public Object selectChgDlvinfo(Map<String, Object> inParam)throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.selectOrderinfo Start");
			Map<String, Object> outParam = new HashMap<String, Object>();
			try {
				outParam =  sqlSession.selectOne("adminSharingOrderMapper.selectChgDlvinfo", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public Integer updateChgInvcInfocReg(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.updateChgInvcInfocReg Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.update("adminSharingOrderMapper.updateChgInvcInfocReg", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public Object getOrderListExcelDownload(Map<String, Object> inParam)  throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSharingOrderMapper.getOrderListExcelDownload",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}

		public Object ChgOrderexcelDownload(Map<String, Object> inParam)  throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSharingOrderMapper.ChgOrderexcelDownload",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}

		public Object selectListCancelProd(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSharingOrderMapper.selectListCancelProd",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}

		public int deleteOrdInfo(Map<String, Object> inParam)throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			int Cnt = 0;
			try {
				Cnt =  sqlSession.update("adminSharingOrderMapper.deleteOrdInfo",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return Cnt;
		}

		public Map<String, Object> selecthChkUniqueno(Map<String, Object> inParam)throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.selectOrderinfo Start");
			Map<String, Object> outParam = new HashMap<String, Object>();
			try {
				outParam =  sqlSession.selectOne("adminSharingOrderMapper.selecthChkUniqueno", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public int deleteOrdProdInfo(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			int Cnt = 0;
			try {
				Cnt =  sqlSession.update("adminSharingOrderMapper.deleteOrdProdInfo",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return Cnt;
		}

		public Integer updateTermiInfo(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			int Cnt = 0;
			try {
				Cnt =  sqlSession.update("adminSharingOrderMapper.updateTermiInfo",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return Cnt;
		}

		public Object selectTermiInfo(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.selectOrderinfo Start");
			Map<String, Object> outParam = new HashMap<String, Object>();
			try {
				outParam =  sqlSession.selectOne("adminSharingOrderMapper.selectTermiInfo", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public int selectListCancelProdCount(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.selectListCancelProdCount Start");
			int outParam = 0;
			try {
				outParam =  sqlSession.selectOne("adminSharingOrderMapper.selectListCancelProdCount", inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		public int insertOrdCncl(Map<String, Object> inParam)throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			int Cnt = 0;
			try {
				Cnt =  sqlSession.insert("adminSharingOrderMapper.insertOrdCncl",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return Cnt;
		}

		public List<Map<String, Object>>  selectListUsedSmartPhone(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSharingOrderMapper.selectListUsedSmartPhone",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}


		public int insertUpdateRtnDlvinfo(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("insertUpdateRtnDlvinfo Start");
			int Cnt = 0;
				Cnt =  sqlSession.update("adminSharingOrderMapper.insertUpdateRtnDlvinfo",inParam);
			return Cnt;
		}

		public 	Map<String, Object>  RtnDlvInfo(Map<String, Object> inParam)  throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.RtnDlvInfo Start");
			Map<String, Object> outParam = new HashMap<String, Object>();
				outParam =  sqlSession.selectOne("adminSharingOrderMapper.RtnDlvInfo", inParam);
			return outParam;
		}

	

		public Integer updateChgProdInfoTBcReg(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("adminMenuMapper.updateChgProdInfoTBcReg Start");
			return sqlSession.update("adminSharingOrderMapper.updateChgProdInfoTBcReg", inParam);
		}

		public Object getTermiOrderListExcelDownload(Map<String, Object> inParam) throws Exception{
			return sqlSession.selectList("adminSharingOrderMapper.getTermiOrderListExcelDownload",inParam);
		}

		public Object selectApplyInfoTermiTotalList(Map<String, Object> inParam) {
			return sqlSession.selectList("adminSharingOrderMapper.selectApplyInfoTermiTotalList",inParam);
		}

		public int updateOrdMemoReg(Map<String, Object> inParam) {
			return sqlSession.update("adminSharingOrderMapper.updateOrdMemoReg", inParam);
		}

		public int insertUpdateRtnInvcInfo(Map<String, Object> inParam)  throws Exception{
			return sqlSession.update("adminSharingOrderMapper.insertUpdateRtnInvcInfo", inParam);
		}


		public Object selectListRelDlvInfo() throws Exception{
			return sqlSession.selectList("adminSharingOrderMapper.selectListRelDlvInfo");
		}

		public Integer chgupdatePOpenDtlTBreg(Map<String, Object> inParam) {
			return sqlSession.update("adminSharingOrderMapper.chgupdatePOpenDtlTBreg", inParam);
		}

		public int ChgupdateOrdMemoReg(Map<String, Object> inParam) {
			return sqlSession.update("adminSharingOrderMapper.ChgupdateOrdMemoReg", inParam);
		}

		public int termiupdateOrdMemoReg(Map<String, Object> inParam) {
			return sqlSession.update("adminSharingOrderMapper.termiupdateOrdMemoReg", inParam);
		}

		public String selectdlvlinkinfo() throws Exception {
			return sqlSession.selectOne("adminSharingOrderMapper.selectdlvlinkinfo");
		}

		public Map<String,Object> selectBillCancelKey(Map<String, Object> inParam) throws Exception {
			return sqlSession.selectOne("adminSharingOrderMapper.selectBillCancelKey",inParam);
		}

		public int insertCancelSeltInfo(Map<String, Object> inParam) {
			return sqlSession.insert("adminSharingOrderMapper.insertCancelSeltInfo",inParam);
		}

		/**
		 * <pre>
		 * 스마트폰 셰어링 결재내역
		 * 스마트폰 셰어링 주문정보
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 12. 21
		 * @author Y.S.KIM
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public Map<String, Object> selectSharPayInfo(Map<String, Object> inParam) {
			return sqlSession.selectOne("adminSharingOrderMapper.selectSharPayInfo",inParam);
		}
		
		/**
		 * <pre>
		 * 스마트폰 셰어링 결재내역
		 * 스마트폰 셰어링 결재내역 리스트 카운트
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 12. 18
		 * @author Y.S.KIM
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public int selectListSharPayCount(Map<String, Object> inParam) {
			return sqlSession.selectOne("adminSharingOrderMapper.selectListSharPayCount",inParam);
		}
		
		/**
		 * <pre>
		 * 스마트폰 셰어링 결재내역
		 * 스마트폰 셰어링 결재내역 리스트 내역을 조회합니다.
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 12. 18
		 * @author Y.S.KIM
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public List<Map<String, Object>> selectListSharPay(Map<String, Object> inParam) {
			return sqlSession.selectList("adminSharingOrderMapper.selectListSharPay",inParam);
		}
		
		/**
		 * <pre>
		 * 스마트폰 셰어링 결재내역
		 * 스마트폰 셰어링 결재내역 히스토리 내역을 조회합니다.
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 12. 21
		 * @author Y.S.KIM
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public List<Map<String, Object>> selectListSharPayHist(Map<String, Object> inParam) {
			return sqlSession.selectList("adminSharingOrderMapper.selectListSharPayHist",inParam);
		}
		
		/**
		 * <pre>
		 * 결제 내역 조회 
		 * 결제 내역 조회 엑셀다운로드
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 12. 21
		 * @author Y.S.KIM
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public Object selectListSharPayExcelDownload(Map<String, Object> inParam)  throws Exception{
			logger.info("selectListSharPayExcelDownload Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSharingOrderMapper.selectListSharPayExcelDownload",inParam);
			} catch (Exception e) {
				logger.error("selectListSharPayExcelDownload DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}

		public Map<String, Object> searchDlvInfo(Map<String, Object> inParam) {
			return sqlSession.selectOne("adminSharingOrderMapper.searchDlvInfo",inParam);
		}

		public Object selectApplyChgInfoTotalList(Map<String, Object> inParam) {
			return sqlSession.selectList("adminSharingOrderMapper.selectApplyChgInfoTotalList",inParam);
		}

		public Object selectUserPayPopup(Map<String, Object> inParam) {
			return sqlSession.selectList("adminSharingOrderMapper.selectUserPayPopup",inParam);
		}

		public void insertSPpayTbReg(Map<String, Object> inParam)throws Exception {
			String pay_ymd = (String) inParam.get("OPEN_DAY");
			inParam.put("PROC_OPEN_DAY", pay_ymd.replaceAll("-", ""));
			logger.info("inParam :::::::::::::::::::::::::::::::::::::::" + inParam.toString());
			sqlSession.selectOne("adminSharingOrderMapper.insertSPpayTbReg", inParam);
		}

		public Integer updateRtnShPreprodTBreg(Map<String, Object> inParam) {
			return sqlSession.update("adminSharingOrderMapper.updateRtnShPreprodTBreg", inParam);
		}

		public int UpdateRtnDlvinfo(Map<String, Object> inParam) {
			return sqlSession.update("adminSharingOrderMapper.UpdateRtnDlvinfo", inParam);
		}
		
		public Integer insertUpdateChgTbInfo(Map<String, Object> inParam) {
			return sqlSession.update("adminSharingOrderMapper.insertUpdateChgTbInfo", inParam);
		}

		public int UpdateChgTbinfo(Map<String, Object> inParam) {
			return sqlSession.update("adminSharingOrderMapper.UpdateChgTbinfo", inParam);
		}
		
		/**
		 * <pre>
		 * 스마트폰 셰어링 해지 
		 * TERMI_INFO update
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 12. 22
		 * @author Y.S.KIM
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public int updateForTermiInfo(Map<String, Object> inParam) throws Exception{
			logger.info("adminSharingOrderMapper.updateForTermiInfo Start");
			int outParam = 0;
			try {
				outParam = sqlSession.update("adminSharingOrderMapper.updateForTermiInfo", inParam);
			} catch (Exception e) {
				logger.error("updateForTermiInfo DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}
		
		/**
		 * <pre>
		 * 스마트폰 셰어링 해지 
		 * ORD_PROD_INFO update
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 12. 22
		 * @author Y.S.KIM
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public int updateForOrdProdInfo(Map<String, Object> inParam) throws Exception{
			logger.info("adminSharingOrderMapper.updateForOrdProdInfo Start");
			int outParam = 0;
			try {
				outParam = sqlSession.update("adminSharingOrderMapper.updateForOrdProdInfo", inParam);
			} catch (Exception e) {
				logger.error("updateForOrdProdInfo DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}
		
		/**
		 * <pre>
		 * 스마트폰 셰어링 해지 
		 * CHG_RTN_PROC_INFO insert
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 12. 22
		 * @author Y.S.KIM
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public int insertChgRtnProcInfo(Map<String, Object> inParam) throws Exception{
			logger.info("adminSharingOrderMapper.insertChgRtnProcInfo Start");
			int outParam = 0;
			try {
				outParam = sqlSession.insert("adminSharingOrderMapper.insertChgRtnProcInfo", inParam);
			} catch (Exception e) {
				logger.error("insertChgRtnProcInfo DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}
		
		/**
		 * <pre>
		 * 스마트폰 셰어링 해지 
		 * CHG_PROD_INFO insert
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 12. 22
		 * @author Y.S.KIM
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public int insertChgProdInfo(Map<String, Object> inParam) throws Exception{
			logger.info("adminSharingOrderMapper.insertChgProdInfo Start");
			int outParam = 0;
			try {
				outParam = sqlSession.insert("adminSharingOrderMapper.insertChgProdInfo", inParam);
			} catch (Exception e) {
				logger.error("insertChgProdInfo DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}
		
		/**
		 * <pre>
		 * 스마트폰 셰어링 해지 
		 * CHG_RTN_PROC_INFO update
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 12. 22
		 * @author Y.S.KIM
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public int updateChgRtnProcInfo(Map<String, Object> inParam) throws Exception{
			logger.info("adminSharingOrderMapper.updateChgRtnProcInfo Start");
			int outParam = 0;
			try {
				outParam = sqlSession.update("adminSharingOrderMapper.updateChgRtnProcInfo", inParam);
			} catch (Exception e) {
				logger.error("updateChgRtnProcInfo DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}
		
		/**
		 * <pre>
		 * 스마트폰 셰어링 해지 
		 * CHG_PROD_INFO update
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 12. 22
		 * @author Y.S.KIM
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public int updateChgProdInfo(Map<String, Object> inParam) throws Exception{
			logger.info("adminSharingOrderMapper.updateChgProdInfo Start");
			int outParam = 0;
			try {
				outParam = sqlSession.update("adminSharingOrderMapper.updateChgProdInfo", inParam);
			} catch (Exception e) {
				logger.error("updateChgProdInfo DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}
		
		/**
		 * <pre>
		 * 스마트폰 셰어링 해지 
		 * SP_SH_PROD update
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 12. 22
		 * @author Y.S.KIM
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public int updateSpShProd(Map<String, Object> inParam) throws Exception{
			logger.info("adminSharingOrderMapper.updateSpShProd Start");
			int outParam = 0;
			try {
				outParam = sqlSession.update("adminSharingOrderMapper.updateSpShProd", inParam);
			} catch (Exception e) {
				logger.error("updateSpShProd DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}

		/**
		 * <pre>
		 * 스마트폰 셰어링 해지 
		 * CHG_CD 획득
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 12. 22
		 * @author Y.S.KIM
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public String maxChgCd() throws Exception{
			String outParam = "X";
			try {
				outParam = sqlSession.selectOne("adminSharingOrderMapper.maxChgCd");
			} catch (Exception e) {
				logger.error("maxChgCd DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}
		
		/**
		 * <pre>
		 * 스마트폰 셰어링 해지 
		 * 해지상품 배송지 주소 및 CHG_CD 획득
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @date 2015. 12. 22
		 * @author Y.S.KIM
		 * @see com.ssocio.sharing.dao.admin
		 * </pre>
		 */
		public Object selectChgRtnProcInfo(Map<String, Object> inParam) throws Exception{
			logger.info("adminSharingOrderMapper.selectChgRtnProcInfo Start");
			Map<String, Object> outParam = new HashMap<String, Object>();
			try {
				outParam =  sqlSession.selectOne("adminSharingOrderMapper.selectChgRtnProcInfo", inParam);
			} catch (Exception e) {
				logger.error("selectChgRtnProcInfo DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return outParam;
		}
		
}
