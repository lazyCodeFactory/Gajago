package com.ssocio.sharing.controller.admin;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.service.admin.AdminPushService;

/**
 * <pre>
 * 발송관리  Controller
 * 스마트폰 리스트 / 수정/ 삭제/ 등록 기능을 위한 Controller
 * @author guitarhyo
 * @version
 * @since 2015. 7. 13. 오후 
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 13	|	guitarhyo	|신규
 * @비고
 * </pre>
 */
@Controller
public class AdminPushController extends AdminReferController {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminPushController.class);
	
	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private AdminPushService adminPushService;


	
	
	
	
	/**
	 * <pre>
	 * > PUSH 발송 리스트
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/push/selectListPush.do")
	public ModelAndView selectListPush(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN selectListPush START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		
		try {
			ModelMap retMap = new ModelMap();	
			retMap = adminPushService.selectListPush(inParam);
			logger.debug(retMap.toString());
			mav.addObject("list", retMap);
			mav.setViewName("admin/push/selectListPush");
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN selectListPush END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}
	
	
	/**
	 * <pre>
	 * > PUSH 등록 페이지
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/push/insertPush.do")
	public ModelAndView insertPush(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN insertPush START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView();
//		LoggerUtil.writeMap(inParam);
		
		try {
			int cnt = adminPushService.selectListPushMberCnt(inParam);
			mav.addObject("mberTotalCnt",cnt);
			mav.addObject("openDay", StringUtil.getDatewithGapCurrent("yyyy-MM-dd","DATE",1));
			mav.setViewName("admin/push/insertPush");
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN insertPush END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}
	
	
	
	/**
	 * <pre>
	 * > 이메일 발송 리스트
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/push/insertPushReg.do")
	public @ResponseBody String insertPushReg(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN insertPushReg START☆★☆★☆★☆★☆★☆★☆");
		LoggerUtil.writeMap(inParam);
		
		ModelMap modelMap = new ModelMap();
		String retCode ="F";
		try {

			modelMap = adminPushService.insertPushReg(inParam);
			retCode = (String) modelMap.get("retCode");
			if(retCode == null){
				retCode ="F";
			}
			logger.debug(modelMap.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN insertPushReg END☆★☆★☆★☆★☆★☆★☆");
		return retCode;
	}
	
	
	/**
	 * <pre>
	 * > 메시지 발송 상세 페이지
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 15. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/push/selectPush.do")
	public ModelAndView selectPush(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  selectPush START☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		ModelMap modelMap = new ModelMap();
		
		try {
			
				modelMap = adminPushService.selectPush(inParam);
				
				mav.addObject("list", modelMap);	
				mav.setViewName("admin/push/selectPush");
			
		logger.debug(modelMap.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN selectPush END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}
	
	
	
	/**
	 * <pre>
	 * > 메시지 발송 상세 페이지
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 15. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/push/updatePush.do")
	public @ResponseBody String updatePush(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  updatePush  START☆★☆★☆★☆★☆★☆★☆");

		ModelMap modelMap = new ModelMap();
		LoggerUtil.writeMap(inParam);
		String retCode ="F";
		try {

			modelMap = adminPushService.updatePush(inParam);
			retCode = (String) modelMap.get("retCode");
			if(retCode == null){
				retCode ="F";
			}
			logger.debug(modelMap.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN updatePush END☆★☆★☆★☆★☆★☆★☆");
		return retCode;
	}
	
	
	@RequestMapping("/admin/push/uploadPushExcel.do")
	public ModelAndView uploadProdExcel(MultipartHttpServletRequest req, @RequestParam Map<String, Object> inParam){
		ModelAndView mav = new ModelAndView("jsonView2");	    
	    try {
	    	mav.addObject("uploadResult",  adminPushService.uploadPushExcel(req,inParam));
	    	mav.addObject("error_code", "000");
	    } catch (Exception e) {
	      mav.addObject("error_code", "500");
	      mav.addObject("error_message", e.getMessage());
	    }	
	    return mav;
	}
	
}
