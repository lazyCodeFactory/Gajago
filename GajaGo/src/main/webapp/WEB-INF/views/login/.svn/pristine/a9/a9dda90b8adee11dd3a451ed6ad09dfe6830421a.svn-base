package com.ssocio.sharing.controller.admin;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.service.admin.AdminEmailService;

/**
 * <pre>
 * 발송관리  Controller
 * 스마트폰 리스트 / 수정/ 삭제/ 등록 기능을 위한 Controller
 * @author guitarhyo
 * @version
 * @since 2015. 7. 13. 오후 
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 13	|	guitarhyo	|신규
 * @비고
 * </pre>
 */
@Controller
public class AdminEmailController extends AdminReferController {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminEmailController.class);
	
	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private AdminEmailService adminEmailService;


	/**
	 * <pre>
	 * > 이메일 발송 리스트
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/email/selectListEmail.do")
	public ModelAndView selectListEmail(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN selectListEmail START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		
		try {
			ModelMap retMap = new ModelMap();	
			retMap = adminEmailService.selectListEmail(inParam);
			logger.debug(retMap.toString());
			mav.addObject("list", retMap);
			mav.setViewName("admin/email/selectListEmail");
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN selectListEmail END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}
	
	
	
	/**
	 * <pre>
	 * > 이메일 발송 등록페이지
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 21. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/email/insertEmail.do")
	public ModelAndView insertEmail(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN insertEmail START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView();
//		LoggerUtil.writeMap(inParam);
		
		try {

			if(inParam.get("MBER_EMAIL") != null && !"".equals(inParam.get("MBER_EMAIL"))){
				logger.debug(">>>>> MBER_EMAIL : "+inParam.get("MBER_EMAIL").toString());
				mav.addObject("mberEmail",adminEmailService.selectListEmailMberSearch(inParam));
			}
			mav.addObject("openDay", StringUtil.getDatewithGapCurrent("yyyy-MM-dd","DATE",1));

			mav.setViewName("admin/email/insertEmail");
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN selectListEmail END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}
	
	
	/**
	 * <pre>
	 * > 이메일 발송 리스트
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/email/insertEmailReg.do")
	public @ResponseBody String insertEmailReg(MultipartHttpServletRequest req,HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN insertEmailReg START☆★☆★☆★☆★☆★☆★☆\n\n\n\n");
		LoggerUtil.writeMap(inParam);
		
		ModelMap modelMap = new ModelMap();
		String retCode ="F";
		try {

			modelMap = adminEmailService.insertEmailReg(req,inParam);
			retCode = (String) modelMap.get("retCode");
			if(retCode == null){
				retCode ="F";
			}
			logger.debug(modelMap.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN selectListEmail END☆★☆★☆★☆★☆★☆★☆");
		return retCode;
	}
	
	
	
	/**
	 * <pre>
	 * > 메시지 발송 등록 팝업 페이지
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 15. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/email/insertEmailPopup.do")
	public ModelAndView insertEmailPopup(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  insertEmailPopup START☆★☆★☆★☆★☆★☆★☆");

		ModelMap modelMap = new ModelMap();
		LoggerUtil.writeMap(inParam);
		
		try {
			if(inParam.get("MBER_EMAIL")!=null && !"".equals(inParam.get("MBER_EMAIL"))){
				modelMap = adminEmailService.selectListEmailMberSearch(inParam);
				modelMap.put("MBER_EMAIL", inParam.get("MBER_EMAIL"));

			}
			
		logger.debug(modelMap.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN insertEmailPopup END☆★☆★☆★☆★☆★☆★☆");
		return  new ModelAndView("admin/email/insertEmailPopup",modelMap);
	}
	
	
	
	/**
	 * <pre>
	 * > 메시지 발송 상세 페이지
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 15. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/email/selectEmail.do")
	public ModelAndView selectEmail(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  selectEmail START☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		ModelMap modelMap = new ModelMap();
		
		try {
			
				modelMap = adminEmailService.selectEmail(inParam);
				
				mav.addObject("list", modelMap);	
				mav.setViewName("admin/email/selectEmail");
			
		logger.debug(modelMap.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN selectEmail END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}
	
	
	/**
	 * <pre>
	 * > 메시지 발송 상세 페이지
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 15. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/email/updateEmail.do")
	public @ResponseBody String updateEmail(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  updateEmail  START☆★☆★☆★☆★☆★☆★☆");

		ModelMap modelMap = new ModelMap();
		LoggerUtil.writeMap(inParam);
		String retCode ="F";
		try {

			modelMap = adminEmailService.updateEmail(inParam);
			retCode = (String) modelMap.get("retCode");
			if(retCode == null){
				retCode ="F";
			}
			logger.debug(modelMap.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN updateEmail END☆★☆★☆★☆★☆★☆★☆");
		return retCode;
	}
	
	@RequestMapping("/admin/email/uploadEmailExcel.do")
	public ModelAndView uploadProdExcel(MultipartHttpServletRequest req, @RequestParam Map<String, Object> inParam){
		ModelAndView mav = new ModelAndView("jsonView2");	    
	    try {
	    	mav.addObject("uploadResult",  adminEmailService.uploadEmailExcel(req,inParam));
	    	mav.addObject("error_code", "000");
	    } catch (Exception e) {
	      mav.addObject("error_code", "500");
	      mav.addObject("error_message", e.getMessage());
	    }	
	    return mav;
	}
	
}
