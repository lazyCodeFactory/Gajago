package com.ssocio.sharing.controller.seller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.service.seller.SellerAdjustService;
import com.ssocio.sharing.vo.seller.SellerSession;

/**
 * <pre>
 * 콩통 컨트롤러
 * 콩통 처리를 위한 컨트롤러
 * @author J.K.CHOI
 * @version
 * @since 	2015. 7. 21. 오후 7:18:35
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 21.	|	J.K.CHOI	|신규
 * @비고
 * </pre>
 */
@Controller
public class SellerAdjustController {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(SellerQAAdviceController.class);
	
	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private SellerAdjustService sellerAdjustService;
	
	/**
	 * 정산완료 전체정산
	 */
	@RequestMapping("/seller/adjust/selectCpltAdjust.do")
	public ModelAndView selectCpltListAdjust(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);  
		String viewName = "seller/adjust/selectCpltAdjust";
		SellerSession session = (SellerSession) request.getSession().getAttribute("sellerManager");
		inParam.put("MBER_SEQ", session.getMBER_SEQ());
		logger.info(">>>>>>>>>>>>>>>> MBER_SEQ : " + session.getMBER_SEQ());
		try {
			mav.addObject("cpltAdj", sellerAdjustService.selectCpltAdjust(inParam));		
			mav.addObject("params", inParam); 
			
			mav.setViewName(viewName);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	/**
	 * 정산완료 판매정산
	 */
	@RequestMapping("/seller/adjust/selectCpltSellAdjust.do")
	public ModelAndView selectCpltSellAdjust(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);  
		String viewName = "seller/adjust/selectCpltSellAdjust";
		SellerSession session = (SellerSession) request.getSession().getAttribute("sellerManager");
		inParam.put("MBER_SEQ", session.getMBER_SEQ());
		try {
			mav.addObject("cpltSellAdj", sellerAdjustService.selectCpltSellAdjust(inParam));		
			mav.addObject("params", inParam); 
			
			mav.setViewName(viewName);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	/**
	 * 정산완료 셰어링정산
	 */
	@RequestMapping("/seller/adjust/selectCpltShareAdjust.do")
	public ModelAndView selectCpltShareAdjust(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);  
		String viewName = "seller/adjust/selectCpltShareAdjust";
		SellerSession session = (SellerSession) request.getSession().getAttribute("sellerManager");
		inParam.put("MBER_SEQ", session.getMBER_SEQ());
		try {
			mav.addObject("cpltShareAdj", sellerAdjustService.selectCpltShareAdjust(inParam));		
			mav.addObject("params", inParam); 
			
			mav.setViewName(viewName);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * <pre>
	 * 정산완료 판매정산 상세 리스트 조회
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.seller
	 * </pre>
	 */
	@RequestMapping("/seller/adjust/selectCpltDtlListSellAdjust.do")
	public ModelAndView selectCpltDtlListSellAdjust(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("selectCpltDtlListSellAdjust START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		SellerSession session = (SellerSession) request.getSession().getAttribute("sellerManager");
		inParam.put("MBER_SEQ", session.getMBER_SEQ());
		try {
			logger.debug(">>>>> inParam : "+inParam.toString());
			mav.addObject("list", sellerAdjustService.selectCpltDtlListSellAdjust(inParam));			
			mav.addObject("params", inParam);
			mav.setViewName("seller/adjust/selectCpltDtlListSellAdjust");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * <pre>
	 * 정산완료 셰어링정산 상세 리스트 조회
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.seller
	 * </pre>
	 */
	@RequestMapping("/seller/adjust/selectCpltDtlListShareAdjust.do")
	public ModelAndView selectCpltDtlListShareAdjust(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("selectCpltDtlListShareAdjust START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		SellerSession session = (SellerSession) request.getSession().getAttribute("sellerManager");
		inParam.put("MBER_SEQ", session.getMBER_SEQ());
		try {
			logger.debug(">>>>> inParam : "+inParam.toString());
			mav.addObject("list", sellerAdjustService.selectCpltDtlListShareAdjust(inParam));			
			mav.addObject("params", inParam);
			mav.setViewName("seller/adjust/selectCpltDtlListShareAdjust");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * 정산대기
	 */
	@RequestMapping("/seller/adjust/selectAdjust.do")
	public ModelAndView selectAdjust(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam ) throws Exception {
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);  
		String viewName = "seller/adjust/selectAdjust";
		SellerSession session = (SellerSession) request.getSession().getAttribute("sellerManager");
		inParam.put("MBER_SEQ", session.getMBER_SEQ());
		logger.info(">>>>>>>>>>>>>>>> MBER_SEQ : " + session.getMBER_SEQ());
		try {
			mav.addObject("adj", sellerAdjustService.selectAdjust(inParam));		
			mav.addObject("params", inParam); 
			
			mav.setViewName(viewName);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * <pre>
	 * 정산대기 판매정산 리스트 조회
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.seller
	 * </pre>
	 */
	@RequestMapping("/seller/adjust/selectSellAdjust.do")
	public ModelAndView selectSellAdjust(HttpServletRequest request, 
			HttpServletResponse response, 
			@RequestParam Map<String, Object> inParam
			) throws Exception{
		ModelAndView mav = new ModelAndView();
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("selectSellAdjust START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		SellerSession session = (SellerSession) request.getSession().getAttribute("sellerManager");
		inParam.put("MBER_SEQ", session.getMBER_SEQ());
		logger.info(">>>>>>>>>>>>>>>> MBER_SEQ : " + session.getMBER_SEQ());
		
		try {
			mav.addObject("selladj", sellerAdjustService.selectSellAdjust(inParam));
			mav.addObject("params", inParam); 
			mav.setViewName("seller/adjust/selectSellAdjust");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * <pre>
	 * 정산대기 셰어링정산 리스트 조회
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.seller
	 * </pre>
	 */
	@RequestMapping("/seller/adjust/selectShareAdjust.do")
	public ModelAndView selectShareAdjust(HttpServletRequest request, 
			HttpServletResponse response, 
			@RequestParam Map<String, Object> inParam
			) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("selectShareAdjust START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		SellerSession session = (SellerSession) request.getSession().getAttribute("sellerManager");
		inParam.put("MBER_SEQ", session.getMBER_SEQ());
		logger.info(">>>>>>>>>>>>>>>> MBER_SEQ : " + session.getMBER_SEQ());
		
		try {
			mav.addObject("shareAdj", sellerAdjustService.selectShareAdjust(inParam));	
			mav.addObject("params", inParam); 
			mav.setViewName("seller/adjust/selectShareAdjust");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	/**
	 * <pre>
	 * 정산대기 판매정산 상세 리스트 조회
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/seller/adjust/selectDtlListSellAdjust.do")
	public ModelAndView selectDtlListSellAdjust(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("selectDtlListSellAdjust START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		SellerSession session = (SellerSession) request.getSession().getAttribute("sellerManager");
		inParam.put("MBER_SEQ", session.getMBER_SEQ());
		try {
			logger.debug(">>>>> inParam : "+inParam.toString());
			mav.addObject("list", sellerAdjustService.selectDtlListSellAdjust(inParam));			
			mav.addObject("params", inParam);
			mav.setViewName("seller/adjust/selectDtlListSellAdjust");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	
	
	/**
	 * <pre>
	 * 정산대기 셰어링정산 상세 리스트 조회
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/seller/adjust/selectDtlListShareAdjust.do")
	public ModelAndView selectDtlListShareAdjust(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("selectDtlListShareAdjust START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		SellerSession session = (SellerSession) request.getSession().getAttribute("sellerManager");
		inParam.put("MBER_SEQ", session.getMBER_SEQ());
		inParam.put("MBER_GB_CD", session.getMBER_GB_CD());
		logger.info(">>>>>>>>>>>>>>>> MBER_SEQ : " + session.getMBER_SEQ());
		logger.info(">>>>>>>>>>>>>>>> MBER_GB_CD : " + session.getMBER_GB_CD());
		try {
			logger.debug(">>>>> inParam : "+inParam.toString());
			mav.addObject("list", sellerAdjustService.selectDtlListShareAdjust(inParam));			
			mav.addObject("params", inParam);
			mav.setViewName("seller/adjust/selectDtlListShareAdjust");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
}


