package com.ssocio.sharing.dao.seller;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

/**
 * <pre>
 * 카테고리 Dao
 * 카테고리관리 Dao
 * @author Y.I.Chun
 * @version 
 * @since 2015. 7. 6. 오후 6:41:07
 * @see 
 * @History 
 *  Date          |    author    | 변경내용  
 *	2015. 7. 6.   |    Y.I.Chun  | 신규
 * @Todo
 * </pre>
 */
@Component
public class SellerCtryDao {
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(SellerCtryDao.class);
	
	@Resource(name="sqlSessionSeller")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	/**
	 * <pre>
	 * 카테고리트리정보 조회
	 * 카테고리트리정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	public List<Map<String, Object>> selectCtryTree () throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectCtryTree Start");
		return sqlSession.selectList("sellerCtryMapper.selectCtryTree");
	}
	
	/**
	 * <pre>
	 * 카테고리정보 조회
	 * 카테고리정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	public Map<String, Object> selectCtryInfo (Map<String, Object> inParam) throws Exception{
		logger.info("selectCtryInfo Start");
		return sqlSession.selectOne("sellerCtryMapper.selectCtryInfo", inParam);
	}
	
	/**
	 * <pre>
	 * 카테고리KEY값 조회
	 * 카테고리코드의 MAX+1값을 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	public String selectCtryCd(Map<String, Object> inParam) throws Exception{
		logger.info("selectCtryCd Start");
		return sqlSession.selectOne("sellerCtryMapper.selectCtryCd", inParam);
	}
	
	/**
	 * <pre>
	 * 카테고리정보 수정
	 * 카테고리정보를 수정 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	public void updateCtryInfo (Map<String, Object> inParam) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("updateCtryInfo Start");
		sqlSession.update("sellerCtryMapper.updateCtryInfo", inParam);
	}
	
	/**
	 * <pre>
	 * 카테고리정렬순서 수정
	 * 카테고리정렬순서를 수정 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	public void updateCtrySort (Map<String, Object> inParam) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("updateCtrySort Start");
		sqlSession.update("sellerCtryMapper.updateCtrySort", inParam);
	}
	
	/**
	 * <pre>
	 * 카테고리정보 삭제
	 * 카테고리정보를 삭제 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	public void deleteCtryInfo(Map<String, Object> inParam) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("deleteCtryInfo Start");
		sqlSession.delete("sellerCtryMapper.deleteCtryInfo", inParam);
	}
	
	/**
	 * <pre>
	 * 카테고리정보 등록
	 * 카테고리정보를 등록 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	public void insertCtryInfo (Map<String, Object> inParam) throws Exception{
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("insertCtryInfo Start");
		
		try {
			sqlSession.selectOne("sellerCtryMapper.insertCtryInfo", inParam);
		}
		catch (Exception e) {
			logger.error("insertCtryInfo DB Error : " + e.toString());
			throw e;
		}
	}
	
	/**
	 * <pre>
	 * 분류별 카테고리 리스트 조회
	 * 분류별 카테고리 리스트정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오후 6:41:07
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	public List<Map<String, Object>> selectCtryList(Map<String, Object> inParam) throws Exception{
		logger.info("selectCtryList Start");
		return sqlSession.selectList("sellerCtryMapper.selectCtryList", inParam);
	}
}