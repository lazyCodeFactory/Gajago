package com.ssocio.sharing.dao.seller;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.service.web.WebTestServiceImpl;

@Component
public class SellerMyInfoDao {
	
	private static final Logger logger = LoggerFactory.getLogger(WebTestServiceImpl.class);
	
	@Resource(name="sqlSessionSeller")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}

	/**
	 * 회원정보변경
	 */
	public Map<String, Object> getMyInfoInfo(Map<String, Object> inParam) {
		return sqlSession.selectOne("SellerMyInfoMapper.getMyInfoInfo",inParam);
	}
	/**
	 * 핸드폰번호 변경 화면으로 이동.
	 */
	public Map<String, Object> getMyPhoneChangeForm(Map<String, Object> inParam) {
		return sqlSession.selectOne("SellerMyInfoMapper.getMyPhoneChangeForm",inParam);
	}
	
	/**
	 * 휴대폰 변경
	 */
	public Integer updateMyPhone(Map<String, Object> inParam) {
		logger.debug("휴대폰 변경  - updateMyPhone:"+inParam);
		return sqlSession.selectOne("SellerMyInfoMapper.updateMyPhone",inParam);
	}
	
	/****************************************************************************
	 * 계좌변경 이동
	 ***************************************************************************/
	/**
	 * 계좌 변경 화면으로 이동.
	 */
	public Map<String, Object> getMyAccountChangeForm(Map<String, Object> inParam) {
		return sqlSession.selectOne("SellerMyInfoMapper.getMyAccountChangeForm",inParam);
	}
	/**
	 * 계좌 변경
	 */
	public Integer updateMyAccount(Map<String, Object> inParam) {
		logger.debug("계좌 변경  - updateMyAccount:"+inParam);
		return sqlSession.selectOne("SellerMyInfoMapper.updateMyAccount",inParam);
	}
	/****************************************************************************
	 * 비번변경 이동
	 ***************************************************************************/
	/**
	 * 핸드폰번호 변경 화면으로 이동.
	 */
	public Map<String, Object> getMyPwChangeForm(Map<String, Object> inParam) {
		return sqlSession.selectOne("SellerMyInfoMapper.getMyPwChangeForm",inParam);
	}
	/**
	 * 비밀번호 변경
	 */
	public Integer saveMyPwChange(Map<String, Object> inParam) {
		logger.debug("비밀번호 변경  - saveMyPwChange:"+inParam);
		return sqlSession.selectOne("SellerMyInfoMapper.saveMyPwChange",inParam);
	}
	/**
	 * 이메일 수신여부 변경
	 */
	public Integer changeRadioMail(Map<String, Object> inParam) {
		logger.debug("이메일 수신여부 변경 - changeRadioMail:"+inParam);
		return sqlSession.insert("SellerMyInfoMapper.changeRadioMail",inParam);
	}
	/**
	 * SMS 수신여부 변경
	 */
	public Integer changeRadioSMS(Map<String, Object> inParam) {
		logger.debug("SMS 수신여부 변경 - changeRadioSMS:"+inParam);
		return sqlSession.insert("SellerMyInfoMapper.changeRadioSMS",inParam);
	}
	
	/****************************************************************************
	 * 판매 현황
	 ***************************************************************************/
	/**
	 * 판매 현황.
	 */
	
	public List<Map<String, Object>> selectProdStats (Map<String, Object> inParam) throws Exception{
		logger.info("selecttMyProdStats Start");
		return sqlSession.selectList("SellerMyInfoMapper.selectProdStats", inParam);
	}
	
	public Integer updatePwChg(Map<String, Object> inParam) {
		logger.debug("패스워드 변경  - updatePwChg:"+inParam);
		return sqlSession.selectOne("SellerMyInfoMapper.saveMyPwChange",inParam);
	}

	public Integer updateMyInfo(Map<String, Object> inParam) {
		logger.debug("회원 정보 변경  - updateMyInfo:"+inParam);
		return sqlSession.selectOne("SellerMyInfoMapper.updateMyInfo",inParam);
	}
	
	public Integer updateMberInfo(Map<String, Object> inParam) {
		logger.debug("회원 정보 변경  - updateMberInfo:"+inParam);
		return sqlSession.selectOne("SellerMyInfoMapper.updateMberInfo",inParam);
	}
	
	public Integer updateMberDtlInfo(Map<String, Object> inParam) {
		logger.debug("회원 정보 변경  - updateMberDtlInfo:"+inParam);
		return sqlSession.selectOne("SellerMyInfoMapper.updateMberDtlInfo",inParam);
	}
	
	
	/**
	 * 
	 * [2015-11-23] [ROCKANG] 판매 경고 조회 팝업
	 * @param inParam
	 * @return
	 * @throws Exception
	 */
	public int selectSuspectBoard(Map<String, Object> inParam) throws Exception{
		logger.info("selectSuspectBoard Start");
		return sqlSession.selectOne("SellerMyInfoMapper.selectSuspectSearchCnt", inParam);
	}
	
	/**
	 * 
	 * 판매자 신고이력 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 */
	public List<Map<String, Object>> selectSuspectList(Map<String, Object> inParam) throws Exception{
		logger.info("selectSuspectList Start");
		return sqlSession.selectList("SellerMyInfoMapper.selectSuspectList", inParam);
	}
	
	
	/**
	 * 
	 * [2015-11-23] [ROCKANG] 판매 경고 조회 팝업
	 * @param inParam
	 * @return
	 * @throws Exception
	 */
	public List<Map<String, Object>> selectNewSuspectList(Map<String, Object> inParam) throws Exception{
		logger.info("selectSuspectList Start");
		return sqlSession.selectList("SellerMyInfoMapper.selectNewSuspectList", inParam);
	}
	
	
	
	
	/**
	 * 
	 * 판매자 신용점수 
	 * @param inParam
	 * @return
	 * @throws Exception 
	 */
	public int selectSellCredit(Map<String, Object> inParam) throws Exception{
		logger.info("selectSuspectBoard Start");
		System.out.println("@@@@@@@@@@@@@@@@@@@@@@@111sdasd");
		LoggerUtil.writeMap(inParam);
		return sqlSession.selectOne("SellerMyInfoMapper.selectSellCreditSearchCnt", inParam);
	}
	
	/**
	 * 
	 * 판매자 신용점수 조회
	 * @param inParam
	 * @return
	 * @throws Exception   
	 */
	public List<Map<String, Object>> selectSellCreditList(Map<String, Object> inParam) throws Exception{
		logger.info("selectSuspectList Start");
		return sqlSession.selectList("SellerMyInfoMapper.selectSellCreditList", inParam);
	}
	
	/**
	 * 
	 * [2015-11-23][ROCKANG] 판매자 신고 이력
	 * @param inParam
	 * @return
	 * @throws Exception
	 */
	public int selectSellWarning(Map<String, Object> inParam) throws Exception{
		logger.info("selectSuspectBoard Start");
		return sqlSession.selectOne("SellerMyInfoMapper.selectWarning", inParam);
	}

	/**
	 * 
	 * 판매자 경고이력 조회
	 * @param inParam
	 * @return
	 * @throws Exception
	 */ 
	public List<Map<String, Object>> selectSellWarningList(Map<String, Object> inParam) throws Exception{
		logger.info("selectSuspectList Start");
		return sqlSession.selectList("SellerMyInfoMapper.selectSellWarningList", inParam);
	}
	
	
	/**
	 * 
	 * [2015-11-23][ROCKANG] 판매자 신고 이력
	 * @param inParam
	 * @return
	 * @throws Exception
	 */ 
	public List<Map<String, Object>> selectNewSellWarningList(Map<String, Object> inParam) throws Exception{
		logger.info("selectSuspectList Start");
		return sqlSession.selectList("SellerMyInfoMapper.selectNewSellWarningList", inParam);
	}
	
	/**
	 * [2015-11-23][ROCKANG] 판매자 신고 이력
	 * @param inParam
	 * @return
	 * @throws Exception
	 */
	public Map<String, Object> selectSellWarningCnt(Map<String, Object> inParam) throws Exception{
		logger.info("selectSuspectList Start");
		return sqlSession.selectOne("SellerMyInfoMapper.selectSellWarningCnt", inParam);
	}
	
	
	/**
	 * 
	 */
	public int selectMiniShopCnt(Map<String, Object> inParam) throws Exception{
		logger.info("selectMiniShopCnt Start");
		return sqlSession.selectOne("SellerMyInfoMapper.selectMiniShopCnt", inParam);
	}

	public Map<String,Object> totalStatInfo(Map<String, Object> inParam) {
		logger.info("totalStatInfo Start");
		return sqlSession.selectOne("SellerMyInfoMapper.totalStatInfo", inParam);
	}
	
	public int updateMyminiInfoReg(Map<String, Object> inParam) {
		return sqlSession.insert("SellerMyInfoMapper.updateMyminiInfoReg", inParam);
	}

	public int updateMyminiInfoImgReg(Map<String, Object> inParam) {
		return sqlSession.insert("SellerMyInfoMapper.updateMyminiInfoImgReg", inParam);
	}
	
}
