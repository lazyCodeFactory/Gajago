<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="webBuyRentalMapper">

	<sql id="buyPagingHeader">
		SELECT * FROM (
	</sql>

	<sql id="buyPagingFooter">
		)
		WHERE RNUM <![CDATA[>=]]> #{START_ROW}
		AND RNUM <![CDATA[<=]]> #{END_ROW}
	</sql>

	<select id="selectListRentalReqHist" parameterType="hashmap" resultType="hashmap">
		<include refid="buyPagingHeader" />
		SELECT
		      ROWNUM AS RNUM,
		      A.PROD_CODE,
		      B.PROD_NM,
		      (SELECT PROD_IMG_URL FROM PROD_IMG WHERE PROD_CODE = A.PROD_CODE AND PROD_IMG_GB_CD ='11') AS IMG_URL,
		      TO_CHAR(A.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS REGIST_DT,
			  A.MBER_SEQ,
			  A.REQ_SEQ,
		      C.MBER_NM,
		      A.PROD_TYPE_CD,
		      A.ZIP_CD AS ZIP_CODE,
		      A.JUSO_DORO AS DORO_ADDR,
		      A.JUSO_JIBEN AS BAS_ADDR,
		      A.JUSO_DTL AS DTL_ADDR,
		      A.TEL AS CONTACT,
		      A.ANSIM_YN,
		      A.MEMO AS SHIP_MEMO,
		      A.EMAIL,
		      A.CALLTIME,
		      A.REQ_MEMO,
		      A.PROC_STAT_CD,
		      (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD' AND COM_CD = A.PROC_STAT_CD) AS PROC_STAT_NM
		FROM PROD_SUBMIT_INFO A,
		     PROD B,
		     MBER_INFO C
		WHERE A.PROD_CODE = B.PROD_CODE
		AND A.MBER_SEQ = C.MBER_SEQ
		AND A.MBER_SEQ = #{S_MBER_SEQ}
		      AND A.PROC_STAT_CD IN ('93', '94')
		AND A.PROD_TYPE_CD = '5'
		<!-- 조회기간 -->
		<if test="S_SEARCH_PERI != null and S_SEARCH_PERI != ''">
		<!-- 기존 프로그램의 영향도 때문에 주석만 처리 해놓음
			<if test="S_SEARCH_PERI == '1W'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(SYSDATE- 7, 'YYYYMMDD'), 'YYYYMMDD')
			</if>

			<if test="S_SEARCH_PERI == '1M'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYYMMDD'), 'YYYYMMDD')
			</if>

			<if test="S_SEARCH_PERI == '2M'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -2), 'YYYYMMDD'), 'YYYYMMDD')
			</if>
		-->
			<if test="S_SEARCH_PERI == '3M'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -3), 'YYYYMMDD'), 'YYYYMMDD')
			</if>

			<if test="S_SEARCH_PERI == '6M'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -6), 'YYYYMMDD'), 'YYYYMMDD')
			</if>

			<if test="S_SEARCH_PERI == '1Y'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMMDD'), 'YYYYMMDD')
			</if>
		<!-- 기존 프로그램의 영향도 때문에 주석만 처리 해놓음
			<if test="S_SEARCH_PERI == '2Y'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 12*-2), 'YYYYMMDD'), 'YYYYMMDD')
			</if>

			<if test="S_SEARCH_PERI == '3Y'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 12*-3), 'YYYYMMDD'), 'YYYYMMDD')
			</if> -->
		</if>

		<!-- 주문상태 -->
		<if test="S_PROC_STAT_CD != null and S_PROC_STAT_CD != ''">
            AND A.PROC_STAT_CD = #{S_PROC_STAT_CD}
		</if>

		<!-- 상품명 -->
		<if test="S_PROD_NM != null and S_PROD_NM != ''">
            AND B.PROD_NM LIKE '%'|| #{S_PROD_NM} ||'%'
		</if>
		ORDER BY A.REGIST_DT DESC
		<include refid="buyPagingFooter" />
	</select>

	<select id="selectListRentalReqHistTotCnt" parameterType="hashmap" resultType="int">
		SELECT
		      COUNT(1) AS TOT_CNT
		FROM PROD_SUBMIT_INFO A,
		     PROD B,
		     MBER_INFO C
		WHERE A.PROD_CODE = B.PROD_CODE
		AND A.MBER_SEQ = C.MBER_SEQ
		AND A.MBER_SEQ = #{S_MBER_SEQ}
		AND A.PROD_TYPE_CD = '5'
		      AND A.PROC_STAT_CD IN ('93', '94')
		<!-- 조회기간 -->
		<if test="S_SEARCH_PERI != null and S_SEARCH_PERI != ''">
		<!-- 기존 프로그램의 영향도 때문에 주석만 처리 해놓음
			<if test="S_SEARCH_PERI == '1W'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(SYSDATE- 7, 'YYYYMMDD'), 'YYYYMMDD')
			</if>

			<if test="S_SEARCH_PERI == '1M'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -1), 'YYYYMMDD'), 'YYYYMMDD')
			</if>

			<if test="S_SEARCH_PERI == '2M'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -2), 'YYYYMMDD'), 'YYYYMMDD')
			</if>
		-->
			<if test="S_SEARCH_PERI == '3M'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -3), 'YYYYMMDD'), 'YYYYMMDD')
			</if>

			<if test="S_SEARCH_PERI == '6M'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -6), 'YYYYMMDD'), 'YYYYMMDD')
			</if>

			<if test="S_SEARCH_PERI == '1Y'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, -12), 'YYYYMMDD'), 'YYYYMMDD')
			</if>
		<!-- 기존 프로그램의 영향도 때문에 주석만 처리 해놓음
			<if test="S_SEARCH_PERI == '2Y'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 12*-2), 'YYYYMMDD'), 'YYYYMMDD')
			</if>

			<if test="S_SEARCH_PERI == '3Y'">
				AND A.REGIST_DT >= TO_DATE(TO_CHAR(ADD_MONTHS(SYSDATE, 12*-3), 'YYYYMMDD'), 'YYYYMMDD')
			</if> -->
		</if>
		<!-- 주문상태 -->
		<if test="S_PROC_STAT_CD != null and S_PROC_STAT_CD != ''">
            AND A.PROC_STAT_CD = #{S_PROC_STAT_CD}
		</if>

		<!-- 상품명 -->
		<if test="S_PROD_NM != null and S_PROD_NM != ''">
            AND B.PROD_NM LIKE '%'|| #{S_PROD_NM} ||'%'
		</if>
	</select>

	<select id="selectListRentalReqProd" parameterType="hashmap" resultType="hashmap">
		SELECT
		      A.PROD_CODE,
		      B.PROD_NM,
		      (SELECT PROD_IMG_URL FROM PROD_IMG WHERE PROD_CODE = A.PROD_CODE AND PROD_IMG_GB_CD ='11') AS IMG_URL,
		      TO_CHAR(A.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS REGIST_DT,
		      A.MBER_SEQ,
		      A.REQ_SEQ,
		      C.MBER_NM,
		      A.PROD_TYPE_CD,
		      A.ZIP_CD AS ZIP_CODE,
		      A.JUSO_DORO AS DORO_ADDR,
		      A.JUSO_JIBEN AS BAS_ADDR,
		      A.JUSO_DTL AS DTL_ADDR,
		      A.TEL AS CONTACT,
		      A.ANSIM_YN,
		      A.MEMO AS SHIP_MEMO,
		      A.EMAIL,
		      A.CALLTIME,
		      A.REQ_MEMO,
		      A.PROC_STAT_CD,
		      (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD' AND COM_CD = A.PROC_STAT_CD) AS PROC_STAT_NM,
		      C1.MBER_SEQ AS SELLER_MBER_SEQ,
		      (CASE WHEN M.MINI_SHOP_NM IS NULL
			        THEN C1.MBER_NM
			        ELSE M.MINI_SHOP_NM
			   END) AS MINI_SHOP_NM,
			  (SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = M.MINI_PROFILE_SEQ) AS MINI_SHOP_PATH,
			   A.SCANC_REASON_CD,
	          (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'SCANC_REASON_CD' AND COM_CD = A.SCANC_REASON_CD) AS SCANC_REASON_NM,
	           A.SCANC_REASON,
	           TO_CHAR(A.SCANC_DT, 'YYYY-MM-DD HH24:MI') AS SCANC_DT,
	           (
			        CASE WHEN C1.MBER_GB_CD = '0'
			          THEN (SELECT MBER_PHONE FROM   MBER_INFO PU WHERE  PU.MBER_SEQ = B.MBER_SEQ)
			          ELSE (SELECT CS_PER_TEL FROM   SELLER_INFO_CFG PU WHERE  PU.MBER_SEQ = B.MBER_SEQ)
			        END
		       )  MBER_PHONE 
		FROM PROD_SUBMIT_INFO A,
		     PROD B,
		     MBER_INFO C,
		     MBER_INFO C1,
		     MBER_MINI_SHOP_INFO M
		WHERE A.PROD_CODE = B.PROD_CODE
		AND A.MBER_SEQ = C.MBER_SEQ
		AND B.MBER_SEQ = C1.MBER_SEQ
		AND B.MBER_SEQ = M.MBER_SEQ(+)
		AND A.PROD_TYPE_CD = '5'
		<!-- 상품코드 -->
		<if test="S_PROD_CD != null and S_PROD_CD != ''">
            AND A.PROD_CODE = #{S_PROD_CD}
		</if>
		<!-- 회원일련번호 -->
		<if test="S_MBER_SEQ != null and S_MBER_SEQ != ''">
            AND A.MBER_SEQ = #{S_MBER_SEQ}
		</if>
		<if test="S_REQ_SEQ != null and S_REQ_SEQ != ''">
            AND A.REQ_SEQ = #{S_REQ_SEQ}
		</if>
	</select>

	<update id="updateRentalCancel" parameterType="hashmap" >
		UPDATE PROD_SUBMIT_INFO
		  SET PROC_STAT_CD = '93',
			  SCANC_REASON_CD = #{I_CANC_REASON_CD},
			  SCANC_REASON = #{I_CANC_REASON},
			  SCANC_DT = SYSDATE
		WHERE PROD_CODE = #{S_PROD_CD}
		  AND MBER_SEQ = #{S_MBER_SEQ}
		   AND REQ_SEQ = #{S_REQ_SEQ}
	</update>
	
	<select id="selectRentalCancelCnt" parameterType="hashmap"  resultType="int">
	SELECT COUNT(*) CNT FROM PROD_SUBMIT_INFO 
		  WHERE PROC_STAT_CD = '93'
			AND PROD_CODE = #{S_PROD_CD}
		  	AND MBER_SEQ = #{S_MBER_SEQ}
		   	AND REQ_SEQ = #{S_REQ_SEQ}
	</select>
	
</mapper>