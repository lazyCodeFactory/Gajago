package com.ssocio.sharing.controller.admin;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.util.DateUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.service.admin.AdminStatisService;

/**
 * <pre>
 * 통계 컨트롤러
 * 통계 처리를 위한 컨트롤러
 * @author S.W.LEE
 * @version
 * @since 2015. 10. 05. 오후 7:18:35
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 10. 05.	|	S.W.LEE	|신규
 * @비고
 * </pre>
 */
@RequestMapping("/admin/statis")
@Controller
public class AdminStatisController extends AdminReferController {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminStatisController.class);
	
	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private AdminStatisService adminStatisService;
	
	//http://mobile.ssocio.net:8086/admin/statis/insertStatisDate.do?date=20150101
	@RequestMapping("/insertStatisDate.do")
	public ModelAndView insertStatisDate(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: insertStatisDate :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		try {
			
			logger.debug("date : " + inParam.get("date"));
			modelMap = adminStatisService.insertStatisDate(inParam);
			
			mav.setViewName("admin/statis/selectAccStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: insertStatisDate :: End ##########");
		return mav;
	}
	
	@RequestMapping("/insertStatisDateOra.do")
	public ModelAndView insertStatisDateOra(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: insertStatisDateOra :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		try {
			
			logger.debug("date : " + inParam.get("date"));
			modelMap = adminStatisService.insertStatisDateOra(inParam);
			
			mav.setViewName("admin/statis/selectAccStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: insertStatisDateOra :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 방문자수 일간통계 리스트 엑셀
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 2:21:41
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/selectStatisToExcel.do")
	public ModelAndView selectListAdjustToExcel(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
		logger.info("selectListAdjustToExcel START");
		logger.info("★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
		ModelAndView mav = new ModelAndView();
		mav.setViewName("excelDownloadView");
		try {
			
			String today = StringUtil.getCurrentDate();
			response.setContentType("application/msexcel");
			response.setHeader("Content-Disposition",
					getDisposition("SSOCIO_방문자수_일간통계_" + today + ".xls", check_browser(request)));
		
			String SheetName = "방문자수 일간 통계";
			
			List<String> excelTitle = new ArrayList<String>();
			
			
			excelTitle.add("구분");
			excelTitle.add("접속자수");
			excelTitle.add("전일대비");
			excelTitle.add("접속자수");
			excelTitle.add("전일대비");
			excelTitle.add("접속자수");
			excelTitle.add("전일대비");
	
			List<String> CellName = new ArrayList<String>();
			CellName.add("TIME");      
			CellName.add("MW_ACC_CNT");   
			CellName.add("MA_ACC_CNT");   
			CellName.add("PW_ACC_CNT");        
			CellName.add("LAST_MW_ACC_CNT");         
			CellName.add("LAST_MA_ACC_CNT");         
			CellName.add("LAST_PW_ACC_CNT");        
			
			mav.addObject("SheetName", SheetName);
			mav.addObject("excelTitle", excelTitle);
			mav.addObject("CellName", CellName);
			mav.addObject("excelList", adminStatisService.selectAccStatisToExcel(inParam));
			mav.addObject("param", inParam);
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
	
	
	@RequestMapping("/listStatisToExcel.do")
	public ModelAndView listStatisToExcel(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: listStatisToExcel :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		try {
			
			modelMap = adminStatisService.listStatisToExcel(inParam);
			
			mav.setViewName("admin/statis/selectAccStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: listStatisToExcel :: End ##########");
		return mav;
	}
	
	
	/**
	 * <pre>
	 * 통계 
	 * 접속자 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/selectAccStatis.do")
	public ModelAndView selectAccStatis(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: selectAccStatis :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		// default : 어제 날짜
		if( inParam.get("date") == null || "".equals(inParam.get("date"))){
			Date dt = new Date();
			dt = DateUtil.addDateByDay(dt, -1);
			String defaultDate = DateUtil.getStringFromDate(dt, "yyyyMMdd");
			inParam.put("date", defaultDate);
		}
		
		try {
			modelMap = adminStatisService.selectAccStatis(inParam);
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/selectAccStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: selectAccStatis :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 통계 
	 * 접속자 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/selectAccMonthStatis.do")
	public ModelAndView selectAccMonthStatis(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: selectAccMonthStatis :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		// default date
		if("".equals(inParam.get("date")) || inParam.get("date") == null){
			Date dt = new Date();
			String defaultDate = DateUtil.getStringFromDate(dt, "yyyyMM");
			logger.debug("defaultDate : " + defaultDate);
			inParam.put("date", defaultDate);
		}
		
		try {
			modelMap = adminStatisService.selectAccMonthStatis(inParam); // 정산완료
																			// 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/selectAccMonthStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: selectAccMonthStatis :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 통계 
	 * 접속자 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/selectAccWeekStatis.do")
	public ModelAndView selectAccWeekStatis(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: selectAccWeekStatis :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		
		if (inParam.get("date") == null || "".equals(inParam.get("date"))) {
			Calendar cal = Calendar.getInstance();
			cal.set(Calendar.DAY_OF_WEEK, cal.getFirstDayOfWeek());
			String strYear = Integer.toString(cal.get(Calendar.YEAR));
			int month = (cal.get(Calendar.MONTH) + 1);
			String strMonth;
			strMonth = month < 10 ? "0"+month : Integer.toString(month);
			int date = cal.get(Calendar.DATE);
			String strDate;
			strDate = date < 10 ? "0" + date : Integer.toString(date); 
			
			logger.debug("Start of this week : " + strYear+strMonth+strDate);
			inParam.put("date",strYear+strMonth+strDate);
			cal.add(Calendar.DAY_OF_MONTH, 6);
			strYear = Integer.toString(cal.get(Calendar.YEAR));
			month = (cal.get(Calendar.MONTH) + 1);
			strMonth = month < 10 ? "0"+month : Integer.toString(month);
			date = cal.get(Calendar.DATE);
			strDate = date < 10 ? "0" + date : Integer.toString(date); 
			logger.debug("date : " + "0" + date);
			inParam.put("last_date",strYear+strMonth+strDate);
			logger.debug("Start of this last_week : " + strYear+strMonth+strDate);		
		}
		
		try {
			modelMap = adminStatisService.selectAccWeekStatis(inParam); // 정산완료
																		// 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/selectAccWeekStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: selectAccWeekStatis :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 통계 
	 * 가입자 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/selectSignupStatis.do")
	public ModelAndView selectSignupStatis(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: selectSignupStatis :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		// default : 어제 날짜
		if( inParam.get("date") == null || "".equals(inParam.get("date"))){
			Date dt = new Date();
			dt = DateUtil.addDateByDay(dt, -1);
			String defaultDate = DateUtil.getStringFromDate(dt, "yyyyMMdd");
			inParam.put("date", defaultDate);
		}
		
		try {
			modelMap = adminStatisService.selectSignupStatis(inParam); // 정산완료
																		// 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/selectSignupStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: selectSignupStatis :: End ##########");
		return mav;
	}
	
	
	/**
	 * <pre>
	 * 통계 
	 * 가입자 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/selectSignupWeekStatis.do")
	public ModelAndView selectSignupWeekStatis(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: selectSignupWeekStatis :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		logger.debug("date : " + inParam.get("date"));
		if (inParam.get("date") == null || "".equals(inParam.get("date"))) {
			Calendar cal = Calendar.getInstance();
			cal.set(Calendar.DAY_OF_WEEK, cal.getFirstDayOfWeek());
			String strYear = Integer.toString(cal.get(Calendar.YEAR));
			int month = (cal.get(Calendar.MONTH) + 1);
			String strMonth;
			strMonth = month < 10 ? "0"+month : Integer.toString(month);
			int date = cal.get(Calendar.DATE);
			String strDate;
			strDate = date < 10 ? "0" + date : Integer.toString(date); 
			
			logger.debug("Start of this week : " + strYear+strMonth+strDate);
			inParam.put("date",strYear+strMonth+strDate);
			cal.add(Calendar.DAY_OF_MONTH, 6);
			strYear = Integer.toString(cal.get(Calendar.YEAR));
			month = (cal.get(Calendar.MONTH) + 1);
			strMonth = month < 10 ? "0"+month : Integer.toString(month);
			date = cal.get(Calendar.DATE);
			strDate = date < 10 ? "0" + date : Integer.toString(date); 
			logger.debug("date : " + "0" + date);
			inParam.put("last_date",strYear+strMonth+strDate);
			logger.debug("Start of this last_week : " + strYear+strMonth+strDate);		
		}
		
		try {
			modelMap = adminStatisService.selectSignupWeekStatis(inParam); // 정산완료
																			// 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/selectSignupWeekStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: selectSignupWeekStatis :: End ##########");
		return mav;
	}
	
	
	/**
	 * <pre>
	 * 통계 
	 * 가입자 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/selectSignupMonthStatis.do")
	public ModelAndView selectSignupMonthStatis(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: selectSignupMonthStatis :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		// default date
		if("".equals(inParam.get("date")) || inParam.get("date") == null){
			Date dt = new Date();
			String defaultDate = DateUtil.getStringFromDate(dt, "yyyyMM");
			logger.debug("defaultDate : " + defaultDate);
			inParam.put("date", defaultDate);
		}
		
		try {
			modelMap = adminStatisService.selectSignupMonthStatis(inParam); // 정산완료
																			// 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/selectSignupMonthStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: selectSignupMonthStatis :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 통계 
	 * 판매 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/selectSaleStatis.do")
	public ModelAndView selectSaleStatis(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: selectSaleStatis :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		try {
			// adminAdjustService.selectListAdjust(inParam); //정산완료 리스트
			
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/selectSaleStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: selectSignupStatis :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 통계 
	 * 쉐어링 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/selectShareStatis.do")
	public ModelAndView selectShareStatis(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: selectShareStatis :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		try {
			// adminAdjustService.selectListAdjust(inParam); //정산완료 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/selectShareStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: selectShareStatis :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 통계 
	 * 메뉴 접속 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/selectMenuStatis.do")
	public ModelAndView selectMenuStatis(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: selectMenuStatis :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		// default : 어제 날짜
		if( inParam.get("date") == null || "".equals(inParam.get("date"))){
			Date dt = new Date();
			dt = DateUtil.addDateByDay(dt, -1);
			String defaultDate = DateUtil.getStringFromDate(dt, "yyyyMMdd");
			inParam.put("date", defaultDate);
		}
		
		try {
			modelMap = adminStatisService.selectMenuStatis(inParam); // 정산완료 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/selectMenuStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		
		logger.info("########## Controller :: selectMenuStatis :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 통계 
	 * 메뉴 접속 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/selectMenuWeekStatis.do")
	public ModelAndView selectMenuWeekStatis(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: selectMenuWeekStatis :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		if (inParam.get("date") == null || "".equals(inParam.get("date"))) {
			Calendar cal = Calendar.getInstance();
			cal.set(Calendar.DAY_OF_WEEK, cal.getFirstDayOfWeek());
			String strYear = Integer.toString(cal.get(Calendar.YEAR));
			int month = (cal.get(Calendar.MONTH) + 1);
			String strMonth;
			strMonth = month < 10 ? "0"+month : Integer.toString(month);
			int date = cal.get(Calendar.DATE);
			String strDate;
			strDate = date < 10 ? "0" + date : Integer.toString(date); 
			
			logger.debug("Start of this week : " + strYear+strMonth+strDate);
			inParam.put("date",strYear+strMonth+strDate);
			cal.add(Calendar.DAY_OF_MONTH, 6);
			strYear = Integer.toString(cal.get(Calendar.YEAR));
			month = (cal.get(Calendar.MONTH) + 1);
			strMonth = month < 10 ? "0"+month : Integer.toString(month);
			date = cal.get(Calendar.DATE);
			strDate = date < 10 ? "0" + date : Integer.toString(date); 
			logger.debug("date : " + "0" + date);
			inParam.put("last_date",strYear+strMonth+strDate);
			logger.debug("Start of this last_week : " + strYear+strMonth+strDate);		
		}
		
		try {
			modelMap = adminStatisService.selectMenuWeekStatis(inParam); // 정산완료
																			// 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/selectMenuWeekStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		
		logger.info("########## Controller :: selectMenuWeekStatis :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 통계 
	 * 메뉴 접속 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/selectMenuMonthStatis.do")
	public ModelAndView selectMenuMonthStatis(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: selectMenuMonthStatis :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		// default date
		if("".equals(inParam.get("date")) || inParam.get("date") == null){
			Date dt = new Date();
			String defaultDate = DateUtil.getStringFromDate(dt, "yyyyMM");
			logger.debug("defaultDate : " + defaultDate);
			inParam.put("date", defaultDate);
		}
		
		try {
			modelMap = adminStatisService.selectMenuMonthStatis(inParam); // 정산완료
																			// 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/selectMenuMonthStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		
		logger.info("########## Controller :: selectMenuMonthStatis :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 통계 
	 * 카테고리 접속 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/selectCateStatis.do")
	public ModelAndView selectCateStatis(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: selectCateStatis :: Start ##########");
		ModelAndView mav = new ModelAndView();
		try {
			// adminAdjustService.selectListAdjust(inParam); //정산완료 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/selectCateStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("########## Controller :: selectCateStatis :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 통계 
	 * 기획전 접속 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/selectPlanStatis.do")
	public ModelAndView selectPlanStatis(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: selectPlanStatis :: Start ##########");
		ModelAndView mav = new ModelAndView();
		try {
			// adminAdjustService.selectListAdjust(inParam); //정산완료 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/selectPlanStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("########## Controller :: selectPlanStatis :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 통계 
	 * 이벤트 접속 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/selectEventStatis.do")
	public ModelAndView selectEventStatis(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception{
		logger.info("########## Controller :: selectEventStatis :: Start ##########");
		ModelAndView mav = new ModelAndView();
		try {
			// adminAdjustService.selectListAdjust(inParam); //정산완료 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/selectEventStatis");
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("########## Controller :: selectEventStatis :: End ##########");
		return mav;
	}
	
	private String getDisposition(String down_filename, String browser_check) throws UnsupportedEncodingException {
		String prefix = "attachment;filename=";
		String encodedfilename = null;
		System.out.println("browser_check:"+browser_check);
		if (browser_check.equals("ie")) {
		encodedfilename = URLEncoder.encode(down_filename, "UTF-8").replaceAll("\\+", "%20");
		}else if (browser_check.equals("chrome")) {
		StringBuffer sb = new StringBuffer();
		for (int i = 0; i < down_filename.length(); i++){
		    char c = down_filename.charAt(i);
		    if (c > '~') {
		        sb.append(URLEncoder.encode("" + c, "UTF-8"));
		    } else {
		        sb.append(c);
		    }
		}
		encodedfilename = sb.toString();
		}else {
		encodedfilename = "\"" + new String(down_filename.getBytes("UTF-8"), "8859_1") + "\"";
		} 
		return prefix + encodedfilename;
	}
	
	
	private String check_browser(HttpServletRequest request) {
		String browser = "";
		String header = request.getHeader("User-Agent");
		// 신규추가된 indexof : Trident(IE11) 일반 MSIE로는 체크 안됨
		if (header.indexOf("MSIE") > -1 || header.indexOf("Trident") > -1){
		browser = "ie";
		}
		// 크롬일 경우
		else if (header.indexOf("Chrome") > -1){
		browser = "chrome";
		}
		// 오페라일경우
		else if (header.indexOf("Opera") > -1){
		browser = "opera";
		}
		// 사파리일 경우
		else if (header.indexOf("Apple") > -1){
		browser = "sarari";
		} else {
		browser = "firfox"; 
		}
		return browser;
	}

	// List to Excel Controller------------------------------------------------
	// List to Excel Controller------------------------------------------------
	// List to Excel Controller------------------------------------------------

	/**
	 * <pre>
	 * 통계 
	 * 접속자 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author J.H PARK
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/accStatisToExcel.do")
	public ModelAndView accStatisToExcel(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap,
			@RequestParam Map<String, Object> inParam) throws Exception {
		logger.info("########## Controller :: selectAccStatis :: Start ##########");
		ModelAndView mav = new ModelAndView();

		if (inParam.get("date") == null || "".equals(inParam.get("date"))) {
			String defaultDate = DateUtil.getNowDateTime("yyyyMMdd");
			logger.debug("defaultDate : " + defaultDate);
			inParam.put("date", defaultDate);
		}

		try {
			modelMap = adminStatisService.selectAccStatis(inParam);
			modelMap.put("today", DateUtil.toDateString("yyy-MM-dd"));
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/listToExcel/accStatisToExcel");
		} catch (Exception e) {
			e.printStackTrace();
		}

		logger.info("########## Controller :: selectAccStatis :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 통계 
	 * 접속자 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/accWeekStatisToExcel.do")
	public ModelAndView accWeekStatisToExcel(HttpServletRequest request, HttpServletResponse response,
			ModelMap modelMap,@RequestParam Map<String, Object> inParam) throws Exception {
		logger.info("########## Controller :: accWeekStatisToExcel :: Start ##########");
		ModelAndView mav = new ModelAndView();

		if (inParam.get("date") == null || "".equals(inParam.get("date"))) {
			Calendar cal = Calendar.getInstance();
			cal.set(Calendar.DAY_OF_WEEK, cal.getFirstDayOfWeek());
			String strYear = Integer.toString(cal.get(Calendar.YEAR));
			int month = (cal.get(Calendar.MONTH) + 1);
			String strMonth;
			strMonth = month < 10 ? "0"+month : Integer.toString(month);
			int date = cal.get(Calendar.DATE);
			String strDate;
			strDate = date < 10 ? "0" + date : Integer.toString(date); 
			
			logger.debug("Start of this week : " + strYear+strMonth+strDate);
			inParam.put("date",strYear+strMonth+strDate);
			cal.add(Calendar.DAY_OF_MONTH, 6);
			strYear = Integer.toString(cal.get(Calendar.YEAR));
			month = (cal.get(Calendar.MONTH) + 1);
			strMonth = month < 10 ? "0"+month : Integer.toString(month);
			date = cal.get(Calendar.DATE);
			strDate = date < 10 ? "0" + date : Integer.toString(date); 
			logger.debug("date : " + "0" + date);
			inParam.put("last_date",strYear+strMonth+strDate);
			logger.debug("Start of this last_week : " + strYear+strMonth+strDate);		
		}

		try {
			modelMap = adminStatisService.selectAccWeekStatis(inParam); // 정산완료
																		// 리스트

			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/listToExcel/accWeekStatisToExcel");
		} catch (Exception e) {
			e.printStackTrace();
		}

		logger.info("########## Controller :: accWeekStatisToExcel :: End ##########");
		return mav;
	}
	

	/**
	 * <pre>
	 * 통계 
	 * 접속자 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/accMonthStatisToExcel.do")
	public ModelAndView accMonthStatisToExcel(HttpServletRequest request, HttpServletResponse response,
			ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception {
		logger.info("########## Controller :: accMonthStatisToExcel :: Start ##########");
		ModelAndView mav = new ModelAndView();

		// default date
		if("".equals(inParam.get("date")) || inParam.get("date") == null){
			Date dt = new Date();
			String defaultDate = DateUtil.getStringFromDate(dt, "yyyyMM");
			logger.debug("defaultDate : " + defaultDate);
			inParam.put("date", defaultDate);
		}

		try {
			modelMap = adminStatisService.selectAccMonthStatis(inParam); // 정산완료
																			// 리스트
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/listToExcel/accMonthStatisToExcel");
		} catch (Exception e) {
			e.printStackTrace();
		}

		logger.info("########## Controller :: accMonthStatisToExcel :: End ##########");
		return mav;
	}

	/**
	 * <pre>
	 * 통계 
	 * 접속자 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author J.H PARK
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/accSignupStatisToExcel.do")
	public ModelAndView accSignupStatisToExcel(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap,
			@RequestParam Map<String, Object> inParam) throws Exception {
		logger.info("########## Controller :: accSignupStatisToExcel :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		// default : 어제 날짜
		if( inParam.get("date") == null || "".equals(inParam.get("date"))){
			Date dt = new Date();
			dt = DateUtil.addDateByDay(dt, -1);
			String defaultDate = DateUtil.getStringFromDate(dt, "yyyyMMdd");
			inParam.put("date", defaultDate);
		}
		
		try {
			modelMap = adminStatisService.selectSignupStatis(inParam); // 정산완료
																		// 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/listToExcel/accSignupStatisToExcel");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: accSignupStatisToExcel :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 통계 
	 * 접속자 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/accSignupWeekStatisToExcel.do")
	public ModelAndView accSignupWeekStatisToExcel(HttpServletRequest request, HttpServletResponse response,
			ModelMap modelMap,@RequestParam Map<String, Object> inParam) throws Exception {
		logger.info("########## Controller :: accSignupWeekStatisToExcel :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		logger.debug("date : " + inParam.get("date"));
		if (inParam.get("date") == null || "".equals(inParam.get("date"))) {
			Calendar cal = Calendar.getInstance();
			cal.set(Calendar.DAY_OF_WEEK, cal.getFirstDayOfWeek());
			String strYear = Integer.toString(cal.get(Calendar.YEAR));
			int month = (cal.get(Calendar.MONTH) + 1);
			String strMonth;
			strMonth = month < 10 ? "0"+month : Integer.toString(month);
			int date = cal.get(Calendar.DATE);
			String strDate;
			strDate = date < 10 ? "0" + date : Integer.toString(date); 
			
			logger.debug("Start of this week : " + strYear+strMonth+strDate);
			inParam.put("date",strYear+strMonth+strDate);
			cal.add(Calendar.DAY_OF_MONTH, 6);
			strYear = Integer.toString(cal.get(Calendar.YEAR));
			month = (cal.get(Calendar.MONTH) + 1);
			strMonth = month < 10 ? "0"+month : Integer.toString(month);
			date = cal.get(Calendar.DATE);
			strDate = date < 10 ? "0" + date : Integer.toString(date); 
			logger.debug("date : " + "0" + date);
			inParam.put("last_date",strYear+strMonth+strDate);
			logger.debug("Start of this last_week : " + strYear+strMonth+strDate);		
		}
		
		try {
			modelMap = adminStatisService.selectSignupWeekStatis(inParam); // 정산완료
																			// 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/listToExcel/accSignupWeekStatisToExcel");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: accSignupWeekStatisToExcel :: End ##########");
		return mav;
	}
	
	
	/**
	 * <pre>
	 * 통계 
	 * 접속자 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/accSignupMonthStatisToExcel.do")
	public ModelAndView accSignupMonthStatisToExcel(HttpServletRequest request, HttpServletResponse response,
			ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception {
		logger.info("########## Controller :: accSignupMonthStatisToExcel :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		// default date
		if("".equals(inParam.get("date")) || inParam.get("date") == null){
			Date dt = new Date();
			String defaultDate = DateUtil.getStringFromDate(dt, "yyyyMM");
			logger.debug("defaultDate : " + defaultDate);
			inParam.put("date", defaultDate);
		}
		
		try {
			modelMap = adminStatisService.selectSignupMonthStatis(inParam); // 정산완료
																			// 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/listToExcel/accSignupMonthStatisToExcel");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: accSignupMonthStatisToExcel :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 통계 
	 * 접속자 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author J.H PARK
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/accMenuStatisToExcel.do")
	public ModelAndView accMenuStatisToExcel(HttpServletRequest request, HttpServletResponse response, ModelMap modelMap,
			@RequestParam Map<String, Object> inParam) throws Exception {
		logger.info("########## Controller :: accMenuStatisToExcel :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		// default : 어제 날짜
		if( inParam.get("date") == null || "".equals(inParam.get("date"))){
			Date dt = new Date();
			dt = DateUtil.addDateByDay(dt, -1);
			String defaultDate = DateUtil.getStringFromDate(dt, "yyyyMMdd");
			inParam.put("date", defaultDate);
		}
		
		try {
			modelMap = adminStatisService.selectMenuStatis(inParam); // 정산완료 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/listToExcel/accMenuStatisToExcel");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: accMenuStatisToExcel :: End ##########");
		return mav;
	}
	
	/**
	 * <pre>
	 * 통계 
	 * 접속자 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/accMenuWeekStatisToExcel.do")
	public ModelAndView accMenuWeekStatisToExcel(HttpServletRequest request, HttpServletResponse response,
			ModelMap modelMap,@RequestParam Map<String, Object> inParam) throws Exception {
		logger.info("########## Controller :: accMenuWeekStatisToExcel :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		if (inParam.get("date") == null || "".equals(inParam.get("date"))) {
			Calendar cal = Calendar.getInstance();
			cal.set(Calendar.DAY_OF_WEEK, cal.getFirstDayOfWeek());
			String strYear = Integer.toString(cal.get(Calendar.YEAR));
			int month = (cal.get(Calendar.MONTH) + 1);
			String strMonth;
			strMonth = month < 10 ? "0"+month : Integer.toString(month);
			int date = cal.get(Calendar.DATE);
			String strDate;
			strDate = date < 10 ? "0" + date : Integer.toString(date); 
			
			logger.debug("Start of this week : " + strYear+strMonth+strDate);
			inParam.put("date",strYear+strMonth+strDate);
			cal.add(Calendar.DAY_OF_MONTH, 6);
			strYear = Integer.toString(cal.get(Calendar.YEAR));
			month = (cal.get(Calendar.MONTH) + 1);
			strMonth = month < 10 ? "0"+month : Integer.toString(month);
			date = cal.get(Calendar.DATE);
			strDate = date < 10 ? "0" + date : Integer.toString(date); 
			logger.debug("date : " + "0" + date);
			inParam.put("last_date",strYear+strMonth+strDate);
			logger.debug("Start of this last_week : " + strYear+strMonth+strDate);		
		}
		
		try {
			modelMap = adminStatisService.selectMenuWeekStatis(inParam); // 정산완료
																			// 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/listToExcel/accMenuWeekStatisToExcel");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: accMenuWeekStatisToExcel :: End ##########");
		return mav;
	}
	
	
	/**
	 * <pre>
	 * 통계 
	 * 접속자 통계
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 10. 05. 오후 2:21:41
	 * @author S.W.LEE
	 * @see com.ssocio.sharing.controller.admin
	 * </pre>
	 */
	@RequestMapping("/accMenuMonthStatisToExcel.do")
	public ModelAndView accMenuMonthStatisToExcel(HttpServletRequest request, HttpServletResponse response,
			ModelMap modelMap, @RequestParam Map<String, Object> inParam) throws Exception {
		logger.info("########## Controller :: accMenuMonthStatisToExcel :: Start ##########");
		ModelAndView mav = new ModelAndView();
		
		// default date
		if("".equals(inParam.get("date")) || inParam.get("date") == null){
			Date dt = new Date();
			String defaultDate = DateUtil.getStringFromDate(dt, "yyyyMM");
			logger.debug("defaultDate : " + defaultDate);
			inParam.put("date", defaultDate);
		}
		
		try {
			modelMap = adminStatisService.selectMenuMonthStatis(inParam); // 정산완료
																			// 리스트
			
			mav.addAllObjects(modelMap);
			mav.setViewName("admin/statis/listToExcel/accMenuMonthStatisToExcel");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("########## Controller :: accMonthStatisToExcel :: End ##########");
		return mav;
	}
	
}
