/**<pre>
 * 1. Project Name : SSOCIO
 * 2. Package Name : com.ssocio.sharing.controller.mobile
 * 3. File Name	   : MobileEventController.java
 * 4. Date		   : 오후 2:20 2015-08-19
 * 5. Author	   : H.M.Yang
 * 6. Note		   : 
 * </pre>
 */
package com.ssocio.sharing.controller.mobile;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.admin.util.CommonUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.service.web.WebEventService;
import com.ssocio.sharing.vo.web.WebSession;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.util.LoggerUtil;

/**
 * <pre>
 * 이벤트 Controller
 * 이벤트 위한 Controller
 * @author H.M.Yang
 * @version 
 * @since 2015. 8. 19. 오후 2:20:00
 * @see 
 * @History 
 *  Date          |    author    | 변경내용  
 *	2015. 8. 19.  |    H.M.Yang  | 신규 
 * @Todo
 * </pre>
 */
@Controller
public class MobileEventController extends MobileReferController {
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(MobileBuyRentalController.class);

	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private WebEventService webEventService;
	
	/**
	 * <pre>
	 * 이벤트 목록 조회
	 * 이벤트 목록을 조회 합니다.
	 * @param request
	 * @param response
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 19. 오후 2:20:00
	 * @author H.M.Yang
	 * @see com.ssocio.sharing.controller.mobile
	 * </pre>
	 */
	@RequestMapping("/mobile/event/selectListEvent.do")
	public ModelAndView selectListEvent(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> paramDto) throws Exception {
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(paramDto);
		
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			if (user != null && user.getLogin()) {
				paramDto.put("S_MBER_SEQ", user.getMBER_SEQ());
			}
			mav.addObject("list", webEventService.selectListEvent(paramDto));
			mav.addObject("searchParam", paramDto);
			mav.setViewName("web/event/selectListEvent");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return mav;
	}
	
	/**
	 * <pre>
	 * 이벤트 목록 조회
	 * 이벤트 목록을 조회 합니다.
	 * @param request
	 * @param response
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 19. 오후 2:20:00
	 * @author H.M.Yang
	 * @see com.ssocio.sharing.controller.mobile
	 * </pre>
	 */
	@RequestMapping("/mobile/event/selectEventDtl.do")
	public ModelAndView selectEventDtl(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> paramDto) throws Exception {
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(paramDto);
		
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			if (user != null && user.getLogin()) {
				paramDto.put("S_MBER_SEQ", user.getMBER_SEQ());
			}
			mav.addObject("list", webEventService.selectListEvent(paramDto));
			mav.addObject("searchParam", paramDto);
			mav.setViewName("web/event/selectEventDtl");
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		return mav;
	}
	
	/**
	 * <pre>
	 * 이벤트 응모 처리
	 * 이벤트 응모 합니다.
	 * @param request
	 * @param response
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 19. 오후 2:20:00
	 * @author H.M.Yang
	 * @see com.ssocio.sharing.controller.mobile
	 * </pre>
	 */
	@RequestMapping("/mobile/event/saveEvent.do")
	public ModelAndView saveEvent(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> paramDto) throws Exception{
		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(paramDto);
		try {
			WebSession user = (WebSession)request.getSession().getAttribute("user");
			paramDto.put("S_MBER_SEQ", user.getMBER_SEQ());
			mav.addObject("result", webEventService.saveEvent(paramDto));
			mav.setViewName("jsonView");
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mav;
	}
}
