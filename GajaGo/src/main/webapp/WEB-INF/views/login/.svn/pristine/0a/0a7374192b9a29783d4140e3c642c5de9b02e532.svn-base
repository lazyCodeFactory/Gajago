package com.ssocio.sharing.service.admin;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.ui.ModelMap;

import com.ssocio.sharing.cmmn.admin.util.CommonUtil;
import com.ssocio.sharing.cmmn.util.CmmnCnst;
import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.dao.admin.AdminNoticeDao;
import com.ssocio.sharing.vo.admin.AdminSession;
import com.ssocio.sharing.vo.admin.PageNavigation;

/**
 * <pre>
 * 공통 서비스
 * 공통 서비스
 * @author J.K.CHOI
 * @version
 * @since 2015. 7. 17. 오후 7:33:23
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 17.	|	J.K.CHOI	|신규
 * @비고
 * </pre>
 */
@Service
public class AdminNoticeServiceImpl extends AdminReferServiceImpl implements AdminNoticeService {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminNoticeServiceImpl.class);
	
	// --------------------------------------------------------------------------
	// # DAO 설정
	// --------------------------------------------------------------------------
	@Resource(name="adminNoticeDao")
	private AdminNoticeDao adminNoticeDao;
	
	/**
	 * <pre>
	 * 공지사항 리스트 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 17. 오후 2:03:43
	 * @author J.K.CHOI
	 * @see @see com.ssocio.sharing.service.admin.AdminNoticeService#selectListNotice(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public ModelMap selectListNotice(Map<String, Object> inParam) throws Exception{
		ModelMap mm = new ModelMap();
		try {
			
			//조회조건 기간 처리 start
			String today = StringUtil.getCurrentDate();
			inParam.put("S_END_DATE", StringUtil.nvl((String)inParam.get("S_END_DATE"), today));
			
			SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd");
			Calendar cal = Calendar.getInstance();
			cal.add(Calendar.DATE, -7);
			inParam.put("S_START_DATE", StringUtil.nvl((String)inParam.get("S_START_DATE"), format.format(cal.getTime())));
			//조회조건 기간 처리 end
			
			inParam.put("PAGE_NO", StringUtil.nvl((String)inParam.get("PAGE_NO"), "1"));
			int nowPage = StringUtil.nvlInt((String)inParam.get("PAGE_NO"), 1);
			int rowTotal = adminNoticeDao.selectListNoticeCount(inParam);
			
			PageNavigation pageNav= new PageNavigation(nowPage, rowTotal, CmmnCnst.ADM_LIST_SIZE, CmmnCnst.ADM_BLOCK_SIZE );
			mm.put("PAGE_NO", nowPage);
			mm.put("pageNav", pageNav);
		    inParam.put("START_ROW"	,pageNav.getStartRow());
		    inParam.put("END_ROW"	,pageNav.getEndRow());

			LoggerUtil.writeMap(inParam);
			mm.put("selectListNotice",adminNoticeDao.selectListNotice(inParam));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mm;
	}
	
	/**
	 * <pre>
	 * 공지사항 상세 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 17. 오후 4:24:44
	 * @author J.K.CHOI
	 * @see @see com.ssocio.sharing.service.admin.AdminNoticeService#selectNotice(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public ModelMap selectNotice(Map<String, Object> inParam) throws Exception{
		ModelMap mm = new ModelMap();
		try {
			
			String[] arryKey = {"CONTENTS"};
			mm.put("selectNotice", CommonUtil.clobToString(adminNoticeDao.selectNotice(inParam), arryKey));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mm;
	}
	
	/**
	 * <pre>
	 * 공지사항 등록
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 17. 오후 3:21:24
	 * @author J.K.CHOI
	 * @see @see com.ssocio.sharing.service.admin.AdminNoticeService#insertNoticeReg(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public int insertNoticeReg(Map<String, Object> inParam, HttpServletRequest request) throws Exception {
		int outParam = 0;
		try {
			HttpSession session = request.getSession();
			AdminSession sessionVO = (AdminSession)session.getAttribute("manager");
			inParam.put("WRITE_ID", sessionVO.getADM_ID());
			inParam.put("WRITE_NM", sessionVO.getADM_NM());

			LoggerUtil.writeMap(inParam);
			outParam = adminNoticeDao.insertNoticeReg(inParam);					//공지사항 등록
			
		}catch (Exception e) {
			throw e;
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 공지사항 수정
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 17. 오후 3:33:26
	 * @author J.K.CHOI
	 * @see @see com.ssocio.sharing.service.admin.AdminNoticeService#updateNoticeReg(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public int updateNoticeReg(Map<String, Object> inParam, HttpServletRequest request) throws Exception {
		int outParam = 0;
		try {
			HttpSession session = request.getSession();
			AdminSession sessionVO = (AdminSession)session.getAttribute("manager");
			inParam.put("WRITE_ID", sessionVO.getADM_ID());
			inParam.put("WRITE_NM", sessionVO.getADM_NM());
			
			LoggerUtil.writeMap(inParam);
			outParam = adminNoticeDao.updateNoticeReg(inParam);		//공지사항 수정
		}catch (Exception e) {
			throw e;
		}
		return outParam;
	}
	
	
	/**
	 * <pre>
	 * 공지사항 삭제
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 17. 오후 3:21:24
	 * @author J.K.CHOI
	 * @see @see com.ssocio.sharing.service.admin.AdminNoticeService#insertNoticeReg(java.util.Map)
	 * @비고
	 * 
	 * </pre>
	 */
	@Override
	public int deleteNotice(Map<String, Object> inParam) throws Exception {
		int outParam = 0;
		try {

			outParam = adminNoticeDao.deleteNotice(inParam);					//공지사항 삭제
			
		}catch (Exception e) {
			throw e;
		}
		return outParam;
	}
}
