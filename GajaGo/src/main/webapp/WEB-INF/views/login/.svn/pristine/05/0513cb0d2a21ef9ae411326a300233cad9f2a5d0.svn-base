package com.ssocio.sharing.dao.admin;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Repository;

import com.ssocio.sharing.cmmn.web.RspnsCnst;

@Repository
public class AdminSearchBoxManageDao {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminSearchBoxManageDao.class);
	
	/* --------------------------------------------------------------------------
		# sqlSession 설정
		 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
		 -- 하나만 사용할 경우 @Autowired
	   --------------------------------------------------------------------------*/
	@Resource(name="sqlSessionAdmin")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	public List<Map<String, Object>> getSearchBoxList(Map<String, Object> inParam) throws Exception {
		// TODO Auto-generated method stub
		logger.info("getSearchBoxList Start");
		List<Map<String, Object>> list = null;
		List<Map<String, Object>> returnMapList = new ArrayList<Map<String, Object>>();
		try {
			list =  sqlSession.selectList("adminSearchBoxMapper.getSearchBoxList", inParam);
//			for ( int i =0; i < list.size(); i++ ) {
//				Map<String, Object> map = list.get(i);
//				Map<String, Object> storeMap = new HashMap<String, Object>();
//			}
		} catch (Exception e) {
			logger.error("getSearchBoxList DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	public Map<String, Object> setSearchBoxList(Map<String, Object> inParam) throws Exception {
		// TODO Auto-generated method stub
		logger.info("setSearchBoxList Start");
		Map<String, Object> map = new HashMap<String, Object>();
		try {
			String no = String.valueOf(inParam.get("no"));
			int result = 0;
			if ( no != null && !no.trim().equalsIgnoreCase("-1")) {
				result =  sqlSession.update("adminSearchBoxMapper.updateSearchBox", inParam);
			} else {
				result =  sqlSession.insert("adminSearchBoxMapper.insertSearchBox", inParam);
			}
			map.put("result", result);
		} catch (Exception e) {
			logger.error("setSearchBoxList DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}
	
	public Map<String, Object> deleteSearchBoxList(Map<String, Object> inParam) throws Exception {
		// TODO Auto-generated method stub
		logger.info("setSearchBoxList Start");
		Map<String, Object> map = new HashMap<String, Object>();
		try {
			int result =  sqlSession.insert("adminSearchBoxMapper.deleteSearchBox", inParam);
			map.put("result", result);
		} catch (Exception e) {
			logger.error("deleteSearchBox DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}
	
	public List<Map<String, Object>> getSearchBoxListByApp(Map<String, Object> inParam) throws Exception {
		// TODO Auto-generated method stub
		logger.info("setSearchBoxList Start");
		List<Map<String, Object>> list = null;
		List<Map<String, Object>> returnMapList = new ArrayList<Map<String, Object>>();
		try {
			list =  sqlSession.selectList("adminSearchBoxMapper.getSearchBoxListByApp", inParam);
//			for ( int i =0; i < list.size(); i++ ) {
//				Map<String, Object> map = list.get(i);
//				Map<String, Object> storeMap = new HashMap<String, Object>();
//			}
		} catch (Exception e) {
			logger.error("getSearchBoxList DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
}
