package com.ssocio.sharing.service.admin;

import java.util.Map;

import org.springframework.ui.ModelMap;

/**
 * <pre>
 * 공통 코드 서비스 인터페이스
 * 공통 코드 처리를 위한 서비스 인터 페이스
 * @author S.B.LEE
 * @version
 * @since 2015. 7. 9. 오후 5:45:06
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 9.	|	S.B.LEE	|신규
 * @비고
 * </pre>
 */
public interface AdminCodeService {
	/**
	 * <pre>
	 * Code 리스트 조회
	 * Code 리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 5:47:22
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public ModelMap selectListCode(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 그룹코드 중복 체크
	 * 그룹코드 등록시 그룹코드의 중복 사용을 체크 합니다.
	 * @param strParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 7:24:12
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public boolean chkOverlapGroupCode(String strParam) throws Exception;
	
	/**
	 * <pre>
	 * 그룹코드 등록
	 * 그룹코드를 등록한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 7:46:31
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public int insertGroupCodeReg(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 그룹코드 사용여부 변경
	 * 그룹코드의 사용여부를 변경한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 8:30:30
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public int updateGroupUseYn(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 그룹코드 조회
	 * 그룹코드를 조회한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 8:43:39
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public ModelMap selectGroup(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * Code그룹별 리스트 조회
	 * Code그룹별 리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 9:22:53
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public ModelMap selectListCodeGroup(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 그룹코드 수정
	 * 그룹코드를 수정한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 9:45:37
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public int updateGroupCodeReg(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 그룹코드 삭제
	 * 그룹코드를 삭제한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 9:34:20
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public int deleteGroupReg(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 공통코드 중복 체크
	 * 공통코드 등록시 그룹코드의 중복 사용을 체크 합니다.
	 * @param strParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 10:18:34
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public boolean chkOverlapCode(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 공통코드 등록
	 * 공통코드를 등록한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 10:35:18
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public int insertCodeReg(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 공통코드 수정
	 * 공통코드를 수정한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 10:35:21
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public int updateCodeReg(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 코드 정렬순서 변경
	 * 코드 정렬순서를 변경합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 10:52:15
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public int updateCodeSort(String arryGroupCode, String[] arryCodeCd, String[] arrySortSeq) throws Exception;
	
	/**
	 * <pre>
	 * 공통코드 조회
	 * 공통코드를 조회한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 11:38:20
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public ModelMap selectCode(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 공통코드 사용여부 변경
	 * 공통코드의 사용여부를 변경한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 11:48:26
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public int updateCodeUseYn(Map<String, Object> inParam) throws Exception;
	
	/**
	 * <pre>
	 * 공통코드 삭제
	 * 공통코드를 삭제한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 11:54:43
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public int deleteCodeReg(Map<String, Object> inParam) throws Exception;

	/**
	 * <pre>
	 * 제휴택배사 코드조회
	 * 제휴택배사 코드조회한다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 9. 오후 11:54:43
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public ModelMap selectDlvCompList(Map<String, Object> inParam) throws Exception;
}
