package com.ssocio.sharing.controller.mobile;

import java.net.URLDecoder;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.openmarket.common.Constant;
import com.ssocio.sharing.cmmn.admin.util.HttpUrlConnectionUtil;
import com.ssocio.sharing.cmmn.util.CmmnCnst;
import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.service.web.MobileJoinService;
import com.ssocio.sharing.service.web.WebCommonService;
import com.ssocio.sharing.vo.web.WebSession;


/**
 * <pre>
 * 메인 컨트롤러
 * 메인 처리를 위한 컨트롤러
 * @author S.B.LEE
 * @version
 * @since 2015. 9. 14. 오후 1:52:33
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 9. 14.	|	조은별		|신규
 * @비고
 * </pre>
 */
@Controller
public class MobileJoinController extends MobileReferController {

	// --------------------------------------------------------------------------
		// # Log 설정
		// --------------------------------------------------------------------------
		@SuppressWarnings ("unused")
		private static final Logger logger = LoggerFactory.getLogger(MobileJoinController.class);

		// --------------------------------------------------------------------------
		// # Service 설정
		// --------------------------------------------------------------------------
		@Autowired
		private MobileJoinService mobileJoinService;

		@Autowired
		private WebCommonService webCommonService;



		/**
		 * <pre>
		 * 구매회원 약관
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/termsView.do")
		public ModelAndView termsView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE termsView START☆★☆★☆★☆★☆★☆★☆");

			ModelAndView mav = new ModelAndView("web/join/termsView");
			String AGR_GB_CD[] = request.getParameterValues("AGR_GB_CD[]");

			try {
				mav.addObject("list", mobileJoinService.selectTerms(inParam,AGR_GB_CD));
			} catch (Exception e) {
				e.printStackTrace();
			}

			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE termsView END☆★☆★☆★☆★☆★☆★☆");
			return mav;
		}



		/**
		 * <pre>
		 * 약관 상세
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/termsViewDesc.do")
		public ModelAndView termsViewDesc(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE termsView START☆★☆★☆★☆★☆★☆★☆");

			ModelAndView mav = new ModelAndView("web/join/termsViewDesc");


			try {
				mav.addObject("DESC", mobileJoinService.selectTermsDesc(inParam));
			} catch (Exception e) {
				e.printStackTrace();
			}

			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE termsView END☆★☆★☆★☆★☆★☆★☆");
			return mav;
		}



		/**
		 * <pre>
		 * 회원가입 화면 호출
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/joinView.do")
		public ModelAndView joinView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE joinView START☆★☆★☆★☆★☆★☆★☆");
			
			if(request.getHeader("x_app_version") != null && request.getHeader("x_app_name") != null ) {
				request.getSession().setAttribute("X_APP_VERSION_2", request.getHeader("x_app_version"));
				request.getSession().setAttribute("X_APP_NAME_2", request.getHeader("x_app_name"));
			}
			
			ModelAndView mav = new ModelAndView("web/join/joinView");

			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE joinView END☆★☆★☆★☆★☆★☆★☆");
			return mav;
		}


		/**
		 * <pre>
		 * 이메일 입력 화면
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/joinEmailView.do")
		public ModelAndView joinEmailView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE joinEmailView START☆★☆★☆★☆★☆★☆★☆");

			ModelAndView mav = new ModelAndView("web/join/joinEmailView");

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");

			inParam.put("AGR_SEQ_VER", AGR_SEQ_VER);
			mav.addObject("params", inParam);

			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE joinEmailView END☆★☆★☆★☆★☆★☆★☆");
			return mav;
		}



		/**
		 * <pre>
		 * 이메일 중복체크
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/selectEamilChek.do")
		public ModelAndView selectEamilChek(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE selectEamilChek START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("jsonView");
			try {
				mav.addObject("selectEamilChek", mobileJoinService.selectEamilChek(inParam).get("selectEamilChek"));
			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}



		/**
		 * <pre>
		 * 미니샵 경로 체크
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/selectShopChek.do")
		public ModelAndView selectShopChek(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE selectShopChek START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("jsonView");
			try {
				mav.addObject("selectShopChek", mobileJoinService.selectShopChek(inParam).get("selectShopChek"));
			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}


		/**
		 * <pre>
		 * 인증회원인지 체크
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/selectMberChk.do")
		public ModelAndView selectKakaoMberChk(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE selectMberChk START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("jsonView");
			try {
				if ("FBO".equals(inParam.get("SSO_GB_CD"))) {
					inParam.put("EMAIL", inParam.get("fbEmail"));
				} else if ("KKO".equals(inParam.get("SSO_GB_CD"))) {
					inParam.put("EMAIL", URLDecoder.decode((String)inParam.get("MBER_NICK"), "UTF-8"));
				}

				mav.addObject("selectMberChk", mobileJoinService.selectMberChk(inParam));
				mav.addObject("selectEamilChek", mobileJoinService.selectEamilChek(inParam).get("selectEamilChek"));
			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}



		// 사용하지않음
		@RequestMapping("/mobile/join/confirmPhonView.do")
		public ModelAndView confirmPhonView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE confirmPhonView START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/join/confirmPhonView");
			LoggerUtil.writeMap(inParam);

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");

			inParam.put("AGR_SEQ_VER", AGR_SEQ_VER);

			try {
				mav.addObject("params", inParam);
			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}


		// 사용하지 않음
		@RequestMapping("/mobile/join/confirmChekView.do")
		public ModelAndView confirmChekView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE confirmPhonView START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/join/confirmChekView");
			LoggerUtil.writeMap(inParam);

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");

			inParam.put("AGR_SEQ_VER", AGR_SEQ_VER);

			try {
				mav.addObject("params", inParam);
			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}


		// 사용하지 않음
		@RequestMapping("/mobile/join/selectconfirmChek.do")
		public ModelAndView selectconfirmChek(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE confirmPhonView START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("jsonView");
			LoggerUtil.writeMap(inParam);
			try {
				mav.addObject("selectconfirmChek", 0);
			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}


		/**
		 * <pre>
		 * 개인구매 회원가입
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/insertUserMber.do")
		public ModelAndView insertUserMber(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE insertUserMber START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/join/complete");
			Map<String, Object> emailParam = new HashMap<String, Object>();

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");
			String JOIN_CHAN_CD="";
			String userAgent = (String)request.getHeader("User-Agent");
//			if(userAgent.indexOf("Android")>-1){
//				JOIN_CHAN_CD = "10";//Android
//			}else if(userAgent.indexOf("iPhone")>-1){
//				JOIN_CHAN_CD = "20";//IOS
//			}else{
//				JOIN_CHAN_CD = "30";//Mobile //40:PC
//			}

			//모바일웹으로 가입시 (Android, IOS) → Mobile
			//Android 앱으로 가입시 → Android , IOS 앱으로 가입시 → IOS
			//PC웹/Selleroffice로 가입시 → PC
			if(request.getSession().getAttribute("APP")!=null && request.getSession().getAttribute("APP")!= "" && request.getSession().getAttribute("APP").equals("SSOCIO")){
				if(userAgent.indexOf("Android")>-1){
					JOIN_CHAN_CD = "10";//Android
				}else if(userAgent.indexOf("iPhone")>-1){
					JOIN_CHAN_CD = "20";//IOS
				}
			}else{
				JOIN_CHAN_CD = "30";//Mobile // 40:PC -> seller회원가입
			}

			try {

				inParam.put("JOIN_STATE", "0"); // 가입

				if ( ("FBO").equals(inParam.get("SSO_GB_CD")) ) {
					inParam.put("MBER_STAT_CD", "10");
					inParam.put("MBER_EMAIL", inParam.get("fbEmail"));
				} else if ( ("KKO").equals(inParam.get("SSO_GB_CD")) ){
					inParam.put("MBER_STAT_CD", "10");
					inParam.put("MBER_NICK", URLDecoder.decode((String)inParam.get("MBER_NICK"), "UTF-8"));
				} else {
					inParam.put("MBER_STAT_CD", "40");
				}

//				if ( ("KKO").equals(inParam.get("SSO_GB_CD")) ) {
//					inParam.put("MBER_NICK", URLDecoder.decode((String)inParam.get("MBER_NICK"), "UTF-8"));
//				}
//				inParam.put("MBER_STAT_CD", "40");
				mobileJoinService.insertUserMber(inParam,AGR_SEQ_VER,JOIN_CHAN_CD);
				mav.addObject("params", inParam);

				//신청서 이메일 발송
				String innerHtml = "<html>";
				emailParam.put("gubun", "join_auth");
				emailParam.put("from_email", "ssocio@rocomo.com");
				emailParam.put("from_nm", "SSOCIO");

				if ( ("FBO").equals(inParam.get("SSO_GB_CD")) ) {
					emailParam.put("to_email", inParam.get("fbEmail"));
					emailParam.put("to_nm", inParam.get("fbEmail"));
				} else {
					emailParam.put("to_email", inParam.get("MBER_EMAIL"));
					emailParam.put("to_nm", inParam.get("MBER_EMAIL"));
				}

				emailParam.put("ishtml", "Y");
				emailParam.put("subject", "[SSOCIO]회원 가입 안내");
				emailParam.put("msg", innerHtml);
				emailParam.put("req_site", "www");
				emailParam.put("tplcode", "JOIN_PER_BUYER");
				HttpUrlConnectionUtil hcu = new HttpUrlConnectionUtil();
				if ( !"KKO".equals(inParam.get("SSO_GB_CD")) ) {
					hcu.sendEmail(mobileJoinService.selectsiteIFUrl(), "POST", emailParam);
				}



			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}



		/**
		 * <pre>
		 * 카카오톡 회원가입
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/insertSnsUserMber.do")
		public ModelAndView insertSnsUserMber(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE insertSnsUserMber START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("jsonView");
			ModelMap mm = new ModelMap();
			int count = 0;
			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");
			String JOIN_CHAN_CD="";
			String userAgent = (String)request.getHeader("User-Agent");
//			if(userAgent.indexOf("Android")>-1){
//				JOIN_CHAN_CD = "10";
//			}else if(userAgent.indexOf("iPhone")>-1){
//				JOIN_CHAN_CD = "20";
//			}else{
//				JOIN_CHAN_CD = "30";
//			}
			if(request.getSession().getAttribute("APP")!=null && request.getSession().getAttribute("APP")!= "" && request.getSession().getAttribute("APP").equals("SSOCIO")){
				if(userAgent.indexOf("Android")>-1){
					JOIN_CHAN_CD = "10";//Android
				}else if(userAgent.indexOf("iPhone")>-1){
					JOIN_CHAN_CD = "20";//IOS
				}
			}else{
				JOIN_CHAN_CD = "30";//Mobile // 40:PC -> seller회원가입
			}

			try {

				inParam.put("JOIN_STATE", "0"); // 가입

				inParam.put("MBER_STAT_CD", "10");
				inParam.put("MBER_NICK", URLDecoder.decode((String)inParam.get("MBER_NICK"), "UTF-8"));

				if ( ("FBO").equals(inParam.get("SSO_GB_CD")) ) {
					inParam.put("MBER_EMAIL", URLDecoder.decode((String)inParam.get("fbEmail"), "UTF-8"));
					inParam.put("EMAIL", URLDecoder.decode((String)inParam.get("fbEmail"), "UTF-8"));
					inParam.put("FB_EMAIL", URLDecoder.decode((String)inParam.get("fbEmail"), "UTF-8"));
				} else if (("KKO").equals(inParam.get("SSO_GB_CD"))) {
					inParam.put("MBER_EMAIL", inParam.get("SSO_MBER_ID"));
				} else {
					inParam.put("MBER_STAT_CD", "40");
				}

				count = mobileJoinService.insertSnsUserMber(inParam, AGR_SEQ_VER, JOIN_CHAN_CD);
				if ( count == 1 ) {
					if ( ("FBO").equals(inParam.get("SSO_GB_CD"))) {
						WebSession webSession = webCommonService.setFacebookLogin(inParam);
						if(webSession != null && webSession.getLogin()){
							mav.addObject("result", true);
							mav.addObject("MBER_STAT_CD", webSession.getMBER_STAT_CD());
							mav.addObject("SERIAL_KEY", webSession.getSERIAL_KEY());
							HttpSession session  = request.getSession();
							session.setAttribute("user", webCommonService.setFacebookLogin(inParam));
						}
					} else if (("KKO").equals(inParam.get("SSO_GB_CD"))) {
						WebSession webSession = webCommonService.setKakaoLogin(inParam);
						if(webSession != null && webSession.getLogin()){
							mav.addObject("result", true);
							mav.addObject("MBER_STAT_CD", webSession.getMBER_STAT_CD());
							mav.addObject("SERIAL_KEY", webSession.getSERIAL_KEY());
							HttpSession session  = request.getSession();
							session.setAttribute("user", webCommonService.setKakaoLogin(inParam));
						}
					}

				}
				mav.addObject("params", inParam);
				mav.addObject("count", count);

			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}



		/**
		 * <pre>
		 * 사업자 가입
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/joinBizView.do")
		public ModelAndView joinBizView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE joinEmailView START☆★☆★☆★☆★☆★☆★☆");

			ModelAndView mav = new ModelAndView("web/join/joinBizView");

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");

			inParam.put("AGR_SEQ_VER", AGR_SEQ_VER);
			mav.addObject("params", inParam);

			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE joinBizView END☆★☆★☆★☆★☆★☆★☆");
			return mav;
		}



		/**
		 * <pre>
		 * 사업자 번호 체크
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/selectCmpnyChek.do")
		public ModelAndView selectCmpnyChek(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE selectCmpnyChek START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("jsonView");
			try {
				mav.addObject("selectCmpnyChek", mobileJoinService.selectCmpnyChek(inParam).get("selectCmpnyChek"));
				//실명인증 추가

			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}


		/**
		 * <pre>
		 * 사업자 구매회원가입 이메일 입력
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/bizEmailView.do")
		public ModelAndView bizEmailView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE bizEmailView START☆★☆★☆★☆★☆★☆★☆");

			ModelAndView mav = new ModelAndView("web/join/bizEmailView");

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");

			inParam.put("AGR_SEQ_VER", AGR_SEQ_VER);
			mav.addObject("params", inParam);

			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE bizEmailView END☆★☆★☆★☆★☆★☆★☆");
			return mav;
		}



		// 사용하지않음
		@RequestMapping("/mobile/join/compnyPhonView.do")
		public ModelAndView compnyPhonView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE compnyPhonView START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/join/compnyPhonView");
			LoggerUtil.writeMap(inParam);

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");

			inParam.put("AGR_SEQ_VER", AGR_SEQ_VER);
			mav.addObject("params", inParam);

			try {
				mav.addObject("params", inParam);
			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}


		// 사용하지 않음
		@RequestMapping("/mobile/join/compnyChekView.do")
		public ModelAndView compnyChekView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE compnyChekView START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/join/compnyChekView");
			LoggerUtil.writeMap(inParam);

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");

			inParam.put("AGR_SEQ_VER", AGR_SEQ_VER);

			try {
				mav.addObject("params", inParam);
			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}



		/**
		 * <pre>
		 * 사업자 가입
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/insertCompnyMber.do")
		public ModelAndView insertCompnyMber(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE insertCompnyMber START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/join/complete");
			LoggerUtil.writeMap(inParam);
			String lowerEmail = ((String)inParam.get("MBER_EMAIL")).toLowerCase();
			inParam.put("MBER_EMAIL", lowerEmail);
			Map<String, Object> emailParam = new HashMap<String, Object>();
			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");
			String JOIN_CHAN_CD="";
			String userAgent = (String)request.getHeader("User-Agent");
//			if(userAgent.indexOf("Android")>-1){
//				JOIN_CHAN_CD = "10";
//			}else if(userAgent.indexOf("iPhone")>-1){
//				JOIN_CHAN_CD = "20";
//			}else{
//				JOIN_CHAN_CD = "30";
//			}
			if(request.getSession().getAttribute("APP")!=null && request.getSession().getAttribute("APP")!= "" && request.getSession().getAttribute("APP").equals("SSOCIO")){
				if(userAgent.indexOf("Android")>-1){
					JOIN_CHAN_CD = "10";//Android
				}else if(userAgent.indexOf("iPhone")>-1){
					JOIN_CHAN_CD = "20";//IOS
				}
			}else{
				JOIN_CHAN_CD = "30";//Mobile // 40:PC -> seller회원가입
			}

			try {

				inParam.put("JOIN_STATE", "0"); // 가입

				// 회원상태 코드 가입완료
				inParam.put("MBER_STAT_CD", CmmnCnst.cmmn40);

				mobileJoinService.insertCompnyMber(inParam,AGR_SEQ_VER,JOIN_CHAN_CD);
				mav.addObject("params", inParam);

				//신청서 이메일 발송
				String innerHtml = "<html>";
				emailParam.put("gubun", "join_auth");
				emailParam.put("from_email", "ssocio@rocomo.com");
				emailParam.put("from_nm", "SSOCIO");
				emailParam.put("to_email", inParam.get("MBER_EMAIL"));
				emailParam.put("to_nm", inParam.get("MBER_EMAIL"));

				emailParam.put("ishtml", "Y");
				emailParam.put("subject", "[SSOCIO]가입 완료 안내");
				emailParam.put("msg", innerHtml);
				emailParam.put("req_site", "www");
				emailParam.put("tplcode", "JOIN_COMP_BUYER");
				HttpUrlConnectionUtil hcu = new HttpUrlConnectionUtil();
				hcu.sendEmail(mobileJoinService.selectsiteIFUrl(), "POST", emailParam);

				inParam.put("JOIN_STATE", "4"); // 가입
			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}



		/**
		 * <pre>
		 * 판매회원 가입
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/sellView.do")
		public ModelAndView sellView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE sellView START☆★☆★☆★☆★☆★☆★☆");
			
			if(request.getHeader("x_app_version") != null && request.getHeader("x_app_name") != null ) {
				request.getSession().setAttribute("X_APP_VERSION_2", request.getHeader("x_app_version"));
				request.getSession().setAttribute("X_APP_NAME_2", request.getHeader("x_app_name"));
			}

			ModelAndView mav = new ModelAndView("web/join/sellView");

			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE sellView END☆★☆★☆★☆★☆★☆★☆");
			return mav;
		}




		/**
		 * <pre>
		 * 로그인 체크  (세션)
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/sessionChek.do")
		public ModelAndView sessionChek(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE sessionChek START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("jsonView");
			try {

				HttpSession session  = request.getSession();
				session.getAttribute("user");
				WebSession webSession = null;
				webSession= (WebSession) session.getAttribute("user");

				if(webSession == null){
					mav.addObject("result", "N");
				}else{
					mav.addObject("result", "Y");

				}

			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}


		/**
		 * <pre>
		 * 이미 판매자인지 체크
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/sellerCheck.do")
		public ModelAndView sellerCheck(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE sellerCheck START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("jsonView");
			try {

				HttpSession session  = request.getSession();
				session.getAttribute("user");
				WebSession webSession = null;
				webSession= (WebSession) session.getAttribute("user");
				inParam.put("MBER_SEQ", webSession.getMBER_SEQ());

				mav.addObject("result", mobileJoinService.sellerMber(inParam));


			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}


		/**
		 * <pre>
		 * 사업자 인지 체크
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/cmpnyCheck.do")
		public ModelAndView cmpnyCheck(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE cmpnyCheck START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("jsonView");
			try {

				HttpSession session  = request.getSession();
				session.getAttribute("user");
				WebSession webSession = null;
				webSession= (WebSession) session.getAttribute("user");
				inParam.put("MBER_SEQ", webSession.getMBER_SEQ());

				mav.addObject("result", mobileJoinService.cmpnyCheck(inParam));


			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}


		/**
		 * <pre>
		 * 판매회원 약관 호출
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/sellTermsView.do")
		public ModelAndView sellTermsView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE sellTermsView START☆★☆★☆★☆★☆★☆★☆");
			if(request.getHeader("x_app_version") != null && request.getHeader("x_app_name") != null ) {
				request.getSession().setAttribute("X_APP_VERSION_2", request.getHeader("x_app_version"));
				request.getSession().setAttribute("X_APP_NAME_2", request.getHeader("x_app_name"));
			}
			ModelAndView mav= new ModelAndView("web/join/sellTermsView");

			String temp = (String) inParam.get("AGR_GB_CD");
			
			
			/*
			 *	[2015-11-30] rocokang
			 *	앱에서 판매회원 전환 시, sellTermsView.do 를 호출하고 있다.
			 *
			 *	회원가입 등 다른데서 쓰고있는 sellTermsView.do 들을 sellTermsViewComm.do 을 추가 및 사용 하도록 수정.
			 *	sellTermsView.do 는 판매회원 전환을 위한 전용 컨트롤러로 용도를 변경함.
			 *	
			 */
			
			temp = "01,02,03";
			String AGR_GB_CD[] = temp.split(",");
			
			

				if(inParam.get("CALL").equals("1")){
					HttpSession session  = request.getSession();
					session.getAttribute("user");
					WebSession webSession = null;
					webSession= (WebSession) session.getAttribute("user");
					inParam.put("MBER_SEQ", webSession.getMBER_SEQ());
					inParam.put("MBER_EMAIL", webSession.getMBER_EMAIL());
					logger.debug("MBER_EMAIL-->" + inParam.get("MBER_EMAIL"));
				}

				LoggerUtil.writeMap(inParam);

			try {
				mav.addObject("list", mobileJoinService.selectTermsSwitchSeller(inParam,AGR_GB_CD));
			} catch (Exception e) {
				e.printStackTrace();
			}

			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE sellTermsView END☆★☆★☆★☆★☆★☆★☆");
			return mav;
		}
		
		@RequestMapping("/mobile/join/sellTermsViewComm.do")
		public ModelAndView sellTermsViewComm(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE sellTermsViewComm START☆★☆★☆★☆★☆★☆★☆");

			ModelAndView mav= new ModelAndView("web/join/sellTermsView");

			String temp = (String) inParam.get("AGR_GB_CD");
			String AGR_GB_CD[] = temp.split(",");

				if(inParam.get("CALL").equals("1")){
					HttpSession session  = request.getSession();
					session.getAttribute("user");
					WebSession webSession = null;
					webSession= (WebSession) session.getAttribute("user");
					inParam.put("MBER_SEQ", webSession.getMBER_SEQ());
					inParam.put("MBER_EMAIL", webSession.getMBER_EMAIL());
					logger.debug("MBER_EMAIL-->" + inParam.get("MBER_EMAIL"));
				}

				LoggerUtil.writeMap(inParam);

			try {
				mav.addObject("list", mobileJoinService.selectTerms(inParam,AGR_GB_CD));
			} catch (Exception e) {
				e.printStackTrace();
			}

			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE sellTermsViewComm END☆★☆★☆★☆★☆★☆★☆");
			return mav;
		}
		
		/**
		 * <pre>
		 * 판매회원 이메일 입력
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/sellEmailView.do")
		public ModelAndView sellEmailView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE sellEmailView START☆★☆★☆★☆★☆★☆★☆");

			ModelAndView mav = new ModelAndView("web/join/sellEmailView");

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");

			inParam.put("AGR_SEQ_VER", AGR_SEQ_VER);
			mav.addObject("params", inParam);

			logger.info("☆★☆★☆★☆★☆★☆★☆MOBILE sellEmailView END☆★☆★☆★☆★☆★☆★☆");
			return mav;
		}



		// 사용하지 않음
		@RequestMapping("/mobile/join/sellPhoneView.do")
		public ModelAndView sellPhoneView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE sellShopView START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/join/sellPhoneView");
			LoggerUtil.writeMap(inParam);

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");

			inParam.put("AGR_SEQ_VER", AGR_SEQ_VER);
			mav.addObject("params", inParam);

			return mav;
		}



		/**
		 * <pre>
		 * 판매회원 상세정보 입력
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/sellShopView.do")
		public ModelAndView sellShopView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE sellShopView START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/join/sellShopView");
			LoggerUtil.writeMap(inParam);

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");

			inParam.put("AGR_SEQ_VER", AGR_SEQ_VER);
			mav.addObject("params", inParam);

			return mav;
		}


		/**
		 * <pre>
		 * 계좌정보 화면 호출
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/accountChekView.do")
		public ModelAndView accountChek(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE accountChekView START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/join/accountChekView");
			LoggerUtil.writeMap(inParam);

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");

			inParam.put("AGR_SEQ_VER", AGR_SEQ_VER);


			try {
				mav.addObject("params", inParam);
			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}



		/**
		 * <pre>
		 * 판매회원 전환  상세입력 호출
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/chgShopView.do")
		public ModelAndView chgShopView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE chgShopView START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/join/chgShopView");
			LoggerUtil.writeMap(inParam);

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");

			inParam.put("AGR_SEQ_VER", AGR_SEQ_VER);

			try {

				mav.addObject("params", mobileJoinService.confirmYn(inParam));
			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}


		/**
		 * <pre>
		 * 판매회원 전환  계좌번호 입력
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/chgAccountChekView.do")
		public ModelAndView chgAccountChekView(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE chgAccountChekView START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/join/chgAccountChekView");
			LoggerUtil.writeMap(inParam);

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");

			inParam.put("AGR_SEQ_VER", AGR_SEQ_VER);

			try {
				mav.addObject("params", inParam);
			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}


		/**
		 * <pre>
		 * 개인 판매회원 가입
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/insertSellerMber.do")
		public ModelAndView insertSellerMber(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE insertSellerMber START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/join/complete");
			LoggerUtil.writeMap(inParam);
			String lowerEmail = ((String)inParam.get("MBER_EMAIL")).toLowerCase();
			inParam.put("MBER_EMAIL", lowerEmail);
			Map<String, Object> emailParam = new HashMap<String, Object>();

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");
			String JOIN_CHAN_CD="";

			String userAgent = (String)request.getHeader("User-Agent");
//			if(userAgent.indexOf("Android")>-1){
//				JOIN_CHAN_CD = "10";
//			}else if(userAgent.indexOf("iPhone")>-1){
//				JOIN_CHAN_CD = "20";
//			}else{
//				JOIN_CHAN_CD = "30";
//			}
			if(request.getSession().getAttribute("APP")!=null && request.getSession().getAttribute("APP")!= "" && request.getSession().getAttribute("APP").equals("SSOCIO")){
				if(userAgent.indexOf("Android")>-1){
					JOIN_CHAN_CD = "10";//Android
				}else if(userAgent.indexOf("iPhone")>-1){
					JOIN_CHAN_CD = "20";//IOS
				}
			}else{
				JOIN_CHAN_CD = "30";//Mobile // 40:PC -> seller회원가입
			}

			try {
				WebSession user = (WebSession)request.getSession().getAttribute("user");
				inParam.put("JOIN_STATE", "0"); // 가입

				// 회원상태 코드 가입완료
				inParam.put("MBER_STAT_CD", CmmnCnst.cmmn40);
				String mberseq = mobileJoinService.insertSellerMber(inParam,AGR_SEQ_VER,JOIN_CHAN_CD);
				mav.addObject("params", inParam);

				//최초구매 최초 인증이면 포인트 지급

				try {
					inParam.put("MBER_SEQ", mberseq);
					webCommonService.updateMberPoint(inParam);
				} catch (Exception e) {
					e.printStackTrace();
				}
				
				//최초 인증시 신규가입쿠폰 지급
				List<String> cpnGbCdList = new ArrayList<String>();
				cpnGbCdList.add(Constant.CPN_NEW_MBER);   // 신규가입쿠폰
				
				inParam.put("MBER_SEQ", mberseq);
				inParam.put("cpn_gb_cd_arr", cpnGbCdList);
				
				inParam = webCommonService.insertCpn(inParam);

				//신청서 이메일 발송
				String innerHtml = "<html>";
				emailParam.put("gubun", "join_auth");
				emailParam.put("from_email", "ssocio@rocomo.com");
				emailParam.put("from_nm", "SSOCIO");
				emailParam.put("to_email", inParam.get("MBER_EMAIL"));
				emailParam.put("to_nm", inParam.get("MBER_EMAIL"));

				emailParam.put("ishtml", "Y");
				emailParam.put("subject", "[SSOCIO]가입 완료 안내");
				emailParam.put("msg", innerHtml);
				emailParam.put("req_site", "www");
				emailParam.put("tplcode", "JOIN_PER_SELLER");
				HttpUrlConnectionUtil hcu = new HttpUrlConnectionUtil();
				hcu.sendEmail(mobileJoinService.selectsiteIFUrl(), "POST", emailParam);

				inParam.put("JOIN_STATE", "2"); // 전환


			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}



		/**
		 * <pre>
		 * 판매회원 전환
		 *
		 * @param paramDto
		 * @return
		 * @throws Exception
		 * @date 2015. 9. 10. 오후 5:50:55
		 * @author 조은별
		 * </pre>
		 */
		@RequestMapping("/mobile/join/updateSellerMber.do")
		public ModelAndView updateSellerMber(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE updateSellerMber START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/join/complete");
			LoggerUtil.writeMap(inParam);

			String AGR_SEQ_VER[] = request.getParameterValues("AGR_SEQ_VER[]");
			Map<String, Object> emailParam = new HashMap<String, Object>();

			try {
				WebSession user = (WebSession)request.getSession().getAttribute("user");
				mobileJoinService.updateSellerMber(inParam,AGR_SEQ_VER);
				inParam.put("JOIN_STATE", "1"); // 전환
				
				HttpSession session  = request.getSession();
				session.setAttribute("user", mobileJoinService.getMberInfo(inParam));
				
				mav.addObject("params", inParam);

				//신청서 이메일 발송
				String innerHtml = "<html>";
				emailParam.put("gubun", "join_auth");
				emailParam.put("from_email", "ssocio@rocomo.com");
				emailParam.put("from_nm", "SSOCIO");
				emailParam.put("to_email", inParam.get("MBER_EMAIL"));
				emailParam.put("to_nm", inParam.get("MBER_EMAIL"));

				emailParam.put("ishtml", "Y");
				emailParam.put("subject", "[SSOCIO]가입 완료 안내");
				emailParam.put("msg", innerHtml);
				emailParam.put("req_site", "www");
				emailParam.put("tplcode", "CHG_TO_PER_SELLER");
				HttpUrlConnectionUtil hcu = new HttpUrlConnectionUtil();
				try {
					hcu.sendEmail(mobileJoinService.selectsiteIFUrl(), "POST", emailParam);
				} catch (Exception e) {
					e.printStackTrace();
				}
				inParam.put("JOIN_STATE", "3"); // 전환

				//최초구매 최초 인증이면 포인트 지급
				try {
					webCommonService.updateMberPoint(inParam);
				} catch (Exception e) {
					e.printStackTrace();
				}
				
				//최초 인증시 신규가입쿠폰 지급
				List<String> cpnGbCdList = new ArrayList<String>();
				cpnGbCdList.add(Constant.CPN_NEW_MBER);   // 신규가입쿠폰
				
				inParam.put("MBER_SEQ", user.getMBER_SEQ());
				inParam.put("cpn_gb_cd_arr", cpnGbCdList);
				
				inParam = webCommonService.insertCpn(inParam);

			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}


		// 사용하지 않음
		@RequestMapping("/mobile/join/phone.do")
		public ModelAndView phone(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE phone START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("jsonView");
			try {
				mav.addObject("result", "0000");
				//실명인증 추가

			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}



}
