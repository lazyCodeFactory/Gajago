/**<pre>
 * 1. Project Name : SSOCIO
 * 2. Package Name : com.ssocio.sharing.dao.web
 * 3. File Name	   : WebBuyRentalDao.java
 * 4. Date		   : 오후 2:20 2015-08-19
 * 5. Author	   : H.M.Yang
 * 6. Note		   : 
 * </pre>
 */
package com.ssocio.sharing.dao.web;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.cmmn.web.RspnsCnst;

/**
 * <pre>
 * 구매관리 렌탈상품 DAO
 * 구매관리 렌탈상품 DAO
 * @author H.M.Yang
 * @version 
 * @since 2015. 8. 19. 오후 2:20:00
 * @see 
 * @History 
 *  Date          |    author    | 변경내용  
 *	2015. 8. 19.  |    H.M.Yang  | 신규
 * @Todo
 * </pre>
 */
@Component
public class WebBuyRentalDao {
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(WebBuyRentalDao.class);
	
	// --------------------------------------------------------------------------
	// # sqlSession 설정
	//	 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
	//	 -- 하나만 사용할 경우 @Autowired
	// --------------------------------------------------------------------------
	@Resource(name="sqlSessionMobile")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	/**
	 * <pre>
	 * 렌탈상품 신청 내역 조회
	 * 렌탈상품 신청 내역 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 8. 19. 오후 2:20:00
	 * @author H.M.Yang
	 * @비고
	 * 
	 * </pre>
	 */
	public List<Map<String, Object>> selectListRentalReqHist(Map<String, Object> paramDto) throws Exception{
		logger.info("selectListRentalReqHist Start");
		return sqlSession.selectList("webBuyRentalMapper.selectListRentalReqHist", paramDto);
	}
	
	/**
	 * <pre>
	 * 렌탈상품 신청 내역 검색 건수 조회
	 * 렌탈상품 신청 내역 검색 건수 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 8. 19. 오후 2:20:00
	 * @author H.M.Yang
	 * @비고
	 * 
	 * </pre>
	 */
	public int selectListRentalReqHistTotCnt(Map<String, Object> paramDto) throws Exception{
		logger.info("selectListRentalReqHistTotCnt Start");
		return sqlSession.selectOne("webBuyRentalMapper.selectListRentalReqHistTotCnt", paramDto);
	}
	
	/**
	 * <pre>
	 * 렌탈상품 신청 내역 상품 조회
	 * 렌탈상품 신청 내역 상품 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 8. 19. 오후 2:20:00
	 * @author H.M.Yang
	 * @비고
	 * 
	 * </pre>
	 */
	public List<Map<String, Object>> selectListRentalReqProd(Map<String, Object> paramDto) throws Exception{
		logger.info("selectListRentalReqProd Start");
		return sqlSession.selectList("webBuyRentalMapper.selectListRentalReqProd", paramDto);
	}
	
	/**
	 * <pre>
	 * 공통 상품별 렌탈 신청취소 정보를 저장
	 * 공통 상품별 렌탈 신청취소 정보를 저장 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 8. 19. 오후 2:20:00
	 * @author H.M.Yang
	 * @비고
	 * 
	 * </pre>
	 */
	public int updateRentalCancel(Map<String, Object> paramDto) throws Exception {
		logger.info("updateRentalCancel Start");
		int count =  sqlSession.update("webBuyRentalMapper.updateRentalCancel", paramDto);
		return count;
	}
	
	
	public int selectRentalCancelCnt(Map<String, Object> paramDto) throws Exception{
		logger.info("selectRentalCancelCnt Start");
		return sqlSession.selectOne("webBuyRentalMapper.selectRentalCancelCnt", paramDto);
	}
	
}