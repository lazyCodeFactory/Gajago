/**<pre>
 * 1. Project Name : SSOCIO
 * 2. Package Name : com.ssocio.sharing.service.web
 * 3. File Name	   : WebBuySharingServiceImpl.java
 * 4. Date		   : 오후 2:20 2015-08-19
 * 5. Author	   : H.M.Yang
 * 6. Note		   :
 * </pre>
 */
package com.ssocio.sharing.service.web;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.transaction.interceptor.TransactionAspectSupport;
import org.springframework.ui.ModelMap;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.ssocio.sharing.cmmn.admin.util.FileUtil;
import com.ssocio.sharing.cmmn.util.CmmnCnst;
import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.PaymentUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.cmmn.web.util.WebMobilePaging;
import com.ssocio.sharing.dao.web.WebBuyDivideDao;
import com.ssocio.sharing.dao.web.WebBuyRentalDao;
import com.ssocio.sharing.dao.web.WebBuySaleDao;
import com.ssocio.sharing.dao.web.WebBuySharingDao;
import com.ssocio.sharing.dao.web.WebSmartPhoneDao;
import com.ssocio.sharing.cmmn.dao.CommonDao;

/**
 * <pre>
 * 구매관리 셰어링 서비스 인터페이스
 * 구매관리 셰어링 처리를 위한 서비스 인터페이스
 * &#64;author H.M.Yang
 * &#64;version
 * &#64;since 2015. 8. 17. 오후 2:52:00
 * &#64;see
 * &#64;History
 *  Date          |    author    | 변경내용
 *	2015. 8. 17.  |    H.M.Yang  | 신규
 * &#64;Todo
 * </pre>
 */
@Service
public class WebBuySharingServiceImpl implements WebBuySharingService {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(WebBuySharingServiceImpl.class);

	// --------------------------------------------------------------------------
	// # DAO 설정
	// --------------------------------------------------------------------------
	@Resource(name="webBuySharingDao")
	private WebBuySharingDao webBuySharingDao;

	@Resource(name="webSmartPhoneDao")
	private WebSmartPhoneDao webSmartPhoneDao;
	@Resource(name="webBuySaleDao")
	private WebBuySaleDao webBuySaleDao;

	@Resource(name="webBuyDivideDao")
	private WebBuyDivideDao webBuyDivideDao;

	@Resource(name="webBuyRentalDao")
	private WebBuyRentalDao webBuyRentalDao;

	@Resource(name="commonDao")
	private CommonDao commonDao;

	/**
	 * <pre>
	 * 구매관리 메인 조회
	 * 구매관리 메인 조회 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public Map<String, Object> selectBuyMain(Map<String, Object> paramDto) throws Exception {

		try{

				paramDto.put("sharOrdCnt", webBuySharingDao.selectListSharOrderHistTotCnt(paramDto));
				paramDto.put("sharChgCnt", webBuySharingDao.selectListSharExcReqHistTotCnt(paramDto));
				paramDto.put("sharRtnCnt", webBuySharingDao.selectListSharTakeBaReqHistTotCnt(paramDto));
				paramDto.put("sharCancCnt", webBuySharingDao.selectListSharOrderCanHistTotCnt(paramDto));

				paramDto.put("saleOrdCnt", webBuySaleDao.selectListSaleOrderHistTotCnt(paramDto));
				paramDto.put("saleChgCnt", webBuySaleDao.selectListSaleExcReqHistTotCnt(paramDto));
				paramDto.put("saleRtnCnt", webBuySaleDao.selectListSaleTakeBaReqHistTotCnt(paramDto));
				paramDto.put("saleCancCnt", webBuySaleDao.selectListSaleOrderCanHistTotCnt(paramDto));

				paramDto.put("freeSharCnt", webBuyDivideDao.selectListDivideReqHistTotCnt(paramDto));
//
				paramDto.put("rentalCnt", webBuyRentalDao.selectListRentalReqHistTotCnt(paramDto));

				return paramDto;
		}catch(Exception e){
			e.printStackTrace();
		}

		return paramDto;
	}

	/**
	 * <pre>
	 * 셰어링 주문 내역 조회
	 * 셰어링 주문 내역 조회 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectListSharOrderHist(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();

		paramDto.put("S_SEARCH_PERI", StringUtil.nvl((String) paramDto.get("S_SEARCH_PERI"), "3M"));
		int nPageNo = StringUtil.nvlInt((String)paramDto.get("PAGE_NO"), 1);
		int nTotCnt = webBuySharingDao.selectListSharOrderHistTotCnt(paramDto);

		// 페이징 클래스 initialize
		WebMobilePaging pageNav = new WebMobilePaging(nTotCnt, nPageNo, CmmnCnst.MOBILE_LIST_SIZE);

		paramDto.put("START_ROW", pageNav.getStartContent());
		paramDto.put("END_ROW", pageNav.getEndContent());

		mm.put("PAGE_NO", nPageNo);
		mm.put("pageNav", pageNav);
		mm.put("buySharList", webBuySharingDao.selectListSharOrderHist(paramDto));
		return mm;
	}

	/**
	 * <pre>
	 * 셰어링 주문 내역 상세 조회
	 * 셰어링 주문 내역 상세 조회 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectListSharOrderDtl(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();

		// 주문 내역 상품 목록 조회
		mm.put("buySharList", webBuySharingDao.selectListSharOrderProd(paramDto));
		// 주문 내역 주문 정보 조회
		mm.put("buyOrdInfo", webBuySharingDao.selectSharOrderInfo(paramDto));
		return mm;
	}

	/**
	 * <pre>
	 * 셰어링 교환신청 내역 조회
	 * 셰어링 교환신청 내역 조회 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectListSharExcReqHist(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();
		int nPageNo = StringUtil.nvlInt((String)paramDto.get("PAGE_NO"), 1);
		int nTotCnt = webBuySharingDao.selectListSharExcReqHistTotCnt(paramDto);

		// 페이징 클래스 initialize
		WebMobilePaging pageNav = new WebMobilePaging(nTotCnt, nPageNo, CmmnCnst.MOBILE_LIST_SIZE);

		paramDto.put("START_ROW", pageNav.getStartContent());
		paramDto.put("END_ROW", pageNav.getEndContent());

		mm.put("PAGE_NO", nPageNo);
		mm.put("pageNav", pageNav);
		mm.put("buySharList", webBuySharingDao.selectListSharExcReqHist(paramDto));
		return mm;
	}

	/**
	 * <pre>
	 * 셰어링 교환신청 내역 상세 조회
	 * 셰어링 교환신청 내역 상세 조회 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectListSharExcReqDtl(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();

		// 교환 내역 상품 목록 조회
		mm.put("buySharList", webBuySharingDao.selectListSharExcReqProd(paramDto));
		return mm;
	}

	/**
	 * <pre>
	 * 셰어링 반품신청 내역 조회
	 * 셰어링 반품신청 내역 조회 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectListSharTakeBaReqHist(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();
		int nPageNo = StringUtil.nvlInt((String)paramDto.get("PAGE_NO"), 1);
		int nTotCnt = webBuySharingDao.selectListSharTakeBaReqHistTotCnt(paramDto);

		// 페이징 클래스 initialize
		WebMobilePaging pageNav = new WebMobilePaging(nTotCnt, nPageNo, CmmnCnst.MOBILE_LIST_SIZE);

		paramDto.put("START_ROW", pageNav.getStartContent());
		paramDto.put("END_ROW", pageNav.getEndContent());

		mm.put("PAGE_NO", nPageNo);
		mm.put("pageNav", pageNav);

		mm.put("buySharList", webBuySharingDao.selectListSharTakeBaReqHist(paramDto));
		return mm;
	}

	/**
	 * <pre>
	 * 셰어링 반품신청 내역 상세 조회
	 * 셰어링 반품신청 내역 상세 조회 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectListSharTakeBaReqDtl(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();

		// 반품 내역 상품 목록 조회
		mm.put("buySharList", webBuySharingDao.selectListSharTakeBaReqProd(paramDto));
		return mm;
	}

	/**
	 * <pre>
	 * 셰어링 주문취소 내역 조회
	 * 셰어링 주문취소 내역 조회 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectListSharOrderCanHist(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();
		int nPageNo = StringUtil.nvlInt((String)paramDto.get("PAGE_NO"), 1);
		int nTotCnt = webBuySharingDao.selectListSharOrderCanHistTotCnt(paramDto);

		// 페이징 클래스 initialize
		WebMobilePaging pageNav = new WebMobilePaging(nTotCnt, nPageNo, CmmnCnst.MOBILE_LIST_SIZE);

		paramDto.put("START_ROW", pageNav.getStartContent());
		paramDto.put("END_ROW", pageNav.getEndContent());

		mm.put("PAGE_NO", nPageNo);
		mm.put("pageNav", pageNav);

		mm.put("buySharList", webBuySharingDao.selectListSharOrderCanHist(paramDto));
		return mm;
	}

	/**
	 * <pre>
	 * 셰어링 주문취소 내역 상세 조회
	 * 셰어링 주문취소 내역 상세 조회 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectListSharOrderCanDtl(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();

		// 주문취소 내역 상품 목록 조회
		mm.put("buySharList", webBuySharingDao.selectListSharOrderCanProd(paramDto));
		return mm;
	}

	/**
	 * <pre>
	 * 공통 주문취소 상품 조회
	 * 공통 주문취소 상품을 조회 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectOrderCancel(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();

		String arrProdCd[] = (String[])paramDto.get("S_PROD_CD").toString().split(",");
		String arrProdSeq[] = (String[])paramDto.get("S_PROD_SEQ").toString().split(",");
		String sProdTypeCd = (String)paramDto.get("S_PROD_TYPE_CD");
		String sOrdCd = (String)paramDto.get("S_ORD_CD");
		paramDto.put("prodCd", arrProdCd);
		paramDto.put("prodSeq", arrProdSeq);

		if ("4".equals(sProdTypeCd)) { // 스마트폰 셰어링
			paramDto.put("ORD_CD", sOrdCd);
			mm.put("buyOrdProdList", webSmartPhoneDao.selectSharOrdCanProd(paramDto));
		}else {
			mm.put("buyOrdProdList", webBuySharingDao.selectListOrderProd(paramDto));
		}
		return mm;
	}

	/**
	 * <pre>
	 * 공통 상품별 주문취소 처리
	 * 공통 상품별 주문취소를 처리 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Override
	public int saveOrderCancel(Map<String, Object> paramDto) throws Exception {
		int nResult = 0;

		String arrProdCd[] = (String[])paramDto.get("S_PROD_CD").toString().split(",");
		String arrProdSeq[] = (String[])paramDto.get("S_PROD_SEQ").toString().split(",");

		for(int i=0; i<arrProdCd.length; i++) {
			paramDto.put("S_PROD_CD", arrProdCd[i]);
			paramDto.put("S_PROD_SEQ", arrProdSeq[i]);
			nResult = webBuySharingDao.insertOrderCancel(paramDto);
			nResult = webBuySharingDao.updateOrderProdInfoCancel(paramDto);
		}

		return nResult;
	}

	/**
	 * <pre>
	 * 공통 교환/반품 신청 상품 조회
	 * 공통 교환/반품 신청 상품을 조회 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectExcTakeBackReq(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();

		String arrProdCd[] = (String[])paramDto.get("S_PROD_CD").toString().split(",");
		String arrProdSeq[] = (String[])paramDto.get("S_PROD_SEQ").toString().split(",");
		String sProdTypeCd = (String)paramDto.get("S_PROD_TYPE_CD");
		String sOrdCd = (String)paramDto.get("S_ORD_CD");
		paramDto.put("prodCd", arrProdCd);
		paramDto.put("prodSeq", arrProdSeq);

		if ("4".equals(sProdTypeCd)) { // 스마트폰 셰어링
			paramDto.put("ORD_CD", sOrdCd);
			mm.put("buyOrdProdList", webSmartPhoneDao.selectSharOrdCanProd(paramDto));
		}else {
			mm.put("buyOrdProdList", webBuySharingDao.selectListOrderProd(paramDto));
		}
		return mm;
	}

	/**
	 * <pre>
	 * 공통 상품별 교환/반품 신청 처리
	 * 공통 상품별 교환/반품 신청을 처리 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Override
	public int saveExcTakeBackReq(Map<String, Object> paramDto) throws Exception {
		int nResult = 0;
		String CHG_CD = "";
		String PROC_STAT_CD = "";

		String arrProdCd[] = (String[])paramDto.get("S_PROD_CD").toString().split(",");
		String arrProdSeq[] = (String[])paramDto.get("S_PROD_SEQ").toString().split(",");
		String S_SCR_ID = (String)paramDto.get("S_SCR_ID");
		for(int i=0; i<arrProdCd.length; i++) {
			paramDto.put("S_PROD_CD", arrProdCd[i]);
			paramDto.put("S_PROD_SEQ", arrProdSeq[i]);

			// PROC_STAT_CD 체크
			//proc_stat_cd = webBuySharingDao.selectOrdProcInfo(paramDto);
			PROC_STAT_CD = commonDao.getSelectProcStatCd(paramDto);
			if(PROC_STAT_CD.equals("41") || PROC_STAT_CD.equals("42") || PROC_STAT_CD.equals("43")){
				nResult = 41;
			}else if(PROC_STAT_CD.equals("31") || PROC_STAT_CD.equals("32") || PROC_STAT_CD.equals("33")){
				nResult = 31;
			}else{
				CHG_CD = webBuySharingDao.insertChgRtnProcInfo(paramDto);
				logger.info("CHG_CD[" + CHG_CD + "]");
				paramDto.put("CHG_CD", CHG_CD);

				nResult = webBuySharingDao.insertChgProdInfo(paramDto);

				// 환불계좌 입력한경우
				if(paramDto.get("I_RFND_YN") != null){
					String RFND_CD = webBuySharingDao.insertRfndProcInfo(paramDto);
					paramDto.put("RFND_CD", RFND_CD);
					paramDto.put("PROD_CODE", arrProdCd[i]);
					webBuySharingDao.insertRfndProdInfo(paramDto);
				}

				// 교환 반품 신청시 상태 변경안함 20151026
				nResult = webBuySharingDao.updateOrdProcStat(paramDto);

				if(null != paramDto.get("S_PROD_TYPE_CD") && "4".equals(paramDto.get("S_PROD_TYPE_CD"))){
					paramDto.put("ORG_CD", paramDto.get("S_ORD_CD")); // 히스토리 내역 관리 를 위해
					paramDto.put("ORDERID", paramDto.get("S_ORD_CD")); // 히스토리 내역 관리 를 위해
					paramDto.put("HIST_PROC_STAT_CD", paramDto.get("I_PROC_STAT_CD")); // 히스토리 내역 관리 를 위해
					paramDto.put("PROD_CODE", paramDto.get("S_PROD_CD")); // 히스토리 내역 관리 를 위해
					if("41".equals(paramDto.get("I_PROC_STAT_CD"))){
						paramDto.put("HIST_GB_CD", "30"); // 교환
					}else{
						paramDto.put("HIST_GB_CD", "50"); // 반품
					}
					nResult = webSmartPhoneDao.inserthisTbreg(paramDto) ;
				}

			}



		}

		return nResult;
	}

	/**
	 * <pre>
	 * 구매 확정 처리
	 * 구매 확정을 처리 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Override
	public int saveBuyFix(Map<String, Object> paramDto) throws Exception {
		int nResult = 0;
		paramDto.put("CPOINT_GB_CD", CmmnCnst.cmmn80);
		paramDto.put("CPOINT", CmmnCnst.cmmn1);
		paramDto.put("ADD_YN", CmmnCnst.cmmnY);
		paramDto.put("CPOINT_REASON_CD", CmmnCnst.cmmn11);
		nResult = webBuySharingDao.insertCredPoint(paramDto); // 신용점수로직추가

		nResult = webBuySharingDao.insertProdBuyConfInfo(paramDto);
		nResult = webBuySharingDao.updateOrdProcStat(paramDto);

		return nResult;
	}

	/**
	 * <pre>
	 * 셰어링 확정 처리
	 * 셰어링 확정을 처리 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Override
	public int saveShareFix(Map<String, Object> paramDto) throws Exception {
		int nResult = 0;
		nResult = webBuySharingDao.updateOrdProcStat(paramDto);

		return nResult;
	}

	/**
	 * <pre>
	 * 공통 상품 후기 상품 조회
	 * 공통 상품 후기 상품을 조회 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectProdPost(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();

		String arrProdCd[] = (String[])paramDto.get("S_PROD_CD").toString().split(",");
		String arrProdSeq[] = (String[])paramDto.get("S_PROD_SEQ").toString().split(",");
		paramDto.put("prodCd", arrProdCd);
		paramDto.put("prodSeq", arrProdSeq);

		mm.put("buyOrdProdList", webBuySharingDao.selectListOrderProd(paramDto));
		return mm;
	}

	/**
	 * <pre>
	 * 공통 상품 후기 정보 저장
	 * 공통 상품 후기 정보를 저장 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Override
	public Map<String, Object> saveProdPost(Map<String, Object> paramDto, MultipartHttpServletRequest multReq) throws Exception {
		int nResult = 0;
		String sFileSeq;

		MultipartFile mFilePic1 = multReq.getFile("I_FILE_PIC1"); // 상품 후기 이미지1
		MultipartFile mFilePic2 = multReq.getFile("I_FILE_PIC2"); // 상품 후기 이미지2
		MultipartFile mFilePic3 = multReq.getFile("I_FILE_PIC3"); // 상품 후기 이미지3
		MultipartFile mFilePic4 = multReq.getFile("I_FILE_PIC4"); // 상품 후기 이미지4
		Map<String, Object> fileInfo = null;

		// 상품 후기 내용 저장

		nResult = webBuySharingDao.selectPordPostCnt(paramDto);

		if(nResult > 0){
			paramDto.put("result", "99");

		}else{
			nResult = webBuySharingDao.insertProdPostInfo(paramDto);

			// 파일저장
			if(CmmnCnst.cmmnY.equals(paramDto.get("appFlag"))){ // 앱일때는 file seq만 가져옴

				if(!"".equals((String)paramDto.get("I_FILE_PIC1Seq"))){
					paramDto.put("I_FILE_SEQ", paramDto.get("I_FILE_PIC1Seq"));
					// 게시판 파일 정보에 저장
					webBuySharingDao.insertBoardFile(paramDto);
					paramDto.put("filePic1Seq", paramDto.get("I_FILE_PIC1Seq"));
					paramDto.put("filePic1Url", paramDto.get("I_FILE_PIC1Url"));
					paramDto.put("filePic1GbCd", CmmnCnst.cmmn12);
				}
				if(!"".equals((String)paramDto.get("I_FILE_PIC2Seq"))){
					paramDto.put("I_FILE_SEQ", paramDto.get("I_FILE_PIC2Seq"));
					// 게시판 파일 정보에 저장
					webBuySharingDao.insertBoardFile(paramDto);
					paramDto.put("filePic2Seq", paramDto.get("I_FILE_PIC2Seq"));
					paramDto.put("filePic2Url", paramDto.get("I_FILE_PIC2Url"));
					paramDto.put("filePic2GbCd", CmmnCnst.cmmn11);
				}
				if(!"".equals((String)paramDto.get("I_FILE_PIC3Seq"))){
					paramDto.put("I_FILE_SEQ", paramDto.get("I_FILE_PIC3Seq"));
					// 게시판 파일 정보에 저장
					webBuySharingDao.insertBoardFile(paramDto);
					paramDto.put("filePic3Seq", paramDto.get("I_FILE_PIC3Seq"));
					paramDto.put("filePic3Url", paramDto.get("I_FILE_PIC3Url"));
					paramDto.put("filePic3GbCd", CmmnCnst.cmmn13);
				}
				if(!"".equals((String)paramDto.get("I_FILE_PIC4Seq"))){
					paramDto.put("I_FILE_SEQ", paramDto.get("I_FILE_PIC4Seq"));
					// 게시판 파일 정보에 저장
					webBuySharingDao.insertBoardFile(paramDto);
					paramDto.put("filePic4Seq", paramDto.get("I_FILE_PIC4Seq"));
					paramDto.put("filePic4Url", paramDto.get("I_FILE_PIC4Url"));
					paramDto.put("filePic4GbCd", CmmnCnst.cmmn14);
				}

			}else{

				if(mFilePic1 != null && mFilePic1.getSize() > 0){
					fileInfo = FileUtil.saveMultipartFile(mFilePic1);
					// 파일 저장
					sFileSeq = webBuySharingDao.insertFile(fileInfo);
					paramDto.put("I_FILE_SEQ", sFileSeq);
					// 게시판 파일 정보에 저장
					webBuySharingDao.insertBoardFile(paramDto);
					paramDto.put("filePic1Seq", sFileSeq);
					paramDto.put("filePic1Url", fileInfo.get("I_FILE_URL"));
					paramDto.put("filePic1GbCd", CmmnCnst.cmmn12);
				}
				if(mFilePic2 != null && mFilePic2.getSize() > 0){
					fileInfo = FileUtil.saveMultipartFile(mFilePic2);
					// 파일 저장
					sFileSeq = webBuySharingDao.insertFile(fileInfo);
					paramDto.put("I_FILE_SEQ", sFileSeq);
					// 게시판 파일 정보에 저장
					webBuySharingDao.insertBoardFile(paramDto);
					paramDto.put("filePic2Seq", sFileSeq);
					paramDto.put("filePic2Url", fileInfo.get("I_FILE_URL"));
					paramDto.put("filePic2GbCd", CmmnCnst.cmmn11);
				}
				if(mFilePic3 != null && mFilePic3.getSize() > 0){
					fileInfo = FileUtil.saveMultipartFile(mFilePic3);
					// 파일 저장
					sFileSeq = webBuySharingDao.insertFile(fileInfo);
					paramDto.put("I_FILE_SEQ", sFileSeq);
					// 게시판 파일 정보에 저장
					webBuySharingDao.insertBoardFile(paramDto);
					paramDto.put("filePic3Seq", sFileSeq);
					paramDto.put("filePic3Url", fileInfo.get("I_FILE_URL"));
					paramDto.put("filePic3GbCd", CmmnCnst.cmmn13);
				}
				if(mFilePic4 != null && mFilePic4.getSize() > 0){
					fileInfo = FileUtil.saveMultipartFile(mFilePic4);
					// 파일 저장
					sFileSeq = webBuySharingDao.insertFile(fileInfo);
					paramDto.put("I_FILE_SEQ", sFileSeq);
					// 게시판 파일 정보에 저장
					webBuySharingDao.insertBoardFile(paramDto);
					paramDto.put("filePic4Seq", sFileSeq);
					paramDto.put("filePic4Url", fileInfo.get("I_FILE_URL"));
					paramDto.put("filePic4GbCd", CmmnCnst.cmmn14);
				}
			}
			paramDto.put("result", nResult);
		}


		return paramDto;
	}

	/**
	 * <pre>
	 * 공통 주문 상품 배송조회
	 * 공통 주문 상품 배송을 조회 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectShipView(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();

		String arrProdCd[] = (String[])paramDto.get("S_PROD_CD").toString().split(",");
		String arrProdSeq[] = (String[])paramDto.get("S_PROD_SEQ").toString().split(",");
		String sScrGubun =  (String)paramDto.get("S_SCR_GUBUN");
		paramDto.put("prodCd", arrProdCd);
		paramDto.put("prodSeq", arrProdSeq);

		// 배송 상품 목록 조회
		mm.put("buyOrdProdList", webBuySharingDao.selectListShipOrderProd(paramDto));

		if("retShipView".equals(sScrGubun) || "colShipView".equals(sScrGubun)) {
			// 주문 상품 교환/반품/반납/회수 배송 정보를 조회
			mm.put("buyOrdProdShip", webBuySharingDao.selectListOrderProdChgShip(paramDto));
		}else {
			// 주문 상품 배송 정보 조회
			mm.put("buyOrdProdShip", webBuySharingDao.selectListOrderProdShip(paramDto));
		}

		// 상품 배송 이력 조회
		List<Map<String, Object>> buyOrdProdShip = (List<Map<String, Object>>) mm.get("buyOrdProdShip");
		String invcNo = "";
		String dlvWayCd = "";


		if(buyOrdProdShip.isEmpty()){
			invcNo = "";
			dlvWayCd = "";
		}else{
			invcNo = (String)buyOrdProdShip.get(0).get("INVC_NO");
			dlvWayCd = (String)buyOrdProdShip.get(0).get("DLV_WAY_CD");
		}


		// 제휴택배일경우 택배히스토리 가져오기
		if(dlvWayCd.equals("1")){
			mm.put("invcProcHist", webBuySharingDao.selectListInvcProcHist(invcNo));
		}else{
			mm.put("invcProcHist", "");
		}


		return mm;
	}

	/**
	 * <pre>
	 * 공통 주문 주소 조회
	 * 공통 주문 주소를 조회 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectAddrChg(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();

		mm.put("buyOrdAddr", webBuySharingDao.selectOrderAddrInfo(paramDto));
		return mm;
	}

	/**
	 * <pre>
	 * 공통 주문 주소 확인 조회
	 * 공통 주문 주소 확인 조회를 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectAddrConf(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();

		mm.put("buyOrdAddr", webBuySharingDao.selectOrderAddrInfo(paramDto));
		return mm;
	}

	/**
	 * <pre>
	 * 공통 주소로 반납/회수 신청
	 * 공통 주소로 반납/회수 신청 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 19. 오후 2:20:00
	 * &#64;author H.M.Yang
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Override
	public int saveAddrRetColReq(Map<String, Object> paramDto) throws Exception {
		int nResult = 0;
		String CHG_CD = "";

		String arrProdCd[] = (String[])paramDto.get("S_PROD_CD").toString().split(",");
		String arrProdSeq[] = (String[])paramDto.get("S_PROD_SEQ").toString().split(",");
		
		String PROC_STAT_CD = commonDao.getSelectProcStatCd(paramDto);
		if(PROC_STAT_CD.equals("87") || PROC_STAT_CD.equals("88") || PROC_STAT_CD.equals("89")){
			nResult = 87;
		}else if(PROC_STAT_CD.equals("90") || PROC_STAT_CD.equals("91") || PROC_STAT_CD.equals("92")){
			nResult = 90;
		}else{
			for(int i=0; i<arrProdCd.length; i++) {
				paramDto.put("S_PROD_CD", arrProdCd[i]);
				paramDto.put("S_PROD_SEQ", arrProdSeq[i]);

				CHG_CD = webBuySharingDao.insertChgRtnProcInfo(paramDto);
				logger.info("CHG_CD[" + CHG_CD + "]");
				paramDto.put("CHG_CD", CHG_CD);
				nResult = webBuySharingDao.insertChgProdInfo(paramDto);
				nResult = webBuySharingDao.updateOrdProcStat(paramDto);
			}
		}

		return nResult;
	}

	/**
	 * <pre>
	 * 주문취소 - 단일,복합 상품 취소 구분 획득
	 *
	 * &#64;param inParam
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;exception
	 * &#64;date 2015. 11. 01
	 * &#64;author Y.S.KIM
	 * &#64;see com.ssocio.sharing.service.admin.AdminSharOrderService#selectSharOrderCancelGroupInfo(java.util.Map)
	 * &#64;비고
	 *
	 * </pre>
	 */
	@Override
	public Map<String, Object> selectMobileSharOrderCancelGroupInfo(Map<String, Object> inParam) throws Exception {
		return webBuySharingDao.selectMobileSharOrderCancelGroupInfo(inParam);
	}

	/**
	 * <pre>
	 * 주문 취소 - 단일 상품
	 *
	 * &#64;param inParam
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;exception
	 * &#64;date 2015. 11. 01
	 * &#64;author Y.S.KIM
	 * &#64;see com.ssocio.sharing.service.admin.AdminSharOrderService#cancelSharOrderOneItem(java.util.Map)
	 * &#64;비고
	 *
	 * </pre>
	 */
	@Transactional(rollbackFor=Exception.class)
	@Override
	public Map<String, Object> cancelMobileSharOrderOneItem(Map<String, Object> inParam) throws Exception {
		Map<String, Object> result = new HashMap<String, Object>();
		int count = 0;
		try {
			// 0.취소 코드 획득
			String canCd = webBuySharingDao.selectMobileOrderCancelCode(inParam);
			inParam.put("CANC_CD",canCd);

			// 1.상품 취소 정보,사유 입력
			count += webBuySharingDao.insertMobileSharOrderCancelReason(inParam);

			// 2.ORD_INFO 업데이트 ( ORD_STAT_CD=150)
			count += webBuySharingDao.updateMobileSharOrderTableCancelState(inParam);

			// 3.쿠폰 돌려주기
			String couponTemp = (String)inParam.get("PROD_CPN_CD");
			if(!couponTemp.equals("NO")){
				inParam.put("CPN_NO",couponTemp);
				count += webBuySharingDao.updateMobileSharOrderCouponTable(inParam);
			}else{
				inParam.put("CPN_NO","");
				count++;
			}

			// 4.ORD_PROD_INFO 업데이트 (PROC_STAT_CD=50)
			count += webBuySharingDao.updateMobileSharOrderProductTableCancelState(inParam);

			// 5.포인트 돌려주기 (회원 , 이력쌓기)
			int point = (int) inParam.get("POINT_USE_AMT");
			if(point > 0){
				count += webBuySharingDao.updateMobileMemberTableForPoint(inParam);
				inParam.put("POINT_COMMENT", "주문취소");
				count += webBuySharingDao.insertMobilePointLogTable(inParam);
			}else{
				count = count +2;
			}
			if(count == 6 ){
				// 취소 통신
				try {
					String seltGbCd = (String) inParam.get("SELT_GB_CD"); // 결재
																			// 구분자
					if(seltGbCd.equals("0")){
						logger.info("[0원 결제]");
						result.put("RESULT", "OK");
					}else{
						Map<String, Object> tradeInfo = webBuySharingDao.selectMobileTradeNumber(inParam); // 결제
																											// 정보
						String o_tid = tradeInfo.get("TRD_NO").toString(); // 결제
																			// TID
						String amount = (String)inParam.get("REAL_SELT_AMT");
						Map<String, Object> cancelResult = new HashMap<String, Object>();
						cancelResult = PaymentUtil.kCreditTradeCancelAll(o_tid);
						if(cancelResult.get("RETURNCODE").toString().equals("0000")){
							System.err.println(cancelResult.toString());
							result.put("RESULT", "OK");
							// 결제 정보 입력
							inParam.put("TRD_NO",cancelResult.get("TID").toString());
							inParam.put("TRD_AMT",Integer.parseInt(amount));
							inParam.put("RLT_CD",cancelResult.get("RETURNCODE").toString());
							inParam.put("RLT_MSG","SUCCESS");
							webBuySharingDao.insertOrdCancelInfo(inParam);
						}else{
							logger.info("[카드 취소 연동 실패로 RollBack !!!!!!]");
							TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();
							result.put("RESULT", "API");
						}
					}
				} catch (Exception e) {
					logger.info("[카드 취소 연동 실패로 RollBack !!!!!!]");
					TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();
					result.put("RESULT", "API");
				}
			}else{
				logger.info("[DB 저장,업데이트 실패로 RollBack !!!!!!]");
				TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();
				result.put("RESULT", "DB");
			}

		} catch (Exception e) {
			e.printStackTrace();
			TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();
			result.put("RESULT", "ETC");
		}
		return result;
	}

	/**
	 * <pre>
	 * 주문 취소 - 복합 상품
	 *
	 * &#64;param inParam
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;exception
	 * &#64;date 2015. 11. 02
	 * &#64;author Y.S.KIM
	 * &#64;see com.ssocio.sharing.service.admin.AdminSharOrderService#cancelSharOrderMultiItem(java.util.Map)
	 * &#64;비고
	 *
	 * </pre>
	 */
	@Transactional(rollbackFor=Exception.class)
	@Override
	public Map<String, Object> cancelMobileSharOrderMultiItem(Map<String, Object> inParam) throws Exception {
		Map<String, Object> result = new HashMap<String, Object>();											//Return map
		Map<String, Object> productInfo = webBuySharingDao.selectMobileDefaultProductCancelInfo(inParam); // 기본정보
																											// 획득
																											// -
																											// 구매자,
																											// 쿠폰,
																											// 상품
																											// 결재비
																											// ,
																											// 배송비
																											// ,
																											// Point
		int MBER_SEQ = Integer.parseInt(productInfo.get("MBER_SEQ").toString()); // 구매자
		int POINT_USE_AMT = Integer.parseInt(productInfo.get("POINT_USE_AMT").toString());					//Point
		int DLV_PRCE = Integer.parseInt(productInfo.get("DLV_PRCE").toString()); // 배송비
		int TOTAL_CANCEL_PRICE = Integer.parseInt(productInfo.get("TOTAL_CANCEL_PRICE").toString()); // 상품결재비
		String PROD_CPN_CD = productInfo.get("PROD_CPN_CD").toString(); // 쿠폰
		int finalCancelMoney = 0; // 최종 취소 금액
		int finalReturnPoint = 0; // 최종 반환 포인트

		// 1.묶음배송 유무
		String dlvGrpCode = (String)inParam.get("DLV_GRP_CODE");
		if(dlvGrpCode.equals("NO")){
			// 묶음배송 아님
			// 2.주문 최종상품 유무
			int checkFinalOrderProduct = webBuySharingDao.selectMobileOrderNotCancelCount(inParam);
			if(checkFinalOrderProduct > 1){
				// 최종상품 아님
				finalCancelMoney = TOTAL_CANCEL_PRICE + DLV_PRCE; // 배송비 돌려줌
			}else{
				// 최종상품
				finalCancelMoney = TOTAL_CANCEL_PRICE + DLV_PRCE; // 배송비 돌려줌
				if(finalCancelMoney > POINT_USE_AMT){
					finalCancelMoney = finalCancelMoney - POINT_USE_AMT; // 포인트
																			// 소멸
				}else{
					finalReturnPoint = POINT_USE_AMT; // 포인트 반환
				}
			}
		}else{
			// 묶음배송
			// 2.묶음 최종상품 유무
			int checkFinalGroupProduct = webBuySharingDao.selectNotCancelDlvGroupCount(inParam);
			if(checkFinalGroupProduct > 1){
				// 묶음 최종상품 아님
				finalCancelMoney = TOTAL_CANCEL_PRICE;
			}else{
				// 묶음 최종상품
				finalCancelMoney = TOTAL_CANCEL_PRICE + DLV_PRCE; // 배송비 돌려줌
			}
			// 3.주문 최종상품 유무
			int checkFinalOrderProducts = webBuySharingDao.selectMobileOrderNotCancelCount(inParam);
			if(checkFinalOrderProducts == 1){
				// 최종상품
				if(finalCancelMoney > POINT_USE_AMT){
					finalCancelMoney = finalCancelMoney - POINT_USE_AMT; // 포인트
																			// 소멸
				}else{
					finalReturnPoint = POINT_USE_AMT; // 포인트 반환
				}
			}
		}
		// 취소로직 시작
		inParam.put("BUYER_SEQ",MBER_SEQ);
		inParam.put("POINT_USE_AMT",finalReturnPoint);
		int count = 0;
		try {
			// 0.취소 코드 획득
			String canCd = webBuySharingDao.selectMobileOrderCancelCode(inParam);
			inParam.put("CANC_CD",canCd);

			// 1.상품 취소 정보,사유 입력
			count += webBuySharingDao.insertMobileSharOrderCancelReason(inParam);

			// 2.ORD_INFO 업데이트 ( ORD_STAT_CD=150)
			count += webBuySharingDao.updateMobileSharOrderTableCancelState(inParam);

			// 3.쿠폰
			if(!PROD_CPN_CD.equals("NO")){
				inParam.put("CPN_NO",PROD_CPN_CD);
				count += webBuySharingDao.updateMobileSharOrderCouponTable(inParam);
			}else{
				inParam.put("CPN_NO","");
				count++;
			}

			// 4.ORD_PROD_INFO 업데이트 (PROC_STAT_CD=50)
			count += webBuySharingDao.updateMobileSharOrderProductTableCancelState(inParam);

			// 5.포인트 돌려주기 (회원 , 이력쌓기)
			if(finalReturnPoint > 0){
				count += webBuySharingDao.updateMobileMemberTableForPoint(inParam);
				inParam.put("POINT_COMMENT", "주문취소");
				count += webBuySharingDao.insertMobilePointLogTable(inParam);
			}else{
				count = count +2;
			}

			if(count == 6 ){
				// 취소 통신
				try {
					Map<String, Object> tradeInfo = webBuySharingDao.selectMobileTradeNumber(inParam); // 결제
																										// 정보
					String o_tid = tradeInfo.get("TRD_NO").toString(); // 결제 TID
					Map<String, Object> cancelResult = new HashMap<String, Object>();
					cancelResult = PaymentUtil.kCreditTradeCancel(o_tid, finalCancelMoney);
					if(cancelResult.get("RETURNCODE").toString().equals("0000")){
						result.put("RESULT", "OK");
						// 결제 정보 입력
						inParam.put("TRD_NO",cancelResult.get("TID").toString());
						inParam.put("TRD_AMT",finalCancelMoney);
						inParam.put("RLT_CD",cancelResult.get("RETURNCODE").toString());
						inParam.put("RLT_MSG","SUCCESS");
						webBuySharingDao.insertOrdCancelInfo(inParam);
					}else{
						logger.info("[카드 취소 연동 실패로 RollBack !!!!!!]");
						TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();
						result.put("RESULT", "API");
					}
				} catch (Exception e) {
					logger.info("[카드 취소 연동 실패로 RollBack !!!!!!]");
					TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();
					e.printStackTrace();
					result.put("RESULT", "API");
				}
			}else{
				logger.info("[DB 저장,업데이트 실패로 RollBack !!!!!!]");
				TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();
				result.put("RESULT", "DB");
			}

		} catch (Exception e) {
			e.printStackTrace();
			TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();
			result.put("RESULT", "ETC");
		}

		return result;
	}

	/**
	 * <pre>
	 * 주문 취소 - 0원 결제
	 * &#64;param inParam
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;exception
	 * &#64;date 2015. 11. 18
	 * &#64;author Y.S.KIM
	 * &#64;see com.ssocio.sharing.service.web
	 * &#64;비고
	 *
	 * </pre>
	 */
	@Transactional(rollbackFor=Exception.class)
	@Override
	public Map<String, Object> cancelMobileSharOrderMultiItemZero(Map<String, Object> inParam) throws Exception {
		Map<String, Object> result = new HashMap<String, Object>();											//Return map
		Map<String, Object> productInfo = webBuySharingDao.selectMobileDefaultProductCancelInfo(inParam); // 기본정보
																											// 획득
																											// -
																											// 구매자,
																											// 쿠폰,
																											// 상품
																											// 결재비
																											// ,
																											// 배송비
																											// ,
																											// Point
		int MBER_SEQ = Integer.parseInt(productInfo.get("MBER_SEQ").toString()); // 구매자
		int DLV_PRCE = Integer.parseInt(productInfo.get("DLV_PRCE").toString()); // 배송비
		int TOTAL_CANCEL_PRICE = Integer.parseInt(productInfo.get("TOTAL_CANCEL_PRICE").toString()); // 상품결재비
		String PROD_CPN_CD = productInfo.get("PROD_CPN_CD").toString(); // 쿠폰
		int finalReturnPoint = 0; // 최종 반환 포인트

		// 1.묶음배송 유무
		String dlvGrpCode = (String)inParam.get("DLV_GRP_CODE");
		if(dlvGrpCode.equals("NO")){
			// 묶음배송 아님
			// 2.주문 최종상품 유무
			finalReturnPoint = TOTAL_CANCEL_PRICE + DLV_PRCE; // 배송비 돌려줌
		}else{
			// 묶음배송
			// 2.묶음 최종상품 유무
			int checkFinalGroupProduct = webBuySharingDao.selectNotCancelDlvGroupCount(inParam);
			if(checkFinalGroupProduct > 1){
				// 묶음 최종상품 아님
				finalReturnPoint = TOTAL_CANCEL_PRICE;
			}else{
				// 묶음 최종상품
				finalReturnPoint = TOTAL_CANCEL_PRICE + DLV_PRCE; // 배송비 돌려줌
			}
		}
		// 취소로직 시작
		inParam.put("BUYER_SEQ",MBER_SEQ);
		inParam.put("POINT_USE_AMT",finalReturnPoint);
		int count = 0;
		try {
			// 0.취소 코드 획득
			String canCd = webBuySharingDao.selectMobileOrderCancelCode(inParam);
			inParam.put("CANC_CD",canCd);

			// 1.상품 취소 정보,사유 입력
			count += webBuySharingDao.insertMobileSharOrderCancelReason(inParam);

			// 2.ORD_INFO 업데이트 ( ORD_STAT_CD=150)
			count += webBuySharingDao.updateMobileSharOrderTableCancelState(inParam);

			// 3.쿠폰 돌려주기
			if(!PROD_CPN_CD.equals("NO")){
				inParam.put("CPN_NO",PROD_CPN_CD);
				count += webBuySharingDao.updateMobileSharOrderCouponTable(inParam);
			}else{
				inParam.put("CPN_NO","");
				count++;
			}

			// 4.ORD_PROD_INFO 업데이트 (PROC_STAT_CD=50)
			count += webBuySharingDao.updateMobileSharOrderProductTableCancelState(inParam);

			// 5.포인트 돌려주기 (회원 , 이력쌓기)
			if(finalReturnPoint > 0){
				count += webBuySharingDao.updateMobileMemberTableForPoint(inParam);
				inParam.put("POINT_COMMENT", "주문취소");
				count += webBuySharingDao.insertMobilePointLogTable(inParam);
			}else{
				count = count +2;
			}

			if(count == 6){
				logger.info("[0원 결제]");
				result.put("RESULT", "OK");
			}else{
				logger.info("[0원결제 DB 저장,업데이트 실패로 RollBack !!!!!!]");
				TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();
				result.put("RESULT", "DB");
			}

		} catch (Exception e) {
			e.printStackTrace();
			TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();
			result.put("RESULT", "ETC");
		}

		return result;
	}


	/**
	 * <pre>
	 * 공통 교환 상품 배송조회
	 * 공통 교환 상품 배송을 조회 합니다.
	 * &#64;param paramDto
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 11. 12. 오후 2:20:00
	 * &#64;author M.C.JUNG
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public ModelMap selectRtnShipView(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();

		String arrProdCd[] = (String[])paramDto.get("S_PROD_CD").toString().split(",");
		String arrProdSeq[] = (String[])paramDto.get("S_PROD_SEQ").toString().split(",");
		String sScrGubun =  (String)paramDto.get("S_SCR_GUBUN");
		paramDto.put("prodCd", arrProdCd);
		paramDto.put("prodSeq", arrProdSeq);

		// 배송 상품 목록 조회
		mm.put("buyOrdProdList", webBuySharingDao.selectListShipOrderProd(paramDto));

		if("retShipView".equals(sScrGubun) || "colShipView".equals(sScrGubun)) {
			// 주문 상품 교환/반품/반납/회수 배송 정보를 조회
			mm.put("buyOrdProdShip", webBuySharingDao.selectListOrderProdChgShip(paramDto));
		}else {
			// 주문 상품 배송 정보 조회
			mm.put("buyOrdProdShip", webBuySharingDao.selectListOrderProdRtnShip(paramDto));
		}

		// 상품 배송 이력 조회
		List<Map<String, Object>> buyOrdProdShip = (List<Map<String, Object>>) mm.get("buyOrdProdShip");
		String invcNo = (String)buyOrdProdShip.get(0).get("INVC_NO");
		String dlvWayCd = (String)buyOrdProdShip.get(0).get("DLV_WAY_CD");

		// 제휴택배일경우 택배히스토리 가져오기
		if(dlvWayCd.equals("1")){
			mm.put("invcProcHist", webBuySharingDao.selectListInvcProcHist(invcNo));
		}else{
			mm.put("invcProcHist", "");
		}


		return mm;
	}

	@Override
	public Map<String, Object> updateProdPost(Map<String, Object> paramDto, MultipartHttpServletRequest multReq)
			throws Exception {
		int nResult = 0;
		String sFileSeq;
//		Map<String, Object> fileInfo = null;

		// 상품 후기 내용 저장
		nResult = webBuySharingDao.updateProdPostInfo(paramDto);

		ProdPostImg(paramDto, multReq);

		// 파일저장
//		if(mFilePic1 != null && mFilePic1.getSize() > 0){
//			fileInfo = FileUtil.saveMultipartFile(mFilePic1);
		// // 파일 저장
//			sFileSeq = webBuySharingDao.insertFile(fileInfo);
//			paramDto.put("I_FILE_SEQ", sFileSeq);
		// // 게시판 파일 정보에 저장
//			logger.debug("board : " + ("".equals(paramDto.get("BOARD_FILE_SEQ"))) + "    " + paramDto.get("BOARD_FILE_SEQ"));
//			if(paramDto.get("BOARD_FILE_SEQ") == null || "".equals(paramDto.get("BOARD_FILE_SEQ"))){
//				webBuySharingDao.insertBoardFile(paramDto);
//			} else {
//				webBuySharingDao.updateBoardFile(paramDto);
//			}
//			paramDto.put("filePic1Seq", sFileSeq);
//			paramDto.put("filePic1Url", fileInfo.get("I_FILE_URL"));
//			paramDto.put("filePic1GbCd", CmmnCnst.cmmn12);
//		}
//		if(mFilePic2 != null && mFilePic2.getSize() > 0){
//			fileInfo = FileUtil.saveMultipartFile(mFilePic2);
		// // 파일 저장
//			sFileSeq = webBuySharingDao.insertFile(fileInfo);
//			paramDto.put("I_FILE_SEQ", sFileSeq);
		// // 게시판 파일 정보에 저장
//			if(paramDto.get("BOARD_FILE_SEQ") == null || "".equals(paramDto.get("BOARD_FILE_SEQ"))){
//				webBuySharingDao.insertBoardFile(paramDto);
//			} else {
//				webBuySharingDao.updateBoardFile(paramDto);
//			}
//			paramDto.put("filePic2Seq", sFileSeq);
//			paramDto.put("filePic2Url", fileInfo.get("I_FILE_URL"));
//			paramDto.put("filePic2GbCd", CmmnCnst.cmmn11);
//		}
//		if(mFilePic3 != null && mFilePic3.getSize() > 0){
//			fileInfo = FileUtil.saveMultipartFile(mFilePic3);
		// // 파일 저장
//			sFileSeq = webBuySharingDao.insertFile(fileInfo);
//			paramDto.put("I_FILE_SEQ", sFileSeq);
		// // 게시판 파일 정보에 저장
//			if(paramDto.get("BOARD_FILE_SEQ") == null || "".equals(paramDto.get("BOARD_FILE_SEQ"))){
//				webBuySharingDao.insertBoardFile(paramDto);
//			} else {
//				webBuySharingDao.updateBoardFile(paramDto);
//			}
//			paramDto.put("filePic3Seq", sFileSeq);
//			paramDto.put("filePic3Url", fileInfo.get("I_FILE_URL"));
//			paramDto.put("filePic3GbCd", CmmnCnst.cmmn13);
//		}
//		if(mFilePic4 != null && mFilePic4.getSize() > 0){
//			fileInfo = FileUtil.saveMultipartFile(mFilePic4);
		// // 파일 저장
//			sFileSeq = webBuySharingDao.insertFile(fileInfo);
//			paramDto.put("I_FILE_SEQ", sFileSeq);
		// // 게시판 파일 정보에 저장
//			if(paramDto.get("BOARD_FILE_SEQ") == null || "".equals(paramDto.get("BOARD_FILE_SEQ"))){
//				webBuySharingDao.insertBoardFile(paramDto);
//			} else {
//				webBuySharingDao.updateBoardFile(paramDto);
//			}
//			paramDto.put("filePic4Seq", sFileSeq);
//			paramDto.put("filePic4Url", fileInfo.get("I_FILE_URL"));
//			paramDto.put("filePic4GbCd", CmmnCnst.cmmn14);
//		}
		paramDto.put("result", nResult);

		return paramDto;
	}

	/**
	 * <pre>
	 * updatePostImg
	 * 상품관리 - 이미지 수정 및 등록
	 * &#64;param inParam
	 * &#64;return
	 * &#64;throws Exception
	 * &#64;date 2015. 8. 29
	 * &#64;author Kang.h.c
	 * &#64;see com.ssocio.sharing.service.web
	 * </pre>
	 */
	public void ProdPostImg(Map<String, Object> inParam, MultipartHttpServletRequest req) throws Exception {

		// MultipartFile mFilePic1 = req.getFile("I_FILE_PIC1"); // 상품 후기 이미지1
		// MultipartFile mFilePic2 = req.getFile("I_FILE_PIC2"); // 상품 후기 이미지2
		// MultipartFile mFilePic3 = req.getFile("I_FILE_PIC3"); // 상품 후기 이미지3
		// MultipartFile mFilePic4 = req.getFile("I_FILE_PIC4"); // 상품 후기 이미지4
		logger.debug("inParam : " + inParam.toString());

		LoggerUtil.writeMap(inParam);

		String fileSeq = "";

		String pic1Seq = StringUtil.nvl((String) inParam.get("pic1Seq"), ""); // 리스트이미지
																				// 시퀀스
																				// 및
																				// 플래그
		String[] pic1Splt = pic1Seq.split(",");
		String pic1Flag = null;
		if(inParam.get("pic1Flag") != null && !inParam.get("pic1Flag").equals("")){
			pic1Flag = (String) inParam.get("pic1Flag") ;
		}else{
			pic1Flag = pic1Splt.length < 2 ? "" : pic1Splt[1];
		}

		String pic2Seq = StringUtil.nvl((String) inParam.get("pic2Seq"), ""); // 상세이미지2
																				// 시퀀스
																				// 및
																				// 플래그
		String[] pic2Splt = pic2Seq.split(",");
		String pic2Flag = null;
		if(inParam.get("pic2Flag") != null && !inParam.get("pic2Flag").equals("")){
			pic2Flag = (String) inParam.get("pic2Flag") ;
		}else{
			pic2Flag = pic2Splt.length < 2 ? "" : pic2Splt[1];
			logger.debug("pic2Flag : " + pic2Flag);
		}

		String pic3Seq = StringUtil.nvl((String) inParam.get("pic3Seq"), ""); // 상세이미지3
																				// 시퀀스
																				// 및
																				// 플래그
		String[] pic3Splt = pic3Seq.split(",");
		String pic3Flag = null;
		if(inParam.get("pic3Flag") != null && !inParam.get("pic3Flag").equals("")){
			pic3Flag = (String) inParam.get("pic3Flag") ;
		}else{
			logger.debug(pic3Splt.length+"");
			pic3Flag = pic3Splt.length < 2 ? "": pic3Splt[1];

		}

		String pic4Seq = StringUtil.nvl((String) inParam.get("pic4Seq"), ""); // 상세이미지4
																				// 시퀀스
																				// 및
																				// 플래그
		String[] pic4Splt = pic4Seq.split(",");
		String pic4Flag = null;
		if(inParam.get("subImg4Flag") != null && !inParam.get("pic4Flag").equals("")){
			pic4Flag = (String) inParam.get("pic4Flag") ;
		}else{
			pic4Flag = pic4Splt.length < 2 ? "": pic4Splt[1];
		}

		// 리스트이미지
		// 상세이미지1
		if (!StringUtil.isEmpty(pic1Seq)) {
			MultipartFile img1 = req.getFile("I_FILE_PIC1"); // 상세이미지2
			if (CmmnCnst.cmmnI.equals(pic1Flag)) {
				if (img1 != null && img1.getSize() > 0) {
					Map<String, Object> fileInfo = FileUtil.saveMultipartFile(img1);// 파일
																					// 저장
					fileSeq = webBuySharingDao.insertFile(fileInfo);
					inParam.put("I_FILE_SEQ", fileSeq);
					webBuySharingDao.insertBoardFile(inParam);
				}
				// 앱 일땐 멀티파트가 없어도, 아래의 파라미터로 seq 값이 들어온다.
				else if (pic1Splt[0] != null) {
					inParam.put("I_FILE_SEQ", pic1Splt[0]);
					webBuySharingDao.insertBoardFile(inParam);
				}

			} else if (CmmnCnst.cmmnU.equals(pic1Flag)) {
				if (img1 != null && img1.getSize() > 0) {
					Map<String, Object> fileInfo = FileUtil.saveMultipartFile(img1);// 파일
																					// 저장
					fileSeq = webBuySharingDao.insertFile(fileInfo);
					inParam.put("I_FILE_SEQ", fileSeq);
		 			inParam.put("BOARD_FILE_SEQ", pic1Splt.length < 2 ? "": pic1Splt[0]);
					webBuySharingDao.modifyBoardFile(inParam);

//					webBuySharingDao.updateBoardFile(inParam);
				}
				// 앱 일땐 멀티파트가 없어도, 아래의 파라미터로 seq 값이 들어온다.
				else if (pic1Splt[0] != null) {
					inParam.put("I_FILE_SEQ", pic1Splt[0]);
					inParam.put("BOARD_FILE_SEQ", inParam.get("pic1Old"));
					webBuySharingDao.modifyBoardFile(inParam);
//					inParam.put("prodImgUrl", inParam.get("pic2Url"));
//					webBuySharingDao.updateBoardFile(inParam);
				}
			}
			else if (CmmnCnst.cmmnD.equals(pic1Flag)) {
	 			inParam.put("BOARD_FILE_SEQ", pic1Splt.length < 2 ? "": pic1Splt[0]);
				webBuySharingDao.removeBoardFile(inParam);

			}
		}

		// 상세이미지2
		if (!StringUtil.isEmpty(pic2Seq)) {
			MultipartFile img2 = req.getFile("I_FILE_PIC2"); // 상세이미지2
			if (CmmnCnst.cmmnI.equals(pic2Flag)) {
				if(img2 != null && img2.getSize() > 0){
					Map<String, Object> fileInfo = FileUtil.saveMultipartFile(img2);// 파일
																					// 저장
					fileSeq = webBuySharingDao.insertFile(fileInfo);
					inParam.put("I_FILE_SEQ", fileSeq);
					webBuySharingDao.insertBoardFile(inParam);
				}
				// 앱 일땐 멀티파트가 없어도, 아래의 파라미터로 seq 값이 들어온다.
				else if (pic2Splt[0] != null){
					inParam.put("I_FILE_SEQ", pic2Splt[0]);
					webBuySharingDao.insertBoardFile(inParam);
				}

			}
			else if (CmmnCnst.cmmnU.equals(pic2Flag)) {
				if(img2 != null && img2.getSize() > 0){
					Map<String, Object> fileInfo = FileUtil.saveMultipartFile(img2);// 파일
																					// 저장
					fileSeq = webBuySharingDao.insertFile(fileInfo);
					inParam.put("I_FILE_SEQ", fileSeq);
					inParam.put("BOARD_FILE_SEQ", pic2Splt.length < 2 ? "": pic2Splt[0]);
					webBuySharingDao.modifyBoardFile(inParam);
//					webBuySharingDao.updateBoardFile(inParam);
				}
				// 앱 일땐 멀티파트가 없어도, 아래의 파라미터로 seq 값이 들어온다.
				else if (pic2Splt[0] != null){
					inParam.put("I_FILE_SEQ", pic2Splt[0]);
					inParam.put("BOARD_FILE_SEQ", inParam.get("pic2Old"));
					webBuySharingDao.modifyBoardFile(inParam);
					// inParam.put("prodImgUrl", inParam.get("pic2Url"));
//					webBuySharingDao.updateBoardFile(inParam);
				}
			}
			else if (CmmnCnst.cmmnD.equals(pic2Flag)) {
				inParam.put("BOARD_FILE_SEQ", pic2Splt.length < 2 ? "": pic2Splt[0]);
				webBuySharingDao.removeBoardFile(inParam);
			}
		}

		// 상세이미지3
		if (!StringUtil.isEmpty(pic3Seq)) {
			MultipartFile img3 = req.getFile("I_FILE_PIC3"); // 상세이미지3

			// 인서트
			if (CmmnCnst.cmmnI.equals(pic3Flag)) {
				if(img3 != null && img3.getSize() > 0){
					Map<String, Object> fileInfo = FileUtil.saveMultipartFile(img3);// 파일
																					// 저장
					fileSeq = webBuySharingDao.insertFile(fileInfo);
					inParam.put("I_FILE_SEQ", fileSeq);
					// inParam.put("fileUrl", fileInfo.get("I_FILE_URL"));
					webBuySharingDao.insertBoardFile(inParam);
				}
				// 앱 일땐 멀티파트가 없어도, 아래의 파라미터로 seq 값이 들어온다.
				else if (pic3Splt[0] != null){
					inParam.put("I_FILE_SEQ", pic3Splt[0]);
					// inParam.put("prodImgUrl", inParam.get("pic3Url"));
					webBuySharingDao.insertBoardFile(inParam);
				}
			}
			// 업데이트
			else if (CmmnCnst.cmmnU.equals(pic3Flag)) {
				if(img3 != null && img3.getSize() > 0){
					Map<String, Object> fileInfo = FileUtil.saveMultipartFile(img3);// 파일
																					// 저장
					fileSeq = webBuySharingDao.insertFile(fileInfo);
					inParam.put("I_FILE_SEQ", fileSeq);
					inParam.put("BOARD_FILE_SEQ", pic3Splt.length < 2 ? "": pic3Splt[0]);
					webBuySharingDao.modifyBoardFile(inParam);
//					webBuySharingDao.updateBoardFile(inParam);
				}
				// 앱 일땐 멀티파트가 없어도, 아래의 파라미터로 seq 값이 들어온다.
				else if (pic3Splt[0] != null){
					inParam.put("I_FILE_SEQ", pic3Splt[0]);
					inParam.put("BOARD_FILE_SEQ", inParam.get("pic3Old"));
					webBuySharingDao.modifyBoardFile(inParam);
					// inParam.put("prodImgUrl", inParam.get("pic3Url"));
//					webBuySharingDao.updateBoardFile(inParam);
				}
			}
			// 3번째 이미지의 플래그가 D인경우
			else if (CmmnCnst.cmmnD.equals(pic3Flag)) {
//				inParam.put("BOARD_FILE_SEQ", "3");
//				webBuySharingDao.deleteBoardFile(inParam);
				inParam.put("BOARD_FILE_SEQ", pic3Splt.length < 2 ? "": pic3Splt[0]);
				webBuySharingDao.removeBoardFile(inParam);
			}
			// 3번째 이미지의 플래그가 P인경우.
			else if (CmmnCnst.cmmnP.equals(pic3Flag)) {

				if(img3 != null && img3.getSize() > 0){
					// 신규이미지가 아닐경우 기존이미지 삭제
					if (!CmmnCnst.cmmnNewImg.equals(pic3Splt[0])) {
						webBuySharingDao.deleteBoardFile(inParam);
					}

					// 앞 서브이미지가 없을 경우
					Map<String, Object> fileInfo = FileUtil.saveMultipartFile(img3);// 파일
																					// 저장
					fileSeq = webBuySharingDao.insertFile(fileInfo);
					inParam.put("I_FILE_SEQ", fileSeq);
					// inParam.put("fileUrl", fileInfo.get("I_FILE_URL"));
					webBuySharingDao.insertBoardFile(inParam);
				}

			}
		}

		// 상세이미지4
		if (!StringUtil.isEmpty(pic4Seq)) {
			MultipartFile img4 = req.getFile("I_FILE_PIC4"); // 상세이미지4

			// 플래그가 I
			if (CmmnCnst.cmmnI.equals(pic4Flag)) {
				if(img4 != null && img4.getSize() > 0){
					Map<String, Object> fileInfo = FileUtil.saveMultipartFile(img4);// 파일
																					// 저장
					fileSeq = webBuySharingDao.insertFile(fileInfo);
					inParam.put("I_FILE_SEQ", fileSeq);
					// inParam.put("fileUrl", fileInfo.get("I_FILE_URL"));
					webBuySharingDao.insertBoardFile(inParam);
				}
				// 앱 일땐 멀티파트가 없어도, 아래의 파라미터로 seq 값이 들어온다.
				else if (pic4Splt[0] != null){
					inParam.put("I_FILE_SEQ", pic4Splt[0]);
					 inParam.put("prodImgUrl", inParam.get("subImg4Url"));
					webBuySharingDao.insertBoardFile(inParam);
				}
			}
			// 플래그가 U
			else if (CmmnCnst.cmmnU.equals(pic4Flag)) {
				if(img4 != null && img4.getSize() > 0){
					Map<String, Object> fileInfo = FileUtil.saveMultipartFile(img4);// 파일
																					// 저장
					fileSeq = webBuySharingDao.insertFile(fileInfo);
					inParam.put("I_FILE_SEQ", fileSeq);
					inParam.put("BOARD_FILE_SEQ", pic4Splt.length < 2 ? "": pic4Splt[0]);
					webBuySharingDao.modifyBoardFile(inParam);
//					webBuySharingDao.updateBoardFile(inParam);
				}
				// 앱 일땐 멀티파트가 없어도, 아래의 파라미터로 seq 값이 들어온다.
				else if (pic4Splt[0] != null){
					inParam.put("I_FILE_SEQ", pic4Splt[0]);
					inParam.put("BOARD_FILE_SEQ", inParam.get("pic4Old"));
					webBuySharingDao.modifyBoardFile(inParam);
					// inParam.put("prodImgUrl", inParam.get("pic4Url"));
//					webBuySharingDao.updateBoardFile(inParam);
				}
			}

			// 플래그 D
			else if (CmmnCnst.cmmnD.equals(pic4Flag)) {
				inParam.put("BOARD_FILE_SEQ", pic4Splt.length < 2 ? "": pic4Splt[0]);
				webBuySharingDao.removeBoardFile(inParam);
			}

			// 플래그 T
			else if (CmmnCnst.cmmnT.equals(pic4Flag)) {
				if(img4 != null && img4.getSize() > 0){
					// 신규이미지가 아닐경우 기존이미지 매핑 삭제
					if (!CmmnCnst.cmmnNewImg.equals(pic4Splt[0])) {
						webBuySharingDao.deleteBoardFile(inParam);
					}

					Map<String, Object> fileInfo = FileUtil.saveMultipartFile(img4);// 파일
																					// 저장
					fileSeq = webBuySharingDao.insertFile(fileInfo);
					inParam.put("I_FILE_SEQ", fileSeq);
					// inParam.put("fileUrl", fileInfo.get("I_FILE_URL"));
					webBuySharingDao.insertBoardFile(inParam);
				}
			}

			// 플래그 P
			else if (CmmnCnst.cmmnP.equals(pic4Flag)) {
				if(img4 != null && img4.getSize() > 0){
					// 신규이미지가 아닐경우 기존이미지 매핑 삭제
					if (!CmmnCnst.cmmnNewImg.equals(pic4Splt[0])) {
						webBuySharingDao.deleteBoardFile(inParam);
					}

					Map<String, Object> fileInfo = FileUtil.saveMultipartFile(img4);// 파일
																					// 저장
					fileSeq = webBuySharingDao.insertFile(fileInfo);
					inParam.put("I_FILE_SEQ", fileSeq);
					// inParam.put("fileUrl", fileInfo.get("I_FILE_URL"));
					webBuySharingDao.insertBoardFile(inParam);
				}
			}
		}

	}

	public String selectMobileSharOrderCancelOrdcd(String ORD_CD) throws Exception{
		return webBuySharingDao.selectMobileSharOrderCancelOrdcd(ORD_CD);
	}

	/**
	 * <pre>
	 * 구매 확정 처리
	 * 구매 확정을 처리 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 8. 19. 오후 2:20:00
	 * @author H.M.Yang
	 * @see com.ssocio.sharing.service.web
	 * </pre>
	 */
	@Transactional(rollbackFor=Exception.class)
	@Override
	public int updateShipProc(Map<String, Object> paramDto) throws Exception {
		int nResult = 0;

		paramDto.put("dlvStatCd", CmmnCnst.cmmn20);			// 배송완료

		try {
			nResult += webBuySharingDao.updateInvcInfo(paramDto);
			nResult += webBuySharingDao.updateOrdProcStat(paramDto);
		} catch (Exception e) {
			e.printStackTrace();
			TransactionAspectSupport.currentTransactionStatus().setRollbackOnly();
			nResult = 0;
		}
		return nResult;
	}
}