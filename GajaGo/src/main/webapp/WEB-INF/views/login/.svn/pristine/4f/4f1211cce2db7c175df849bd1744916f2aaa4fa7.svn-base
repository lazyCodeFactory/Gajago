package com.ssocio.sharing.dao.admin;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.cmmn.web.RspnsCnst;


@Component
public class AdminSPProdDao {
	// --------------------------------------------------------------------------
		// # Log 설정
		// --------------------------------------------------------------------------
		private static final Logger logger = LoggerFactory.getLogger(AdminSPProdDao.class);
		
		// --------------------------------------------------------------------------
		// # sqlSession 설정
		//	 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
		//	 -- 하나만 사용할 경우 @Autowired
		// --------------------------------------------------------------------------
		@Resource(name="sqlSessionAdmin")
		private SqlSession sqlSession;

		public void setSqlSession(SqlSession sqlSession) {
			this.sqlSession = sqlSession;
		}

		public List<Map<String, Object>> selectListSPProd(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListProd Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSPProdMapper.selectListSPProd",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}

		public List<Map<String, Object>> selectListDefaultTelinfo() throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSPProdMapper.selectListDefaultTelinfo");
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}


		public String insertSPProdTBReg(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultMakerinfo Start");
			try {
				 sqlSession.insert("adminSPProdMapper.insertSPProdTBReg",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return StringUtil.nvl(inParam.get("PROD_CODE").toString());
		}

		public int selectListSPProdCount(Map<String, Object> inParam)  throws Exception {
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultMakerinfo Start");
			Integer retCnt = 0;
			try {
				retCnt =  sqlSession.selectOne("adminSPProdMapper.selectListSPProdCount",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return retCnt;
		}

		public int insertColorTB(Map<String, Object> inParam) throws Exception{
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultMakerinfo Start");
			int retCode = 0;
			try {
				retCode = sqlSession.insert("adminSPProdMapper.insertColorTB",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return retCode;
		}

		public Integer insertSPImageTB(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultMakerinfo Start");
			Integer retCnt = 0;
			try {
				retCnt =  sqlSession.insert("adminSPProdMapper.insertSPImageTB",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return retCnt;
		}

		public Map<String, Object> updateProd(Map<String, Object> inParam) throws Exception{
			// # 시작로그
						// ------------------------------------------------------------------------
			logger.info("selectListProd Start");
			List<Map<String, Object>> list = null;
			try {
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return sqlSession.selectOne("adminSPProdMapper.updateProd",inParam);
		}

		public List<Map<String, Object>> selectProdColor(Map<String, Object> inParam) throws Exception{
			logger.info("selectListProd Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSPProdMapper.selectProdColor",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}

		public Object selectFileInfo(Map<String, Object> inParam) throws Exception{
			logger.info("selectListProd Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSPProdMapper.selectFileInfo",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}

		public Integer updatePProdTBReg(Map<String, Object> inParam)throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultMakerinfo Start");
			try {
				 sqlSession.update("adminSPProdMapper.updatePProdTBReg",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return 1;
		}

		public void DeleteColorTB(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultMakerinfo Start");
			try {
				 sqlSession.update("adminSPProdMapper.DeleteColorTB",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
		}

		public Integer updateColorTB(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultMakerinfo Start");
			Integer retCnt = 0;
			try {
				retCnt =  sqlSession.insert("adminSPProdMapper.updateColorTB",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return retCnt;
			
		}


		public Integer updateImgTBreg(Map<String, Object> inParam)  throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultMakerinfo Start");
			Integer retCnt = 0;
			try {
				retCnt =  sqlSession.update("adminSPProdMapper.updateImgTBreg",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return retCnt;
		}

		public Integer CheckImgData(Map<String, Object> inParam)  throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultMakerinfo Start");
			Integer retCnt = 0;
			try {
				retCnt =  sqlSession.selectOne("adminSPProdMapper.CheckImgData",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return retCnt;
		}

		public int SPProdImageDel(Map<String, Object> inParam) throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("SPProdImageDel Start");
			Integer retCnt = 0;
			try {
				retCnt =  sqlSession.delete("adminSPProdMapper.SPProdImageDel",inParam);
			
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return retCnt;
		}

		public int updateFileInfo(Map<String, Object> inParam)  throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("SPProdImageDel Start");
			Integer retCnt = 0;
			try {
				retCnt =  sqlSession.update("adminSPProdMapper.updateFileInfo",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return retCnt;
		}

		public int SPProdfileTBDel(Map<String, Object> inParam)  throws Exception{
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("SPProdfileTBDel Start");
			Integer retCnt = 0;
			try {
				retCnt =  sqlSession.delete("adminSPProdMapper.SPProdfileTBDel",inParam);
			
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return retCnt;
		}

		

		public List<Map<String, Object>> selectListselectListPay(Map<String, Object> inData)throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSPProdMapper.selectListselectListPay",inData);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}

		public List<Map<String, Object>> selectListPeriod()throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSPProdMapper.selectListPeriod");
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}

		public int insertSPProdDtlReg(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("insertSPProdDtlReg Start");
			int retCnt = 0;
			try { 
				retCnt =  sqlSession.insert("adminSPProdMapper.insertSPProdDtlReg",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return retCnt;
		}

		public List<Map<String, Object>> selectListSpProdDtlTb(Map<String, Object> inParam) throws Exception {
			// ------------------------------------------------------------------------
			// # 시작로그
			// ------------------------------------------------------------------------
			logger.info("selectListDefaultTelinfo Start");
			List<Map<String, Object>> list = null;
			try {
				list =  sqlSession.selectList("adminSPProdMapper.selectListSpProdDtlTb",inParam);
			} catch (Exception e) {
				logger.error("selectOneLastAutoIncrement DB Error : " + e.toString());
				throw new Exception(RspnsCnst.RC1000000004);
			}
			return list;
		}

		public int deleteSPprodDtlTb(Map<String, Object> inParam) throws Exception {
			return sqlSession.delete("adminSPProdMapper.deleteSPprodDtlTb",inParam);
		}

		/**
		 * <pre>
		 * prod table update 
		 *  상품명, 상세 정보 , 키워드 
		 * @param inParam
		 * @return
		 * @throws Exception
		 * @exception
		 * @date 2015. 9. 24. 오후 2:16:54
		 * @author LeeJinSe
		 * @see com.ssocio.sharing.dao.admin
		 * @비고
		 * 
		 * </pre>
		*/
		public int updateProdTBReg(Map<String, Object> inParam) throws Exception {
			return sqlSession.delete("adminSPProdMapper.updateProdTBReg",inParam);
		}

		public int SPProdColorDelConf(Map<String, Object> inParam) throws Exception {
			return sqlSession.selectOne("adminSPProdMapper.SPProdColorDelConf",inParam);
		}

		public int SPProdColorDelReg(Map<String, Object> inParam) throws Exception {
			return sqlSession.delete("adminSPProdMapper.SPProdColorDelReg",inParam);
		}

		public int CheckColorData(Map<String, Object> inParam) throws Exception {
			return sqlSession.selectOne("adminSPProdMapper.CheckColorData",inParam);
		}

		public int newinserTProdTBReg(Map<String, Object> inParam) throws Exception{
			return sqlSession.insert("adminSPProdMapper.newinserTProdTBReg",inParam);
		}

		public int selectListRegSPProd() {
			return sqlSession.selectOne("adminSPProdMapper.selectListRegSPProd");
		}


		
}
