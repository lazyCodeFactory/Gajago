package com.ssocio.sharing.service.admin;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.ui.ModelMap;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.ssocio.sharing.cmmn.admin.util.CommonUtil;
import com.ssocio.sharing.cmmn.admin.util.HttpUrlConnectionUtil;
import com.ssocio.sharing.cmmn.util.CmmnCnst;
import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.cmmn.web.RspnsCnst;
import com.ssocio.sharing.dao.admin.AdminPushDao;
import com.ssocio.sharing.vo.admin.PageNavigation;
/**
 * <pre>
 * admin 발송관리
 * 발송 관리를 윈한 서비스 
 * @author guitarhyo
 * @version
 * @since 2015. 7. 13. 오후 6:15:37
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 13.	|	guitarhyo	|신규
 * @비고
 * </pre>
 */
@Service
public class AdminPushServiceImpl implements AdminPushService {
	
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminPushServiceImpl.class);

	// --------------------------------------------------------------------------
	// # DAO 설정
	// --------------------------------------------------------------------------
	@Resource(name="adminPushDao")
	private AdminPushDao adminPushDao;


	@Override
	public ModelMap selectListPush(Map<String, Object> inParam) throws Exception {
		
		ModelMap mm = new ModelMap();
		try {
			
			inParam.put("param_snd_stat", StringUtil.nvl((String)inParam.get("param_snd_stat"), ""));
			inParam.put("param_snd_kind_cd", StringUtil.nvl((String)inParam.get("param_snd_kind_cd"), ""));
			inParam.put("param_snd_gb_cd", StringUtil.nvl((String)inParam.get("param_snd_gb_cd"), ""));
			
			
			//페이지번호
			inParam.put("PAGE_NO",StringUtil.nvl((String)inParam.get("PAGE_NO"), "1"));
			int nowPage = StringUtil.nvlInt((String)inParam.get("PAGE_NO"), 1);
			int rowCnt	= StringUtil.nvlInt((String)inParam.get("S_ROW_CNT"), 20);
			inParam.put("S_ROW_CNT", rowCnt);
			
			String today = StringUtil.getCurrentDate();
			inParam.put("S_END_DATE", StringUtil.nvl((String)inParam.get("S_END_DATE"), today));
			
			SimpleDateFormat format = new SimpleDateFormat("yyyyMMdd");
			Calendar cal = Calendar.getInstance();
			cal.add(Calendar.DATE, -7);
			inParam.put("S_START_DATE", StringUtil.nvl((String)inParam.get("S_START_DATE"), format.format(cal.getTime())));
			
			LoggerUtil.writeMap(inParam);
			
			
			int rowTotal = adminPushDao.selectListPushCount(inParam);
			
			
			PageNavigation pageNav= new PageNavigation(nowPage, rowTotal, rowCnt, CmmnCnst.ADM_BLOCK_SIZE);
			mm.put("PAGE_NO", nowPage);
			mm.put("pageNav", pageNav);
			inParam.put("START_ROW", pageNav.getStartRow());
			inParam.put("END_ROW", pageNav.getEndRow());
			
			mm.put("selectListPush",adminPushDao.selectListPush(inParam));
			mm.put("params", inParam);
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return mm;
	}


	@Override
	public ModelMap insertPushReg(Map<String, Object> paramDto) throws Exception {
		// TODO Auto-generated method stub
		ModelMap mm = new ModelMap();
		int retCnt = 0;
		//파라미터 셋팅
		//최초 발송 대기
		paramDto.put("SND_STAT", "00");
		String PUSH_SND_GB_CD =  (String)paramDto.get("PUSH_SND_GB_CD");
		try {
			

			  //즉시발송 및 예약발송에 따라 셋팅 후 등록
			 
			  if("Y".equals(paramDto.get("RESRV_YN") )){
				  String send_ymd =(String) paramDto.get("send_ymd");
				  send_ymd = send_ymd.replaceAll("-", "");
				  String send_hour  =(String) paramDto.get("send_hour");
				  String send_min  =(String) paramDto.get("send_min");
				  Date SND_DT = CommonUtil.toDateString(send_ymd+send_hour+send_min+"00", "yyyyMMddHHmmss");
				  paramDto.put("SND_DT", SND_DT);
			  }
			  
			  if("00".equals(PUSH_SND_GB_CD)){//전체발송
				  //서대운팀장님이 푸시발송하기때문에 전체는 GRP 테이블만 insert한다. 예비로 보냈던건 주석처리 나중을 위해
//				 String kindStr =  (String)paramDto.get("SND_KIND_CD");
//				  int kind = Integer.parseInt(kindStr);
//				  List<Map<String, Object>> list = new ArrayList<Map<String,Object>>();
//				  if(kind > 30){
//					  list = adminPushDao.selectListPushSend(paramDto);
//				  }else{
//					  list = adminPushDao.selectListPushSendAll(paramDto);
//				  }
//				  if(list !=null && list.size() > 0){
//					  for (int i = 0; i < list.size(); i++) {
//							
//						  Map<String, Object>  inParam =  new HashMap<String, Object>();
//						  String  OS_GB_CD = StringUtil.nvl((String) list.get(i).get("OS_GB_CD"),"");
//						  inParam.put("token",StringUtil.nvl((String) list.get(i).get("PUSH_ID"),""));
//							inParam.put("message", (String)paramDto.get("CONTENTS"));
//							inParam.put("pushtype",kindStr );
//							inParam.put("title", (String)paramDto.get("TITLE"));
//							inParam.put("badge", "1");
//						  	if("10".equals(OS_GB_CD)){
//								inParam.put("sound", "default");
//						  		HttpUrlConnectionUtil.callHttpURLConnectionPush("http://sso-app.ssocio.net:30080/IF_PUSH/gcm.pilot.html", "POST", inParam);
//						  	}else if("20".equals(OS_GB_CD)){
//								inParam.put("sound", "jingle.caf");
//						  		HttpUrlConnectionUtil.callHttpURLConnectionPush("http://sso-app.ssocio.net:30080/IF_PUSH/apns.pilot.html", "POST", inParam);
//						  	}
//					  }	
//					  paramDto.put("SND_CNT",list.size());
//					  
//				  }else{
//					  paramDto.put("SND_CNT",0);
//				  }
				  paramDto.put("SND_CNT",adminPushDao.selectListPushMberCnt(paramDto));
				  LoggerUtil.writeMap(paramDto);
				  retCnt= adminPushDao.insertPush(paramDto);
			  }else{//지정발송
				  retCnt = adminPushDao.updatePushGrp(paramDto);
			  }

		} catch (Exception e) {
			e.printStackTrace();
			throw new Exception(RspnsCnst.RC1033030001);
		}
		
		if(retCnt > 0){
			mm.put("retCode", "S");
		}else{
			mm.put("retCode", "F");
		}

		return mm;
	}


	@Override
	public ModelMap selectPush(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();
		Map<String, Object> retMap = null;

		try {
			retMap = adminPushDao.selectPush(paramDto);
			mm.put("selectPush",retMap);
			mm.put("params", paramDto);
			mm.put("SND_STAT",retMap.get("SND_STAT"));
		} catch (Exception e) {
			e.printStackTrace();
			throw e;
		}
		return mm;
	}


	@Override
	public ModelMap updatePush(Map<String, Object> paramDto) throws Exception {
		ModelMap mm = new ModelMap();
		int retCnt = 0;
		//파라미터 셋팅
		//발송 취소
		paramDto.put("SND_STAT", "01");

		try {
			
			retCnt = adminPushDao.updatePush(paramDto);
			if(retCnt > 0){
				mm.put("retCode", "S");
			}else{
				mm.put("retCode", "F");
			}
			
		} catch (Exception e) {
			e.printStackTrace();
			throw e;
		}

		return mm;
	}
	


	public ModelMap uploadPushExcel(MultipartHttpServletRequest req,Map<String, Object> inParam) throws Exception {
		MultipartFile excelFile = req.getFile("I_UPLOAD_FILE");
		ModelMap mm = new ModelMap();
		
		int uploadCount = 0;
		int jungCount = 0;
		int etcCount = 0;
		try {
			
			int insertCnt = adminPushDao.insertPushNone(inParam);
			if(insertCnt > 0){
				List<Map<String, Object>> excelData = CommonUtil.getOldExcelList(excelFile);

				for(Map<String, Object> rowData:excelData){

					String MBER_SEQ = (String) rowData.get("CELL0");
					if(MBER_SEQ != null && !"".equals(MBER_SEQ)){
						inParam.put("MBER_SEQ", MBER_SEQ);
						try {
							int ret = adminPushDao.insertPushMber(inParam);
							if(ret > 0){
								uploadCount++;
							}
						} catch (Exception e) {
							e.printStackTrace();
							jungCount++;
						}
						
					}else{
						etcCount++;
					}
					
					
					
				}
				
				mm.put("pushGrpSeq", String.valueOf(inParam.get("PUSH_GRP_SEQ")));
			}
		
			
			mm.put("uploadCount", uploadCount);
			mm.put("jungCount", jungCount);
			mm.put("etcCount", etcCount);
			mm.put("totalCount", uploadCount+jungCount+etcCount);
//			logger.debug("@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#");
//			LoggerUtil.writeMap(mm);

		} catch (Exception e) {
			e.printStackTrace();
			throw e;
		}
		return mm;
	}
	
	
	public int selectListPushMberCnt(Map<String, Object> inParam) throws Exception {
		int ret = 0;
		
		ret = adminPushDao.selectListPushMberCnt(inParam);
//		logger.debug("@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#@#"+ret);

		return ret;
	}
}
