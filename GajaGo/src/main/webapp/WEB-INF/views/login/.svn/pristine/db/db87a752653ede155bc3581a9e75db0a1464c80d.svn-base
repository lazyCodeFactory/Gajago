package com.ssocio.sharing.dao.admin;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.springframework.ui.ModelMap;

import com.ssocio.sharing.cmmn.web.RspnsCnst;

/**
 * <pre>
 * 설명
 * 설명
 * @author J.K.CHOI
 * @version
 * @since 2015. 7. 17. 오후 7:41:45
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 17.	|	J.K.CHOI	|신규
 * @비고
 * </pre>
 */
@Component
public class AdminStatisDao {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminStatisDao.class);
	
	/* --------------------------------------------------------------------------
		# sqlSession 설정
		 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
		 -- 하나만 사용할 경우 @Autowired
	   --------------------------------------------------------------------------*/
	@Resource(name="sqlSessionAdmin")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	@Resource(name="sqlSessionAdminLog")
	private SqlSession sqlSessionAdminLog;

	public void setSqlSessionAdminLog(SqlSession sqlSession) {
		this.sqlSessionAdminLog = sqlSession;
	}
	
	
	
	/**
	 * <pre>
	 * 정산완료 리스트 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 28. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectListAdjust(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListAdjust Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminAdjustMapper.selectListAdjust", inParam);
		} catch (Exception e) {
			logger.error("selectListAdjust DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	 }

	  /**
	   * <pre>
	   * 정산완료 리스트 카운트 조회
	   * 
	   * @param inParam
	   * @return
	   * @throws Exception
	   * @date 2015. 7. 28. 오후 2:10:39
	   * @author J.K.CHOI
	   * @see com.ssocio.sharing.dao.admin
	   * </pre>
	   */
	  public int selectListAdjustCount(Map<String, Object> inParam) throws Exception{
		  // // ------------------------------------------------------------------------
		  // # 시작로그
		  // ------------------------------------------------------------------------
		  logger.info("selectListAdjustCount Start");
		  int count= 0;
		  try {
			  count = sqlSession.selectOne("adminAdjustMapper.selectListAdjustCount", inParam);
		  }catch (Exception e) {
			  logger.error("selectListAdjustCount DB Error : " + e.toString());
			  throw new Exception(RspnsCnst.RC1000000004);
		  }
		  return count;
	  }
	  
	/**
	 * <pre>
	 * 정산완료 상세 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 29. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object>  selectAdjust(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectAdjust Start");
		Map<String, Object> map = null;
		try {
			map =  sqlSession.selectOne("adminAdjustMapper.selectAdjust", inParam);
		} catch (Exception e) {
			logger.error("selectAdjust DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}/**
	 * <pre>
	 * 정산완료 상세 리스트 조회
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 29. 오후 2:10:39
	 * @author J.K.CHOI
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectDtlListAdjust(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectDtlListAdjust Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminAdjustMapper.selectDtlListAdjust", inParam);
		} catch (Exception e) {
			logger.error("selectListAdjust DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	 }
	
	 /**
	   * <pre>
	   * 정산완료 상세 리스트 카운트 조회
	   * 
	   * @param inParam
	   * @return
	   * @throws Exception
	   * @date 2015. 7. 29. 오후 2:10:39
	   * @author J.K.CHOI
	   * @see com.ssocio.sharing.dao.admin
	   * </pre>
	   */
	  public int selectDtlListAdjustCount(Map<String, Object> inParam) throws Exception{
		  // // ------------------------------------------------------------------------
		  // # 시작로그
		  // ------------------------------------------------------------------------
		  logger.info("selectDtlListAdjustCount Start");
		  int count= 0;
		  try {
			  count = sqlSession.selectOne("adminAdjustMapper.selectDtlListAdjustCount", inParam);
		  }catch (Exception e) {
			  logger.error("selectDtlListAdjustCount DB Error : " + e.toString());
			  throw new Exception(RspnsCnst.RC1000000004);
		  }
		  return count;
	}
	
	public Map<String, Object> selectTotalAccStatis() throws Exception {
		logger.info("selectTotalAccStatis Start");
		Map<String, Object> map = null;
		try {
			map = sqlSessionAdminLog.selectOne("adminMyStatisMapper.selectTotalAccStatis");
		} catch (Exception e) {
			logger.error("selectTotalAccStatis DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}

	public List<Map<String, Object>> selectAccStatis(Map<String, Object> inParam) throws Exception {
		logger.info("selectAccStatis Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSessionAdminLog.selectList("adminMyStatisMapper.selectAccStatis", inParam);
		} catch (Exception e) {
			logger.error("selectTotalAccStatis DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	public List<Map<String, Object>> selectAccMonthStatis(Map<String, Object> inParam) throws Exception {
		logger.info("selectAccStatis Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSessionAdminLog.selectList("adminMyStatisMapper.selectAccMonthStatis", inParam);
		} catch (Exception e) {
			logger.error("selectTotalAccStatis DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	public List<Map<String, Object>> selectAccWeekStatis(Map<String, Object> inParam) throws Exception {
		logger.info("selectAccWeekStatis Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSessionAdminLog.selectList("adminMyStatisMapper.selectAccWeekStatis", inParam);
		} catch (Exception e) {
			logger.error("selectAccWeekStatis DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	// add 마성수
	public List<Map<String, Object>> selectAccWhDayStatis(Map<String, Object> inParam) throws Exception {
		logger.info("selectAccWhDayStatis Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSessionAdminLog.selectList("adminMyStatisMapper.selectAccWhDayStatis", inParam);
		} catch (Exception e) {
			logger.error("selectAccWhDayStatis DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}	
	
	
	
	public int insertStatisDate(Map<String, Object> inParam) throws Exception {
		try {
			sqlSessionAdminLog.insert("adminMyStatisMapper.insertStatisDate",inParam);
		} catch (Exception e) {
			logger.error("insertStatisDate DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return 0;
	}
	
	public int insertStatisDateOra(Map<String, Object> inParam) throws Exception {
		try {
			sqlSession.insert("adminStatisMapper.insertStatisDateOra",inParam);
		} catch (Exception e) {
			logger.error("insertStatisDateOra DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return 0;
	}

	public List<Map<String, Object>> selectMenuStatis(Map<String, Object> inParam) throws Exception {
		logger.info("selectMenuStatis Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSessionAdminLog.selectList("adminMyStatisMapper.selectMenuStatis", inParam);
		} catch (Exception e) {
			logger.error("selectMenuStatis DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	public List<Map<String, Object>> selectMenuWeekStatis(Map<String, Object> inParam) throws Exception {
		logger.info("selectMenuWeekStatis Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSessionAdminLog.selectList("adminMyStatisMapper.selectMenuWeekStatis", inParam);
		} catch (Exception e) {
			logger.error("selectMenuWeekStatis DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	public List<Map<String, Object>> selectMenuMonthStatis(Map<String, Object> inParam) throws Exception {
		logger.info("selectMenuMonthStatis Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSessionAdminLog.selectList("adminMyStatisMapper.selectMenuMonthStatis", inParam);
		} catch (Exception e) {
			logger.error("selectMenuMonthStatis DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	public List<Map<String, Object>> selectSignupStatis(Map<String, Object> inParam) throws Exception {
		logger.info("selectSignupStatis Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminStatisMapper.selectSignupStatis", inParam);
		} catch (Exception e) {
			logger.error("selectSignupStatis DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	public List<Map<String, Object>> selectSignupWeekStatis(Map<String, Object> inParam) throws Exception {
		logger.info("selectSignupWeekStatis Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminStatisMapper.selectSignupWeekStatis", inParam);
		} catch (Exception e) {
			logger.error("selectSignupWeekStatis DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	// add : 마성수
	public List<Map<String, Object>> selectSignupWhDayStatis(Map<String, Object> inParam) throws Exception {
		logger.info("selectSignupWhDayStatis Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminStatisMapper.selectSignupWhDayStatis", inParam);
		} catch (Exception e) {
			logger.error("selectSignupWhDayStatis DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}	
	
	
	public List<Map<String, Object>> selectSignupMonthStatis(Map<String, Object> inParam) throws Exception {
		logger.info("selectSignupMonthStatis Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminStatisMapper.selectSignupMonthStatis", inParam);
		} catch (Exception e) {
			logger.error("selectSignupMonthStatis DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

}
