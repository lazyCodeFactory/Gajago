package com.ssocio.sharing.service.admin;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;
import org.springframework.ui.ModelMap;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.dao.admin.AdminMainDao;
import com.ssocio.sharing.dao.admin.AdminStatisDao;
import com.ssocio.sharing.vo.admin.MenuInfoVO;

/**
 * <pre>
 * 메인화면 서비스
 * 메인화면 처리를 위한 서비스
 * @author Y.I.Chun
 * @version 
 * @since 2015. 7. 6. 오후 6:41:07
 * @see 
 * @History 
 *  Date          |    author    | 변경내용  
 *	2015. 7. 6.   |    Y.I.Chun  | 신규
 * @Todo
 * </pre>
 */
@Service
public class AdminMainServiceImpl implements AdminMainService {
	
	// 주문상태코드
	public static String ORD_STAT_CD_ORD = "10";
	public static String ORD_STAT_CD_CNL = "20";
	public static String ORD_STAT_CD_CNG = "30";
	public static String ORD_STAT_CD_RTN = "40";
	
	// 주문구분코드
	public static String ORD_GB_CD_PHN = "1";
	public static String ORD_GB_CD_SEL = "2";
	public static String ORD_GB_CD_SHR = "3";
	public static String ORD_GB_CD_FRE = "4";
	
	
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminMainServiceImpl.class);

	// --------------------------------------------------------------------------
	// # DAO 설정
	// --------------------------------------------------------------------------
	@Resource(name="adminMainDao")
	private AdminMainDao adminMainDao;
	
	@Resource(name="adminStatisDao")
	private AdminStatisDao adminStatisDao;
	
	/**
	 * <pre>
	 * 메인화면
	 * 메인회면에 표시할 정보를 조회 합니다.
	 * @param paramDto
	 * @return
	 * @throws Exception 
	 * @exception 
	 * @date 2015. 7. 6. 오전 09:20:24
	 * @author Y.I.Chun
	 * @비고
	 * 
	 * </pre>
	 */
	 public ModelAndView selectMainData(Map<String, Object> paramDto) throws Exception {

		ModelAndView mav = new ModelAndView();
    	ModelMap modelMap = new ModelMap();
    	
    	Map<String, Object> paramDto2 = new HashMap<String, Object>();
    	
		//주문현황작성
		//List<Map<String, Object>> orderInfoList = adminMainDao.selectOrderSituation(paramDto);
		//mav.addObject("orderInfoList", orderInfoList);
		//상품현황
		//List<Map<String, Object>> prodInfoList = adminMainDao.selectProdSituation(paramDto);
		//mav.addObject("prodInfoList", prodInfoList);
		//문의현황
		//Map<String, Object> qnaInfoList = adminMainDao.selectQnASituation(paramDto);
		//mav.addObject("qnaInfoList", qnaInfoList);
		

		mav.addObject("menuList", getMenuList(paramDto));

        List<Map<String, Object>> selectAccWhDayStatisData =  adminStatisDao.selectAccWhDayStatis(paramDto);  // 접속자 통계

		List<String> mw_acc_cnt = new ArrayList<String>();
		List<String> ma_acc_cnt = new ArrayList<String>();
		List<String> pw_acc_cnt = new ArrayList<String>();

//    	for(Map<String, Object> m : (List<Map<String, Object>>)modelMap.get("selectAccWeekStatis")){
    	for(Map<String, Object> m : selectAccWhDayStatisData ){

			logger.debug("MW_ACC_CNT : " + m.get("MW_ACC_CNT"));
			if(m.get("YMD") != null ){
				logger.debug(m.get("MW_ACC_CNT") + "dddddd");
				mw_acc_cnt.add(String.valueOf(m.get("MW_ACC_CNT")));
			    ma_acc_cnt.add(String.valueOf(m.get("MA_ACC_CNT")));
				pw_acc_cnt.add(String.valueOf(m.get("PW_ACC_CNT")));
			}
		}
		
		mav.addObject("mw_acc_cnt", mw_acc_cnt);
		mav.addObject("ma_acc_cnt", ma_acc_cnt);
		mav.addObject("pw_acc_cnt", pw_acc_cnt);		

        List<Map<String, Object>> selectSignupWhDayStatisData =  adminStatisDao.selectSignupWhDayStatis(paramDto); // 가입자 통계


		List<String> mw_sgn_o_cnt = new ArrayList<String>();
		List<String> mw_sgn_s_cnt = new ArrayList<String>();
		List<String> ma_sgn_o_cnt = new ArrayList<String>();
		List<String> ma_sgn_s_cnt = new ArrayList<String>();
		List<String> pw_sgn_o_cnt = new ArrayList<String>();
		List<String> pw_sgn_s_cnt = new ArrayList<String>();
		
		for(Map<String, Object> m : selectSignupWhDayStatisData ){
			
			logger.debug("MW_ACC_CNT : " + m.get("MW_ACC_CNT"));
			if(m.get("YMD") != null ){
				mw_sgn_o_cnt.add(String.valueOf(m.get("MW_SGN_O_CNT")));
				mw_sgn_s_cnt.add(String.valueOf(m.get("MW_SGN_S_CNT")));
				ma_sgn_o_cnt.add(String.valueOf(m.get("MA_SGN_O_CNT")));
				ma_sgn_s_cnt.add(String.valueOf(m.get("MA_SGN_S_CNT")));
				pw_sgn_o_cnt.add(String.valueOf(m.get("PW_SGN_O_CNT")));
				pw_sgn_s_cnt.add(String.valueOf(m.get("PW_SGN_S_CNT")));
			}
		}
			
		mav.addObject("mw_sgn_o_cnt", mw_sgn_o_cnt);
		mav.addObject("mw_sgn_s_cnt", mw_sgn_s_cnt);
		mav.addObject("ma_sgn_o_cnt", ma_sgn_o_cnt);
		mav.addObject("ma_sgn_s_cnt", ma_sgn_s_cnt);
		mav.addObject("pw_sgn_o_cnt", pw_sgn_o_cnt);
		mav.addObject("pw_sgn_s_cnt", pw_sgn_s_cnt);
		
		mav.addObject("selectAccWhDayStatis",    selectAccWhDayStatisData);     // 접속자 통계
		mav.addObject("selectSignupWhDayStatis", selectSignupWhDayStatisData);  // 가입자 통계
			
		paramDto2.put("gap",       "0");
		paramDto2.put("date",      "" + paramDto.get("curDay"));
		paramDto2.put("last_date", "" + paramDto.get("curDay"));

		mav.addObject("selectAccWhDayStatisToday",    adminStatisDao.selectAccWhDayStatis(paramDto2));    // 금일 접속자
		mav.addObject("selectSignupWhDayStatisToday", adminStatisDao.selectSignupWhDayStatis(paramDto2)); // 금일 가입자

        List<Object> statOrderCntList = new ArrayList<Object>();

		modelMap.put("selectOrderCntListData", adminMainDao.selectOrderCntList(paramDto));        // 주문 
    	modelMap.put("selectOrderCancelCntListData", adminMainDao.selectOrderCancelCntList(paramDto)); // 주문취소
    	
    	paramDto.put("rtn_gp", "4X");
    	modelMap.put("selectOrderCancelCntListData4X", adminMainDao.selectOrderRtnCntList(paramDto)); // 교환
    	
    	paramDto.put("rtn_gp", "3X");
    	modelMap.put("selectOrderCancelCntListData3X", adminMainDao.selectOrderRtnCntList(paramDto)); // 반품
    	
    	statOrderCntList.add(modelMap);

		mav.addObject("statOrderCntList",   statOrderCntList); // 주문건수 / 주문금액
		
		
		mav.addObject("selectProdCntList", adminMainDao.selectProdCntList(paramDto)); // 판매지표
		mav.addObject("selectQnaCntList",  adminMainDao.selectQnaCntList(paramDto));  // 문의지표

		mav.addObject("params"	   ,paramDto);
	
		return mav;
	}
	 
	/**
	 * <pre>
	 * 메뉴리스트
	 * 메뉴정보를 조회한다.
	 * @param paramDto
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 8. 오후 1:36:58
	 * @author Y.I.Chun
	 * @see com.ssocio.sharing.service.admin
	 * </pre>
	 */
	public List<MenuInfoVO> getMenuList(Map<String, Object> paramDto) throws Exception {
		    
		List<MenuInfoVO> menuList = new ArrayList<MenuInfoVO>();//전체메뉴 목록 
		MenuInfoVO menu = null; //상위메뉴(Map)+하위메뉴(List<Map>)
	      
		List<Map<String, Object>> list = adminMainDao.selectMenuList(paramDto);//메뉴 리스트 조회
		
		for(int i=0;i<list.size();i++){
	        Map<String, Object> item = list.get(i);
	        //상위메뉴 조회
	        if(item.get("PARENT_MENU_CD")==null || item.get("PARENT_MENU_CD").equals("")){
	        	if(i>0){
	        		menuList.add(menu);
	        	}
	        	menu = new MenuInfoVO();    //새로운 메뉴 클래스 생성
		        menu.setTopMenuInfo(item);  //상위메뉴 set
	        } else {
	        	menu.putSubMenuList(item);//메뉴 클래스에 하위메뉴 put
	        }
		}
		menuList.add(menu);//마지막 Loop에서 생성한 메뉴 등록
		
		return menuList;
	}
}
