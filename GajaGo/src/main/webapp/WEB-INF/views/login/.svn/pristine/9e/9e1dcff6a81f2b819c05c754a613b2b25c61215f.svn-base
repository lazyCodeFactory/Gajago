<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="webSaleManageMapper">

	<!-- 상품 메인이미지 -->
	<resultMap id="prodImageMap" type="hashmap">
		<id property="MAIN_FILE_SEQ"			column="MAIN_FILE_SEQ" />
		<result property="MAIN_FILE_GB_CD"		column="MAIN_FILE_GB_CD" />
		<result property="MAIN_FILE_URL"		column="MAIN_FILE_URL" />
		<collection property="subProdImage" javaType="java.util.ArrayList" resultMap="subProdImageMap" />
	</resultMap>

	<!-- 상품 서브이미지 -->
	<resultMap id="subProdImageMap" type="hashmap">
		<id property="SUB_FILE_SEQ"			column="SUB_FILE_SEQ" />
		<result property="SUB_FILE_GB_CD"	column="SUB_FILE_GB_CD" />
		<result property="SUB_FILE_URL"		column="SUB_FILE_URL" />
	</resultMap>

	<!-- 상품문의 건수 -->
	<resultMap id="prodQnaCnt" type="hashmap">
		<id property="TOT_CNT" 				column="TOT_CNT" javaType="Integer" />
		<result property="NO_ANS_CNT"	column="NO_ANS_CNT" />
		<result property="ANS_CNT"	column="ANS_CNT" />
	</resultMap>

	<!-- 상품 주문내역 조회 -->
	<resultMap id="listOrderMap" type="hashmap">
		<id 	property="ORD_CD"			column="ORD_CD" />
		<id 	property="RNUM"				column="RNUM" />
		<result property="CNT"				column="CNT" />
		<result property="REGIST_DT"		column="REGIST_DT" />
		<result property="RNUM"				column="RNUM" />

		<result property="ORD_EMAIL"		column="ORD_EMAIL" />
		<result property="MBER_EMAIL"		column="MBER_EMAIL" />
		<result property="ORD_TEL"			column="ORD_TEL" />
		<result property="ORD_HP"			column="ORD_HP" />
		<result property="REAL_SELT_AMT"	column="REAL_SELT_AMT" />
		<result property="ORD_AMT"			column="ORD_AMT" />
		<result property="DSCNT_AMT"		column="DSCNT_AMT" />
		<result property="MBER_IMG_URL"		column="MBER_IMG_URL" />

		<result property="RCV_NM"			column="RCV_NM" />
		<result property="DLV_ZIP_CD"		column="DLV_ZIP_CD" />
		<result property="DLV_RCV_NM"		column="DLV_RCV_NM" />
		<result property="JUSO_JIBEN"		column="JUSO_JIBEN" />
		<result property="JUSO_DORO"		column="JUSO_DORO" />
		<result property="JUSO_DTL"			column="JUSO_DTL" />
		<result property="RCV_TEL"			column="RCV_TEL" />
		<result property="RCV_HP"			column="RCV_HP" />
		<result property="DLV_MSG"			column="DLV_MSG" />
		<result property="SECU_NO_USE_YN"	column="SECU_NO_USE_YN" />
		<result property="SECU_NO"			column="SECU_NO" />
		<result property="MBER_LEV"			column="MBER_LEV" />

		<collection property="subOrder" javaType="java.util.ArrayList" resultMap="subOrderMap" />
		
	</resultMap>

	<!-- 상품 주문내역 조회 SUB -->
	<resultMap id="subOrderMap" type="hashmap">
		<id		property="PROD_CODE"			column="PROD_CODE" />
		<id		property="PROD_SEQ"				column="PROD_SEQ" />
		<result property="PROD_TYPE_CD"			column="PROD_TYPE_CD" />
		<result property="PROC_STAT_CD"			column="PROC_STAT_CD" />
		<result property="PROC_STAT_CD_NM"		column="PROC_STAT_CD_NM" />
		<result property="PROD_ORD_AMT"			column="PROD_ORD_AMT" />
		<result property="DLV_PRCE"				column="DLV_PRCE" />
		<result property="ORD_QTY"				column="ORD_QTY" />
		<result property="DLV_PAY_F_CD"			column="DLV_PAY_F_CD" />
		<result property="OPI_REGIST_DT"		column="OPI_REGIST_DT" />
		<result property="SHARE_TERM"			column="SHARE_TERM" />
		<result property="PROD_NM"				column="PROD_NM" />
		<result property="SELL_PRCE"			column="SELL_PRCE" />
		<result property="DLV_PAY_GB_CD"		column="DLV_PAY_GB_CD" />
		<result property="DLV_WAY_CD"			column="DLV_WAY_CD" />
		<result property="DLV_CMP_CD"			column="DLV_CMP_CD" />
		<result property="DLV_CMP_NM"		column="DLV_CMP_NM" />
		<result property="SHARING_PRICE"		column="SHARING_PRICE" />
		<result property="DEPOSIT"				column="DEPOSIT" />
		<result property="DEPOSIT2"				column="DEPOSIT2" />
		<result property="FILE_SEQ"				column="FILE_SEQ" />
		<result property="PROD_IMG_URL"			column="PROD_IMG_URL" />

		<result property="CONF_DATE"			column="CONF_DATE" />
		<result property="SHARE_START_DT"		column="SHARE_START_DT" />
		<result property="SHARE_END_DT"			column="SHARE_END_DT" />
		<result property="SHARE_USE_DT"			column="SHARE_USE_DT" />
		<result property="SHARE_TRGT_DT"		column="SHARE_TRGT_DT" />
		<result property="TO_DAY"				column="TO_DAY" />
		<result property="PROG_VAL"				column="PROG_VAL" />

		<result property="CANC_REASON"			column="CANC_REASON" />
		<result property="CANC_REASON_CD"		column="CANC_REASON_CD" />
		<result property="CANC_DT"				column="CANC_DT" />
		<result property="CANC_REASON_CD_NM"	column="CANC_REASON_CD_NM" />

		<result property="CHG_REG_DT"			column="CHG_REG_DT" />
		<result property="CHG_REASON"			column="CHG_REASON" />
		<result property="CHG_REASON_CD"		column="CHG_REASON_CD" />
		<result property="CHG_REASON_CD_NM"		column="CHG_REASON_CD_NM" />

		<result property="ADJ_COMP_YN"			column="ADJ_COMP_YN" />
		<result property="CHG_CD"				column="CHG_CD" />
		<result property="RTN_REG_DT"			column="RTN_REG_DT" />
		<result property="RTN_EXP_DT"			column="RTN_EXP_DT" />
		<result property="RTN_USE_DT"			column="RTN_USE_DT" />
		<result property="RTN_RCV_NM"			column="RTN_RCV_NM" />
		<result property="RTN_TEL"				column="RTN_TEL" />
		<result property="RTN_HP"				column="RTN_HP" />
		<result property="RTN_ZIP_CODE"			column="RTN_ZIP_CODE" />

		<result property="RTN_JUSO_JIBEN"		column="RTN_JUSO_JIBEN" />
		<result property="RTN_JUSO_DORO"		column="RTN_JUSO_DORO" />
		<result property="RTN_JUSO_DTL"			column="RTN_JUSO_DTL" />
		<result property="RTN_CMP"				column="RTN_CMP" />
		<result property="CHG_DLV_END_DT"		column="CHG_DLV_END_DT" />
		<result property="SHAREING_AMT"			column="SHAREING_AMT" />
		<result property="SHARE_TERM"			column="SHARE_TERM" />
		<result property="SELLER_MBER_GB_CD"			column="SELLER_MBER_GB_CD" />
		<result property="DLV_WAY_CD"			column="DLV_WAY_CD" />
		<result property="DLV_GROUP_YN"			column="DLV_GROUP_YN" />
		<result property="DLV_STAND_AMT"			column="DLV_STAND_AMT" />
		<result property="SHARE_USING_DAY"			column="SHARE_USING_DAY" />
		<result property="SHAR_STA_DATE"			column="SHAR_STA_DATE" />
		<result property="SHAR_END_DATE"			column="SHAR_END_DATE" />
		<result property="FOR_VISIT"			column="FOR_VISIT" />
		<result property="PROC_STAT_NM"			column="PROC_STAT_NM" />
		<result property="SHAR_DAY"				column="SHAR_DAY" />
		<result property="SHAREING_ADD_AMT"		column="SHAREING_ADD_AMT" />
		<result property="DEPOSIT_BAL"			column="DEPOSIT_BAL" />
		<result property="USE_DATE"				column="USE_DATE" />
		<result property="REFUND_STAT_NM"		column="REFUND_STAT_NM" />
		<result property="CHG_TERM"				column="CHG_TERM" />
		<result property="RCV_NM"				column="RCV_NM" />
		<result property="ZIP_CODE"				column="ZIP_CODE" />
		<result property="BAS_ADDR"				column="BAS_ADDR" />
		<result property="DTL_ADDR"				column="DTL_ADDR" />
		<result property="CONTACT"				column="CONTACT" />
		<result property="PROD_CPN_CD"			column="PROD_CPN_CD" />
		<result property="DLV_GRP_CODE"			column="DLV_GRP_CODE" />
		<result property="SELT_GB_CD"			column="SELT_GB_CD" />
		<result property="PHONE_CANCEL_YN"		column="PHONE_CANCEL_YN" />
		<collection property="subOrderOpt" javaType="java.util.ArrayList" resultMap="subOrderOptMap" />

	</resultMap>

	<!-- 상품 옵션 쿼리-->
	<resultMap id="subOrderOptMap" type="hashmap">

		<result property="OPT_INFO"				column="OPT_INFO" />
		<result property="OPT_QTY"				column="OPT_QTY" />
		<result property="OPT_PRCE"				column="OPT_PRCE" />
		<result property="OP_GB_CD"				column="OP_GB_CD" />
	</resultMap>

	<!-- 나눔 신청내역 상세 조회 -->
	<resultMap id="ordFreeDtlMap" type="hashmap">
		<id 	property="PROD_CODE"				column="PROD_CODE" />
		<result property="PROD_NM"					column="PROD_NM" />
		<result property="PROD_TYPE_CD"				column="PROD_TYPE_CD" />
		<result property="DLV_WAY_CD"				column="DLV_WAY_CD" />
		<result property="FREESHARE_START_DT"		column="FREESHARE_START_DT" />
		<result property="FREESHARE_END_DT"			column="FREESHARE_END_DT" />
		<result property="PROD_IMG_URL"				column="PROD_IMG_URL" />
		<result property="REQ_CNT"					column="REQ_CNT" />
		<result property="PROC_STAT_CD"				column="PROC_STAT_CD" />
		<result property="PROC_STAT_CD_NM"			column="PROC_STAT_CD_NM" />

		<collection property="ordFreeDtlSub" javaType="java.util.ArrayList" resultMap="ordFreeDtlSubMap" />
	</resultMap>

	<!-- 상품 주문내역 조회 SUB -->
	<resultMap id="ordFreeDtlSubMap" type="hashmap">
		<id		property="MBER_SEQ"					column="MBER_SEQ" />
		<result property="MBER_IMG_URL"				column="MBER_IMG_URL" />
		<result property="MBER_EMAIL"				column="MBER_EMAIL" />
		<result property="REQ_MEMO"					column="REQ_MEMO" />
	</resultMap>





	<select id="selectDlvInfo" resultType="hashmap">
	/* 유저의 전체 출하지 가져오기 */
		SELECT GRP_PROD_SEQ
			 , GRP_NM
			 , ZIP_CD
			 , JUSO_DORO
			 , JUSO_JIBEN
			 , JUSO_DTL
			 , TEL
			 , HP
			 , BASE_YN
			 , CASE WHEN JUSO_DORO = NULL THEN JUSO_JIBEN ELSE JUSO_DORO END AS CUST_ADDR
		  FROM GRP_PROD_INFO
		  WHERE MBER_SEQ = #{mberSeq}
	</select>


	<select id="selectCheckDlvInfo" resultType="hashmap" parameterType="hashmap">
	/* 기본출하지만 가져오기 */
		SELECT GRP_PROD_SEQ
			 , GRP_NM
			 , ZIP_CD
			 , JUSO_DORO
			 , JUSO_JIBEN
			 , JUSO_DTL
			 , TEL
			 , HP
			 , BASE_YN
		  FROM GRP_PROD_INFO
		  WHERE MBER_SEQ = #{mberSeq}
		  AND BASE_YN = 'Y'
	</select>


	<!-- 공통코드 그룹별 리스트 조회 -->
	<select id="selectListCodeGroup" parameterType="hashmap" resultType="hashmap">
		SELECT B.GRP_CD
			 , B.COM_CD
			 , B.COM_CD_NM
			 , B.COM_CD_VAL
			 , B.SORT_SEQ
			 , B.USE_YN
		  FROM GRP_CD A
			 , CODE B
		 WHERE A.GRP_CD  = B.GRP_CD
		   AND A.GRP_CD = #{grpCd}
			ORDER BY B.SORT_SEQ ASC

	</select>

	<!-- 판매자의 정보 조회 -->
	<select id="selectSellerInfo" parameterType="hashmap" resultType="hashmap">
<!--
		SELECT MI.MBER_EMAIL
		      ,FI.FILE_URL
		      ,MDI.SELL_MBER_LEV_SEQ
		      ,ML.MBER_LEV_NM
		      ,NVL((SELECT SUM(SALES_PRCE) FROM SALES_MBER WHERE MBER_SEQ = MI.MBER_SEQ),0) AS SALES_AMT
		      ,(
		        SELECT PLUS_SUM - MINUS_SUM AS CRED_POINT
		  		  FROM (
						SELECT NVL(SUM(CASE WHEN ADD_YN = 'Y' THEN CPOINT ELSE 0 END),0) AS PLUS_SUM
						      ,NVL(SUM(CASE WHEN ADD_YN = 'N' THEN CPOINT ELSE 0 END),0) AS MINUS_SUM
						  FROM CRED_POINT
						 WHERE MBER_SEQ = #{mberSeq}
		 				)
		       ) AS CRED_POINT
		  FROM MBER_INFO MI, FILE_INFO FI, MBER_DTL_INFO MDI, MBER_LEV ML
		 WHERE MI.MBER_IMG = FI.FILE_SEQ(+)
		   AND MI.MBER_SEQ = MDI.MBER_SEQ(+)
		   AND MI.MBER_REG_GB_CD = ML.MBER_REG_GB_CD(+)
		   AND MDI.SELL_MBER_LEV_SEQ = ML.MBER_LEV_SEQ
		   AND MI.MBER_SEQ = #{mberSeq} -->

			SELECT MI.MBER_NM
			     , MI.MBER_EMAIL
			     , MI.MBER_NICK
			     , (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'MBER_REG_GB_CD' AND COM_CD = MI.MBER_REG_GB_CD) AS MBER_REG_GB_CD_NM
			     , FI.FILE_URL
			     , MDI.SELL_MBER_LEV_SEQ
			     , ML.MBER_LEV_NM
			     , NVL( (
			       SELECT SUM(SALES_PRCE)
			         FROM SALES_MBER
			        WHERE MBER_SEQ = MI.MBER_SEQ
			     ), 0) AS SALES_AMT, (
			       SELECT PLUS_SUM - MINUS_SUM AS CRED_POINT
			         FROM (
			              SELECT NVL(SUM(CASE WHEN ADD_YN = 'Y' THEN CPOINT ELSE 0 END), 0) AS PLUS_SUM
			                   , NVL(SUM(CASE WHEN ADD_YN = 'N' THEN CPOINT ELSE 0 END), 0) AS MINUS_SUM
			                FROM CRED_POINT
			               WHERE MBER_SEQ = #{mberSeq}
			            )
			     ) AS CRED_POINT, SI.MINI_SHOP_NM, FI1.FILE_URL AS LVL_FILE_URL
			  FROM MBER_INFO MI
			     , FILE_INFO FI
			     , MBER_DTL_INFO MDI
			     , MBER_LEV ML
			     , MBER_MINI_SHOP_INFO SI
			     , FILE_INFO FI1
			 WHERE MI.MBER_IMG = FI.FILE_SEQ (+)
			   AND MI.MBER_SEQ = MDI.MBER_SEQ (+)
			   AND MI.MBER_REG_GB_CD = ML.MBER_REG_GB_CD (+)
			   AND MI.MBER_SEQ = SI.MBER_SEQ (+)
			/* AND ML.MBER_LEV_SEQ = MDI.BUY_MBER_LEV_SEQ(+) AND MI.MBER_REG_GB_CD = '0'
			   AND ML.MBER_LEV_SEQ = MDI.SELL_MBER_LEV_SEQ(+) AND MI.MBER_REG_GB_CD = '1'*/
			   AND ML.FILE_SEQ = FI1.FILE_SEQ (+)
			   AND MDI.SELL_MBER_LEV_SEQ = ML.MBER_LEV_SEQ
			   AND MI.MBER_SEQ = #{mberSeq}
	</select>


	<!-- 로그인한 사용자의 등록된 판매물품 갯수 -->
	<select id="selectSaleProdCnt" parameterType="HashMap" resultType="HashMap">

		SELECT COUNT(1) AS TOT_CNT
		      ,NVL(SUM(DECODE(PROD_STAT_CD, '0', 1, 0)),0) AS SALE_CNT
		      ,NVL(SUM(DECODE(PROD_STAT_CD, '1', 1, 0)),0) AS CLOSE_CNT
		      ,NVL(SUM(DECODE(PROD_STAT_CD, '2', 1, 0)),0) AS STOP_CNT
		  FROM PROD
		 WHERE MBER_SEQ = #{mberSeq}
		 <![CDATA[
		   AND PROD_STAT_CD <> '3'
		 ]]>

	</select>

	<!-- 해당하는 카테고리의 브랜드 정보 조회 -->
	<select id="selectBrandList" parameterType="HashMap" resultType="HashMap">

		SELECT INFO.BRAND_CD
		      ,INFO.BRAND_NM
		      ,INFO.FILE_SEQ
		      ,CTRY.CTRY_CD
		      ,FL.FILE_TITLE
		      ,FL.FILE_NM
		      ,FL.FILE_PATH
		      ,FL.FILE_URL
		  FROM BRAND_INFO INFO, BRAND_CTRY_MAP CTRY, FILE_INFO FL
		 WHERE INFO.BRAND_CD = CTRY.BRAND_CD
		   AND INFO.FILE_SEQ = FL.FILE_SEQ
		   AND INFO.VIEW_YN = 'Y'
		   AND CTRY.CTRY_CD = #{ctryCd}
		  <if test="brandNm != null and brandNm != ''">
		   AND UPPER(INFO.BRAND_NM) LIKE UPPER('%'||#{brandNm}||'%')
		  </if>

	</select>

	<!-- 파일삭제 -->
	<update id="deleteFile" parameterType="hashmap">

		UPDATE FILE_INFO
		   SET DEL_YN = #{delYn}
		 WHERE FILE_SEQ = #{fileSeq}

	</update>

	<!-- 파일등록 -->
	<insert id="insertFile" parameterType="hashmap" useGeneratedKeys="true" keyProperty="FILE_SEQ" keyColumn="FILE_SEQ">
		INSERT INTO FILE_INFO(
				 FILE_SEQ        <!--  파일일련번호  -->
				, FILE_TITLE     <!--  파일제목  -->
				, FILE_NM        <!--  파일명 -->
				, FILE_PATH      <!--  파일경로  -->
				, FILE_URL       <!--  파일URL  -->
				, FILE_SIZE      <!--  파일사이즈 -->
				, FILE_EXT       <!--  파일확장자 -->
				, REGIST_DT      <!--  등록일시  -->
				, UPDT_DT        <!--  수정일시  -->
				, FILE_WIDTH        <!--  수정일시  -->
				, FILE_HEIGH        <!--  수정일시  -->

		)VALUES (
				TO_CHAR(SYSDATE, 'YYYYMMDD')||LPAD(SEQ_FILE_INFO.NEXTVAL,8,0)
				, #{I_FILE_TITLE}
				, #{I_FILE_NM}
				, #{I_FILE_PATH}
				, #{I_FILE_URL}
				, #{I_FILE_SIZE}
				, #{I_FILE_EXT}
				, SYSDATE
				, SYSDATE
				, #{I_FILE_WIDTH}
				, #{I_FILE_HEIGH}
		)
	</insert>

	<!-- 제휴택배사 배송비 조회 -->
	<select id="selectRelDlvInfo" parameterType="hashmap" resultType="hashmap">

		SELECT DLV_CMP_CD
		      ,DLV_AMT
		      ,DLV_AMT_JEJU
		      ,DLV_AMT_DOSE
		  FROM REL_DLV_INFO
		 WHERE DLV_CMP_CD = #{dlvCmpCd}

	</select>

	<!-- 제휴택배사 배송비 조회 -->
	<select id="selectListRelDlvInfo" parameterType="hashmap" resultType="hashmap">

		SELECT DLV_CMP_CD
		 	  , (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'DLV_CMP_CD' AND COM_CD = DLV_CMP_CD ) AS DLV_CMP_NM
		      ,DLV_AMT
		      ,DLV_AMT_JEJU
		      ,DLV_AMT_DOSE
		  FROM REL_DLV_INFO

	</select>

	<!-- 상품 카테고리 수수료 조회 -->
	<select id="selectCtryTax" parameterType="hashmap" resultType="hashmap">

		SELECT CTRY_CD
			  ,CTRY_NM
			  ,TAX_SHARING
			  ,(TAX_SHARING * 100) AS TAX_SHARING_VIEW
			  ,TAX_RENTAL
			  ,(TAX_RENTAL * 100) AS TAX_RENTAL_VIEW
			  ,TAX_SALE
			  ,(TAX_SALE * 100) AS TAX_SALE_VIEW
			  ,TAX_SPEC
			  ,(TAX_SPEC * 100) AS TAX_SPEC_VIEW

			  ,TO_CHAR(NVL(TAX_SALE,0),'FM90.0') as TAX_SALE_CHAR
			  ,TO_CHAR(NVL(TAX_SHARING,0),'FM90.0') as TAX_SHARING_CHAR

		  FROM CTRY
		 WHERE CTRY_CD = #{ctryCd}

	</select>

	<!-- 결제 수수료 조회 -->
	<select id="selectSetlTax" parameterType="hashmap" resultType="hashmap">

		SELECT MAX(CARD_TAX_TEXT) AS CARD_TAX_TEXT
			  ,MAX(CARD_TAX_VAL) AS CARD_TAX_VAL
			  ,MAX(HP_TAX_TEXT) AS HP_TAX_TEXT
			  ,MAX(HP_TAX_VAL) AS HP_TAX_VAL
			  ,MAX(ACC_TAX_TEXT) AS ACC_TAX_TEXT
			  ,MAX(ACC_TAX_VAL) AS ACC_TAX_VAL
			  ,MAX(PAYCO_TAX_TEXT) AS PAYCO_TAX_TEXT
			  ,MAX(PAYCO_TAX_VAL) AS PAYCO_TAX_VAL
		  FROM (
				SELECT CASE WHEN COM_CD = '1' THEN COM_CD_VAL ELSE '0' END AS CARD_TAX_TEXT
					  ,CASE WHEN COM_CD = '1' THEN (COM_CD_VAL / 100) ELSE 0 END AS CARD_TAX_VAL
					  ,CASE WHEN COM_CD = '2' THEN COM_CD_VAL ELSE '0' END AS HP_TAX_TEXT
					  ,CASE WHEN COM_CD = '2' THEN (COM_CD_VAL / 100) ELSE 0 END AS HP_TAX_VAL
					  ,CASE WHEN COM_CD = '3' THEN COM_CD_VAL ELSE '0' END AS ACC_TAX_TEXT
					  ,CASE WHEN COM_CD = '3' THEN (COM_CD_VAL / 100) ELSE 0 END AS ACC_TAX_VAL
					  ,CASE WHEN COM_CD = '4' THEN COM_CD_VAL ELSE '0' END AS PAYCO_TAX_TEXT
					  ,CASE WHEN COM_CD = '4' THEN (COM_CD_VAL / 100) ELSE 0 END AS PAYCO_TAX_VAL
				  FROM CODE
				 WHERE GRP_CD = #{grpCd}
				)

	</select>

	<!-- 상품 등록 -->
	<insert id="insertProd" parameterType="HashMap" useGeneratedKeys="true" keyProperty="PROD_CODE" keyColumn="PROD_CODE">

		INSERT INTO PROD(
						 PROD_CODE
						,SELLER_CD
						,MBER_SEQ
						,PROD_TYPE_CD
						,PROD_STAT_CD
						,CTRY_CD
						,BRAND_CD
						,PROD_NM
						<if test="nProdGbCd != null and nProdGbCd != ''">
							,NPROD_GB_CD
					  	</if>
						<if test="nrmPrce != null and nrmPrce != ''">
							,NRM_PRCE
					  	</if>
					  	<if test="sellPrce != null and sellPrce != ''">
							,SELL_PRCE
					  	</if>
					  	<if test="stockQty != null and stockQty != ''">
							,STOCK_QTY
					  	</if>
						,KEYWORD
						,PROD_PC_DTL
						,PROD_MB_DTL
						,DLV_WAY_CD
						,OPT_PROD_YN
						,REGIST_DT
						,UPDT_DT
						<if test="dlvCmpCd != null and dlvCmpCd != ''">
							,DLV_CMP_CD
					  	</if>
						<if test="dlvPayGbCd != null and dlvPayGbCd != ''">
							,DLV_PAY_GB_CD
					  	</if>
						<if test="dlvPrce != null and dlvPrce != ''">
							,DLV_PRCE
					  	</if>
						<if test="bndlDlvYn != null and bndlDlvYn != ''">
							,BNDL_DLV_YN
					  	</if>
						<if test="tradLoc != null and tradLoc != ''">
							,TRAD_LOC
					  	</if>
					  	<if test="freeShareEndDt != null and freeShareEndDt != ''">
							,FREESHARE_END_DT
					  	</if>
					  	<if test="TXN_ON_YN != null and TXN_ON_YN != ''">
							,TXN_ON_YN
					  	</if>
					  	<if test="PROD_ITEM_CODE != null and PROD_ITEM_CODE != ''">
							,PROD_ITEM_CODE
					  	</if>
					  	,MB_DTL_HTML_YN
					  	,MB_DTL_USE_YN
					  	,PC_DTL_USE_YN
						)
				 VALUES (
				 		 TO_CHAR(SYSDATE,'YYYYMMDD')||TRIM(TO_CHAR(SEQ_PROD_CODE.NEXTVAL,'000000'))
				 		,#{sellerCd}
				 		,#{mberSeq}
				 		,#{prodTypeCd}
				 		,#{prodStatCd}
				 		,#{ctryCd}
				 		,#{brandCd, jdbcType=VARCHAR}
				 		,#{prodNm}
				 		<if test="nProdGbCd != null and nProdGbCd != ''">
							,#{nProdGbCd}
					  	</if>
					  	<if test="nrmPrce != null and nrmPrce != ''">
							,#{nrmPrce}
					  	</if>
					  	<if test="sellPrce != null and sellPrce != ''">
							,#{sellPrce}
					  	</if>
					  	<if test="stockQty != null and stockQty != ''">
							,#{stockQty}
					  	</if>
				 		,#{keyword}
				 		,#{prodDtl, jdbcType=CLOB}
				 		,#{prodDtl, jdbcType=CLOB}
				 		,#{dlvWayCd}
				 		,#{optProdYn}
				 		,SYSDATE
				 		,SYSDATE
				 		<if test="dlvCmpCd != null and dlvCmpCd != ''">
							,#{dlvCmpCd}
					  	</if>
						<if test="dlvPayGbCd != null and dlvPayGbCd != ''">
							,#{dlvPayGbCd}
					  	</if>
						<if test="dlvPrce != null and dlvPrce != ''">
							,#{dlvPrce}
					  	</if>
						<if test="bndlDlvYn != null and bndlDlvYn != ''">
							,#{bndlDlvYn}
					  	</if>
					  	<if test="tradLoc != null and tradLoc != ''">
							,#{tradLoc}
					  	</if>
					  	<if test="freeShareEndDt != null and freeShareEndDt != ''">
							,TO_DATE(#{freeShareEndDt}, 'YYYYMMDDHH24MISS')
					  	</if>
					  	<if test="TXN_ON_YN != null and TXN_ON_YN != ''">
							,#{TXN_ON_YN}
					  	</if>
					  	<if test="PROD_ITEM_CODE != null and PROD_ITEM_CODE != ''">
							,#{PROD_ITEM_CODE}
					  	</if>
					  	,'N'
					  	,'Y'
					  	,'N'
				 		)

	</insert>


	<!-- 상품 등록 간소화-->
	<insert id="insertProdSimple" parameterType="HashMap" useGeneratedKeys="true" keyProperty="PROD_CODE" keyColumn="PROD_CODE">
		INSERT INTO PROD(
						 PROD_CODE
						,SELLER_CD
						,MBER_SEQ
						,PROD_TYPE_CD
						,PROD_STAT_CD
						,CTRY_CD
						,BRAND_CD
						,PROD_NM
						,NPROD_GB_CD
						<if test="nrmPrce != null and nrmPrce != ''">
							,NRM_PRCE
					  	</if>
					  	<if test="sellPrce != null and sellPrce != ''">
							,SELL_PRCE
					  	</if>
					  	,STOCK_QTY
						,KEYWORD
						,PROD_MB_DTL
						,DLV_WAY_CD
						,OPT_PROD_YN
						,REGIST_DT
						,UPDT_DT
						<if test="dlvCmpCd != null and dlvCmpCd != ''">
							,DLV_CMP_CD
					  	</if>
						<if test="dlvPayGbCd != null and dlvPayGbCd != ''">
							,DLV_PAY_GB_CD
					  	</if>
						<if test="dlvPrce != null and dlvPrce != ''">
							,DLV_PRCE
					  	</if>
						,BNDL_DLV_YN
						<if test="tradLoc != null and tradLoc != ''">
							,TRAD_LOC
					  	</if>
					  	<if test="freeShareEndDt != null and freeShareEndDt != ''">
							,FREESHARE_END_DT
					  	</if>
						,TXN_ON_YN
					  	<if test="PROD_ITEM_CODE != null and PROD_ITEM_CODE != ''">
							,PROD_ITEM_CODE
					  	</if>
					  	,MB_DTL_HTML_YN	/* N */
					  	,MB_DTL_USE_YN	/* Y */
					  	,PC_DTL_USE_YN	/* N */
						)
				 VALUES (
				 		 TO_CHAR(SYSDATE,'YYYYMMDD')||TRIM(TO_CHAR(SEQ_PROD_CODE.NEXTVAL,'000000'))
				 		,#{sellerCd}
				 		,#{mberSeq}
				 		,#{prodTypeCd}
				 		,#{prodStatCd}
				 		,(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'SITE_DEFAULT' AND COM_CD = 'CTRY_TEMP')
				 		,#{brandCd, jdbcType=VARCHAR}
				 		,#{prodNm}
						,#{nProdGbCd}
					  	<if test="nrmPrce != null and nrmPrce != ''">
							,#{nrmPrce}
					  	</if>
					  	<if test="sellPrce != null and sellPrce != ''">
							,#{sellPrce}
					  	</if>
					  	,1
				 		,#{keyword}
				 		,#{prodDtl, jdbcType=CLOB}
				 		,#{dlvWayCd}
				 		,#{optProdYn}
				 		,SYSDATE
				 		,SYSDATE
				 		<if test="dlvCmpCd != null and dlvCmpCd != ''">
							,#{dlvCmpCd}
					  	</if>
						<if test="dlvPayGbCd != null and dlvPayGbCd != ''">
							,#{dlvPayGbCd}
					  	</if>
						<if test="dlvPrce != null and dlvPrce != ''">
							,#{dlvPrce}
					  	</if>
						,#{bndlDlvYn}
					  	<if test="tradLoc != null and tradLoc != ''">
							,#{tradLoc}
					  	</if>
					  	<if test="freeShareEndDt != null and freeShareEndDt != ''">
							,TO_DATE(#{freeShareEndDt}, 'YYYYMMDDHH24MISS')
					  	</if>
						,'Y'
					  	<if test="PROD_ITEM_CODE != null and PROD_ITEM_CODE != ''">
							,#{PROD_ITEM_CODE}
					  	</if>
					  	,'N'
					  	,'Y'
					  	,'N'
				 		)
	</insert>

	<!-- 셰어링상품 정보 insert -->
	<insert id="insertProdShare" parameterType="hashmap">

		INSERT INTO PROD_SHARING(
							PROD_CODE,
							SHARING_PRICE,
							SHARING_MAX_TERM,
							DEPOSIT,
							SH_STAT_CD
							)
					VALUES (
							#{prodCode},
							#{sharingPrice},
							#{sharingMaxTerm},
							#{deposit},
							#{shStatCd}
							)

	</insert>

	<!-- 상품 이미지 정보 insert -->
	<insert id="insertProdImg" parameterType="hashmap">

		INSERT INTO PROD_IMG(
							PROD_CODE,
							FILE_SEQ,
							PROD_IMG_URL,
							PROD_IMG_GB_CD,
							PROD_IMG_TYPE_CD,
							REGIST_DT,
							UPDT_DT
							)
					VALUES (
							#{prodCode},
							#{fileSeq},
							(SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = #{fileSeq}),
							#{prodImgGbCd},
							#{prodImgTypeCd},
							SYSDATE,
							SYSDATE
							)

	</insert>

	<!-- 브랜드 신청 -->
	<insert id="insertBrandReq" parameterType="hashmap">

		INSERT INTO BRAND_REQ (
								REQ_SEQ,
								CTRY_CD,
								MBER_SEQ,
								BRAND_NM,
								APPLY_YN,
								REGIST_DT
								)
						VALUES (
								TO_CHAR(SYSDATE,'YYYYMMDD')||TRIM(TO_CHAR(SEQ_BRAND_REQ.NEXTVAL,'000000')),
								#{ctryCd},
								#{mberSeq},
								#{reqBrandNm},
								#{applyYn},
								SYSDATE
								)

	</insert>

	<!-- 기타산간 추가 배송비 -->
	<insert id="insertExtLandDlvPrice" parameterType="hashmap">

		INSERT INTO EXT_LAND_DLV_PRICE (
								PROD_CODE,
								EXT_LAND_CD,
								ADD_DLV_PRICE
								)
						VALUES (
								#{prodCode},
								#{extLandCd},
								#{addDlvPrice}
								)

	</insert>

	<!-- 출하지 조회 -->
	<select id="selectGrpProdInfo" parameterType="hashmap" resultType="String">
	/* 유저의 출하지 조회 */
		SELECT GRP_PROD_SEQ
		  FROM GRP_PROD_INFO
		 WHERE MBER_SEQ = #{mberSeq}
		   AND BASE_YN = #{baseYn}

	</select>

	<!-- 출하지 map 등록 -->
	<update id="insertGrpProdMap" parameterType="hashmap">
		/* 출하지 매핑 */
		INSERT INTO GRP_PROD_MAP (GRP_PROD_SEQ, PROD_CODE, MBER_SEQ, REGIST_DT, UPDT_DT)
		                  VALUES (#{grpProdSeq}, #{prodCode}, #{mberSeq}, SYSDATE, SYSDATE)

	</update>


	<!-- 출하지 map 등록 -->
	<insert id="updateGrpProdMap" parameterType="hashmap">
		/* 출하지 매핑 수정 */
		  UPDATE GRP_PROD_MAP
		  	 SET GRP_PROD_SEQ = #{grpProdSeq},
		         REGIST_DT = SYSDATE,
		         UPDT_DT = SYSDATE
		   WHERE PROD_CODE = #{prodCode}
		     AND MBER_SEQ = #{mberSeq}

	</insert>

	<!-- 상품목록 조회 -->
	<select id="selectListProd" parameterType="hashmap" resultType="hashmap">

		SELECT INFO.PROD_CODE
		      ,INFO.PROD_NM
		      ,INFO.PROD_TYPE_CD
		      ,INFO.PROD_STAT_CD
		      ,INFO.NRM_PRCE
		      ,INFO.SELL_PRCE
		      ,INFO.ADM_MEMO
              ,INFO.PROD_STOP_REASON_CD
              ,( SELECT MAX(COM_CD_NM) FROM CODE T WHERE T.GRP_CD = 'PROD_STOP_REASON_CD' AND T.COM_CD = INFO.PROD_STOP_REASON_CD ) AS PROD_STOP_REASON_NM
              ,REPLACE(INFO.PROD_STOP_REASON, CHR(13), <![CDATA[ '<br>' ]]> ) AS PROD_STOP_REASON

		      <if test='prodTypeCd == "1"'>
		      ,TRUNC(100 - ((INFO.SELL_PRCE/INFO.NRM_PRCE)*100)) AS SELLL_PER
		      </if>
		      ,TO_CHAR(INFO.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS REGIST_DT
		      ,IMG.FILE_SEQ
		      ,FL.FILE_TITLE
		      ,FL.FILE_NM
		      ,FL.FILE_PATH
		      ,FL.FILE_URL
		      ,(SELECT COUNT(1) FROM BOARD_INFO BI WHERE BI.BOARD_TYPE_CD = '72' AND BI.PROD_CODE = INFO.PROD_CODE) AS BOARD_CNT
		  FROM PROD INFO, PROD_IMG IMG, FILE_INFO FL
		 WHERE INFO.PROD_CODE = IMG.PROD_CODE
		   AND IMG.FILE_SEQ = FL.FILE_SEQ
		   AND INFO.MBER_SEQ = #{mberSeq}
		   AND INFO.PROD_TYPE_CD = #{prodTypeCd}
		   AND IMG.PROD_IMG_GB_CD = '12'
		<if test="prodStatCd != null and prodStatCd != ''">
		   AND INFO.PROD_STAT_CD = #{prodStatCd}
		</if>
		<if test='orderCd == "0"'>
		   ORDER BY INFO.REGIST_DT DESC
		</if>
		<if test='orderCd == "1"'>
		   ORDER BY INFO.SELL_PRCE ASC
		</if>
		<if test='orderCd == "2"'>
		   ORDER BY INFO.SELL_PRCE DESC
		</if>
		<if test='orderCd == "3"'>
		   ORDER BY INFO.SELL_CNT DESC
		</if>

	</select>

	<!-- 셰어링상품목록 조회 -->
	<select id="selectListShareProd" parameterType="hashmap" resultType="hashmap">

		SELECT INFO.PROD_CODE
		      ,INFO.PROD_NM
		      ,INFO.PROD_TYPE_CD
		      ,INFO.PROD_STAT_CD
		      ,INFO.ADM_MEMO
              ,INFO.PROD_STOP_REASON_CD
              ,( SELECT MAX(COM_CD_NM) FROM CODE T WHERE T.GRP_CD = 'PROD_STOP_REASON_CD' AND T.COM_CD = INFO.PROD_STOP_REASON_CD ) AS PROD_STOP_REASON_NM
              ,REPLACE(INFO.PROD_STOP_REASON, CHR(13), <![CDATA[ '<br>' ]]> ) AS PROD_STOP_REASON
		      ,SHR.DEPOSIT
		      ,SHR.SHARING_PRICE
		      ,SHR.SHARING_MAX_TERM
		      ,TO_CHAR(INFO.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS REGIST_DT
		      ,IMG.FILE_SEQ
		      ,FL.FILE_TITLE
		      ,FL.FILE_NM
		      ,FL.FILE_PATH
		      ,FL.FILE_URL
		      ,(SELECT COUNT(1) FROM BOARD_INFO BI WHERE BI.BOARD_TYPE_CD = '72' AND BI.PROD_CODE = INFO.PROD_CODE) AS BOARD_CNT
		  FROM PROD INFO, PROD_IMG IMG, FILE_INFO FL, PROD_SHARING SHR
		 WHERE INFO.PROD_CODE = IMG.PROD_CODE
		   AND INFO.PROD_CODE = SHR.PROD_CODE
		   AND IMG.FILE_SEQ = FL.FILE_SEQ
		   AND INFO.MBER_SEQ = #{mberSeq}
		   AND INFO.PROD_TYPE_CD = #{prodTypeCd}
		   AND IMG.PROD_IMG_GB_CD = '12'
		<if test="prodStatCd != null and prodStatCd != ''">
			<choose>
				<when test='prodStatCd == "0" or prodStatCd == "1" or prodStatCd == "2"'>
					AND INFO.PROD_STAT_CD = #{prodStatCd}
				</when>
				<otherwise>
					AND SHR.SH_STAT_CD = #{prodStatCd}
				</otherwise>
			</choose>
		</if>
		<if test='orderCd == "0"'>
		   ORDER BY INFO.REGIST_DT DESC
		</if>
		<if test='orderCd == "1"'>
		   ORDER BY INFO.SELL_PRCE ASC
		</if>
		<if test='orderCd == "2"'>
		   ORDER BY INFO.SELL_PRCE DESC
		</if>
		<if test='orderCd == "3"'>
		   ORDER BY INFO.SELL_CNT DESC
		</if>

	</select>

	<!-- 상품 상세 조회 -->
	<select id="selectProdDtl" parameterType="hashmap" resultType="hashmap">

		SELECT INFO.PROD_CODE
			  ,INFO.MBER_SEQ
			  ,INFO.CTRY_CD
			  ,INFO.PROD_TYPE_CD
			  ,(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROD_TYPE_CD' AND COM_CD = INFO.PROD_TYPE_CD ) AS PROD_TYPE_CD_NM
			  ,INFO.PROD_NM
			  ,INFO.KEYWORD
			  ,INFO.PROD_PC_DTL
			  ,INFO.PROD_MB_DTL
			  ,INFO.NRM_PRCE
			  ,INFO.SELL_PRCE
			  ,CASE WHEN INFO.SELL_PRCE = 0 AND INFO.NRM_PRCE = 0 THEN 0 ELSE TRUNC(100 - ((INFO.SELL_PRCE/INFO.NRM_PRCE)*100)) END AS SELLL_PER
			  ,INFO.STOCK_QTY
			  ,INFO.DLV_WAY_CD
			  ,INFO.DLV_CMP_CD
			  ,INFO.DLV_PRCE
			  ,INFO.BNDL_DLV_YN
			  ,INFO.DLV_PAY_GB_CD
			  ,INFO.BRAND_CD
			  ,INFO.PROD_STAT_CD
			  ,INFO.TRAD_LOC
			  ,INFO.NPROD_GB_CD
			  ,TO_CHAR(INFO.FREESHARE_END_DT, 'YYYYMMDD') AS FREESHARE_END_DT
			  ,INFO.REGIST_DT
			  ,INFO.UPDT_DT
		  FROM PROD INFO
		 WHERE INFO.PROD_CODE = #{prodCode}

	</select>


	<!-- 상품 상세 조회 -->
	<select id="selectProdDtlV2" parameterType="hashmap" resultType="hashmap">
		/* 상품 상세 조회 V2 */
		SELECT INFO.PROD_CODE
			  ,INFO.MBER_SEQ
			  ,INFO.PROD_TYPE_CD
			  ,INFO.PROD_NM
			  ,INFO.SELL_PRCE
			  ,INFO.DLV_WAY_CD
			  ,INFO.DLV_CMP_CD
			  ,INFO.DLV_PRCE
			  ,INFO.DLV_PAY_GB_CD
			  ,INFO.TRAD_LOC
			  ,INFO.NPROD_GB_CD
			  ,TO_CHAR(INFO.FREESHARE_END_DT, 'YYYYMMDD') AS FREESHARE_END_DT
			  ,INFO.NPROD_GB_CD
			  ,INFO.DLV_PAY_GB_CD
			  ,INFO.DLV_PRCE
			  ,G.GRP_PROD_SEQ
			    ,CASE 
		        WHEN INFO.PC_DTL_USE_YN='Y' AND INFO.MB_DTL_USE_YN='N' THEN INFO.PROD_PC_DTL
		        WHEN INFO.PC_DTL_USE_YN='Y' AND INFO.MB_DTL_USE_YN='Y' THEN INFO.PROD_MB_DTL
		        WHEN INFO.PC_DTL_USE_YN='N' AND INFO.MB_DTL_USE_YN='Y' THEN INFO.PROD_MB_DTL
		        END AS PROD_MB_DTL
		  FROM PROD INFO, grp_prod_map G
		 WHERE INFO.PROD_CODE = #{prodCode}
		    AND INFO.MBER_SEQ = G.MBER_SEQ (+)
     		AND INFO.PROD_CODE = G.PROD_CODE (+)

	</select>



	<!-- 상품 이미지 조회 -->
	<select id="selectProdImg" parameterType="String" resultMap="prodImageMap">

		SELECT MAIN.FILE_SEQ AS MAIN_FILE_SEQ
			  ,MAIN.PROD_IMG_GB_CD AS MAIN_FILE_GB_CD
			  ,MAIN.FILE_URL AS MAIN_FILE_URL
			  ,SUB.FILE_SEQ AS SUB_FILE_SEQ
			  ,SUB.PROD_IMG_GB_CD AS SUB_FILE_GB_CD
			  ,SUB.FILE_URL AS SUB_FILE_URL
		  FROM (
				SELECT IMG.FILE_SEQ
					  ,IMG.PROD_IMG_GB_CD
					  ,FL.FILE_URL
				  FROM PROD_IMG IMG, FILE_INFO FL
				 WHERE IMG.FILE_SEQ = FL.FILE_SEQ
				   AND IMG.PROD_CODE = #{prodCode}
				   AND IMG.PROD_IMG_GB_CD = '11'
				) MAIN,
				(
				SELECT IMG.FILE_SEQ
					  ,IMG.PROD_IMG_GB_CD
					  ,FL.FILE_URL
				  FROM PROD_IMG IMG, FILE_INFO FL
				 WHERE IMG.FILE_SEQ = FL.FILE_SEQ
				   AND IMG.PROD_CODE = #{prodCode}
				   AND IMG.PROD_IMG_GB_CD NOT IN ('11')
				   AND IMG.PROD_IMG_GB_CD IN ('12','13','14','15','16')
				ORDER BY IMG.PROD_IMG_GB_CD ASC
				) SUB

	</select>

	<!-- 셰어링 정보 조회 -->
	<select id="selectProdShareInfo" parameterType="String" resultType="hashmap">

		SELECT PROD_CODE
			  ,SHARING_PRICE
			  ,DEPOSIT
			  ,SHARING_MAX_TERM
		  FROM PROD_SHARING
		 WHERE PROD_CODE = #{prodeCode}

	</select>

	<!-- 추가배송비 조회 -->
	<select id="selectExtLandDlvPrice" parameterType="String" resultType="hashmap">

		SELECT PROD_CODE
			  ,EXT_LAND_CD
			  ,ADD_DLV_PRICE
		  FROM EXT_LAND_DLV_PRICE
		 WHERE PROD_CODE = #{prodCode}

	</select>

	<!-- 상품 삭제 : PROD_STAT_CD = '3' -->
	<update id="deleteProdInfo" parameterType="hashmap">

		UPDATE PROD
		   SET PROD_STAT_CD = #{prodStatCd}
		      ,UPDT_DT = SYSDATE
		 WHERE PROD_CODE = #{prodCode}

	</update>

	<!-- 상품 정보 수정 -->
	<update id="updateProdInfo" parameterType="hashmap">

		UPDATE PROD
		   SET CTRY_CD = #{ctryCd}
		      ,BRAND_CD = #{brandCd}
		      ,PROD_NM = #{prodNm}
		      ,PROD_PC_DTL = #{prodDtl}
		      ,PROD_MB_DTL = #{prodDtl}
		      ,KEYWORD = #{keyword}
		      ,DLV_WAY_CD = #{dlvWayCd}
			  ,UPDT_DT = SYSDATE
		<if test="nProdGbCd != null and nProdGbCd != ''">
			  ,NPROD_GB_CD = #{nProdGbCd}
		</if>
		<if test="nrmPrce != null and nrmPrce != ''">
			  ,NRM_PRCE = #{nrmPrce}
		</if>
		<if test="sellPrce != null and sellPrce != ''">
			  ,SELL_PRCE = #{sellPrce}
		</if>
		<if test="stockQty != null and stockQty != ''">
			  ,STOCK_QTY = #{stockQty}
		</if>
		<if test="dlvCmpCd != null and dlvCmpCd != ''">
			  ,DLV_CMP_CD = #{dlvCmpCd}
	  	</if>
		<if test="dlvPayGbCd != null and dlvPayGbCd != ''">
			  ,DLV_PAY_GB_CD = #{dlvPayGbCd}
	  	</if>
		<if test="dlvPrce != null and dlvPrce != ''">
			  ,DLV_PRCE = #{dlvPrce}
	  	</if>
		<if test="bndlDlvYn != null and bndlDlvYn != ''">
			  ,BNDL_DLV_YN = #{bndlDlvYn}
	  	</if>
		<if test="tradLoc != null and tradLoc != ''">
			  ,TRAD_LOC = #{tradLoc}
	  	</if>
	  	<if test="freeShareEndDt != null and freeShareEndDt != ''">
			,FREESHARE_END_DT = TO_DATE(#{freeShareEndDt}, 'YYYYMMDDHH24MISS')
	  	</if>
	  	 WHERE PROD_CODE = #{prodCode}

	</update>

	<!-- 상품 정보 수정 -->
	<update id="updateProdInfoV2" parameterType="hashmap">
		/* 상품정보 수정 V2 */
		UPDATE PROD
		   SET
		      PROD_NM = #{prodNm}
		      ,PROD_MB_DTL = #{prodDtl}
		      ,DLV_WAY_CD = #{dlvWayCd}
			  ,UPDT_DT = SYSDATE
			  ,MB_DTL_USE_YN = 'Y'
		<if test="nProdGbCd != null and nProdGbCd != ''">
			  ,NPROD_GB_CD = #{nProdGbCd}
		</if>
		<if test="nrmPrce != null and nrmPrce != ''">
			  ,NRM_PRCE = #{nrmPrce}
		</if>
		<if test="sellPrce != null and sellPrce != ''">
			  ,SELL_PRCE = #{sellPrce}
		</if>
		<if test="dlvCmpCd != null and dlvCmpCd != ''">
			  ,DLV_CMP_CD = #{dlvCmpCd}
	  	</if>
		<if test="dlvPayGbCd != null and dlvPayGbCd != ''">
			  ,DLV_PAY_GB_CD = #{dlvPayGbCd} /*----*/
	  	</if>
			<if test="dlvPayGbCd == 1 ">
			  ,DLV_PRCE = 0
		  	</if>
			<if test="dlvPayGbCd == 2 ">
				<if test="dlvPrce != null and dlvPrce != ''">
			  		,DLV_PRCE = #{dlvPrce}
			  	</if>
		  	</if>

		<if test="tradLoc != null and tradLoc != ''">
			  ,TRAD_LOC = #{tradLoc}
	  	</if>
	  	<if test="freeShareEndDt != null and freeShareEndDt != ''">
			,FREESHARE_END_DT = TO_DATE(#{freeShareEndDt}, 'YYYYMMDDHH24MISS')
	  	</if>
	  	 WHERE PROD_CODE = #{prodCode}

	</update>


	<!-- 셰어링 정보 수정 -->
	<update id="updateProdShare" parameterType="hashmap">

		UPDATE PROD_SHARING
		   SET SHARING_PRICE = #{sharingPrice}
		      ,SHARING_MAX_TERM = #{sharingMaxTerm}
		      ,DEPOSIT = #{deposit}
		 WHERE PROD_CODE = #{prodCode}

	</update>

	<!-- 추가배송비 count -->
	<select id="selectExtLandDlvPriceCnt" parameterType="hashmap" resultType="int">

		SELECT COUNT(1)
		  FROM EXT_LAND_DLV_PRICE
		 WHERE PROD_CODE = #{prodCode}
		   AND EXT_LAND_CD = #{extLandCd}

	</select>

	<!-- 추가배송비 수정 -->
	<update id="updateExtLandDlvPrice" parameterType="hashmap">

		UPDATE EXT_LAND_DLV_PRICE
		   SET ADD_DLV_PRICE = #{addDlvPrice}
		 WHERE PROD_CODE = #{prodCode}
		   AND EXT_LAND_CD = #{extLandCd}

	</update>

	<!-- 상품 이미지 정보 update -->
	<update id="updateProdImg" parameterType="hashmap">

		UPDATE PROD_IMG
		   SET FILE_SEQ = #{fileSeq}
		      ,PROD_IMG_URL = (SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = #{fileSeq})
		      ,UPDT_DT = SYSDATE
		      ,PROD_IMG_TYPE_CD = '1'
		 WHERE PROD_CODE = #{prodCode}
		   AND PROD_IMG_GB_CD = #{prodImgGbCd}
<!-- 		   AND PROD_IMG_TYPE_CD = '1'	모바일 건만 변경되도록 -->

	</update>

	<!-- 상품 이미지 정보 delete -->
	<delete id="deleteProdImg" parameterType="hashmap">

		DELETE FROM PROD_IMG
		 WHERE PROD_CODE = #{prodCode}
		   AND PROD_IMG_GB_CD = #{prodImgGbCd}

	</delete>

	<!-- 상품문의 count -->
	<select id="selectListProdQnaCnt" parameterType="hashmap" resultMap="prodQnaCnt">

		SELECT COUNT(1) AS TOT_CNT
		      ,SUM(CASE WHEN ANS_GB_CD = '10' OR ANS_GB_CD = '20' THEN 1 ELSE 0 END) AS NO_ANS_CNT
		      ,SUM(CASE WHEN ANS_GB_CD = '30' THEN 1 ELSE 0 END) AS ANS_CNT
		  FROM PROD INFO, PROD_IMG IMG, FILE_INFO FL, BOARD_INFO BOARD
		 WHERE INFO.PROD_CODE = IMG.PROD_CODE
		   AND INFO.PROD_CODE = BOARD.PROD_CODE
		   AND IMG.FILE_SEQ = FL.FILE_SEQ
		   AND BOARD.BOARD_TYPE_CD = '72'
		   AND IMG.PROD_IMG_GB_CD = '12'
		<if test="mberSeq != null and mberSeq != ''">
		  AND INFO.MBER_SEQ = #{mberSeq}
	  	</if>
		<if test="prodCode != null and prodCode != ''">
		  AND INFO.PROD_CODE = #{prodCode}
	  	</if>
		<if test="ansGbCd != null and ansGbCd != ''">
		  AND BOARD.ANS_GB_CD = #{ansGbCd}
	  	</if>

	</select>

	<!-- 상품문의 목록 조회 -->
	<select id="selectListProdQna" parameterType="hashmap" resultType="hashmap">

		SELECT QNA.RNUM
			  ,QNA.PROD_CODE
			  ,QNA.MBER_SEQ
			  ,QNA.PROD_NM
			  ,QNA.FILE_SEQ
			  ,QNA.PROD_IMG_GB_CD
			  ,QNA.FILE_URL
			  ,QNA.BOARD_SEQ
			  ,QNA.BOARD_TYPE_CD
			  ,QNA.TITLE
			  ,QNA.ANS_GB_CD
			  ,QNA.ANS_GB_CD_NM
			  ,QNA.REGIST_DT
			  ,TO_CHAR(QNA.REGIST_DT, 'YYYY-MM-DD HH24:MI:SS') AS TIME_GAP
		  FROM (
		  		SELECT ROWNUM AS RNUM
					  ,INFO.PROD_CODE
				      ,INFO.MBER_SEQ
				      ,INFO.PROD_NM
				      ,IMG.FILE_SEQ
				      ,IMG.PROD_IMG_GB_CD
				      ,FL.FILE_URL
				      ,BOARD.BOARD_SEQ
				      ,BOARD.BOARD_TYPE_CD
				      ,BOARD.TITLE
				      ,BOARD.ANS_GB_CD
				      ,(CASE WHEN BOARD.ANS_GB_CD = '10' OR BOARD.ANS_GB_CD = '20' THEN '미답변' WHEN BOARD.ANS_GB_CD = '30' THEN '답변완료' ELSE '미답변' END) AS ANS_GB_CD_NM
				      ,BOARD.REGIST_DT
				  FROM PROD INFO, PROD_IMG IMG, FILE_INFO FL, BOARD_INFO BOARD
				 WHERE INFO.PROD_CODE = IMG.PROD_CODE
				   AND INFO.PROD_CODE = BOARD.PROD_CODE
				   AND IMG.FILE_SEQ = FL.FILE_SEQ
				   AND BOARD.BOARD_TYPE_CD = '72'
				   AND IMG.PROD_IMG_GB_CD = '12'
				<if test="mberSeq != null and mberSeq != ''">
				  AND INFO.MBER_SEQ = #{mberSeq}
			  	</if>
				<if test="prodCode != null and prodCode != ''">
				  AND INFO.PROD_CODE = #{prodCode}
			  	</if>
			  	<if test="ansGbCd != null and ansGbCd != ''">
				  AND BOARD.ANS_GB_CD = #{ansGbCd}
			  	</if>
			  	ORDER BY BOARD.REGIST_DT
		  		) QNA
		 WHERE QNA.RNUM <![CDATA[>=]]> #{S_NUM}
		   AND QNA.RNUM <![CDATA[<=]]> #{E_NUM}

	</select>

	<!-- 상품문의 상세조회 -->
	<select id="selectProdQnaDtl" parameterType="hashmap" resultType="hashmap">

		SELECT INFO.PROD_CODE
		      ,INFO.PROD_NM
		      ,MBER.MBER_EMAIL
		      ,BOARD.BOARD_SEQ
		      ,BOARD.BOARD_TYPE_CD
		      ,BOARD.TITLE
		      ,BOARD.CONTENTS
		      ,BOARD.QNA_TYPE_CD
		      ,CD.COM_CD_NM
		      ,BOARD.ANS_GB_CD
		      ,BOARD.REGIST_DT
		      ,BOARD.ANS_CONTENTS
		  FROM PROD INFO, BOARD_INFO BOARD, CODE CD, MBER_INFO MBER
		 WHERE INFO.PROD_CODE = BOARD.PROD_CODE
		   AND BOARD.QNA_TYPE_CD = CD.COM_CD
		   AND BOARD.MBER_SEQ = MBER.MBER_SEQ
		   AND CD.GRP_CD = #{grpCd}
		   AND BOARD.BOARD_SEQ = #{boardSeq}

	</select>

	<!-- 상품문의 답변 등록 -->
	<update id="updateProdQna" parameterType="hashmap">

		UPDATE BOARD_INFO
		   SET ANS_GB_CD = #{ansGbCd}
		      ,ANS_CONTENTS = #{ansContents}
		      ,FWRITER_ID = #{mberSeq}
		      ,UPDT_DT = SYSDATE
		 WHERE BOARD_SEQ = #{boardSeq}

	</update>

	<!-- 셰어링 상품 반품내역 총건수 -->
	<select id="selectOrderShareReturnCnt" parameterType="hashmap" resultType="int">

		SELECT COUNT(1)
		  FROM ORD_INFO OI ,ORD_PROD_INFO OPI ,PROD PI ,PROD_SHARING PS ,CODE CD ,PROD_IMG IMG
		 WHERE OI.ORD_CD = OPI.ORD_CD
		   AND OPI.PROD_CODE = PI.PROD_CODE
		   AND PI.PROD_CODE = PS.PROD_CODE
		   AND PI.PROD_CODE = IMG.PROD_CODE
		   AND OPI.PROC_STAT_CD = CD.COM_CD
		   AND PI.PROD_TYPE_CD = #{prodTypeCd}
		   AND PI.MBER_SEQ = #{mberSeq}
		   AND CD.GRP_CD = #{grpCd}
		   AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
		   AND TO_CHAR(OI.REGIST_DT , 'YYYYMMDD') BETWEEN #{startDate} AND #{endDate}
		<if test="procStatCdArr != null and procStatCdArr != ''">
		   AND OPI.PROC_STAT_CD IN
			<foreach collection="procStatCdArr" item="cd" open="(" close=")" separator=",">
	  			#{cd}
			</foreach>
		</if>
		<if test="procStatCd != null and procStatCd != ''">
		   AND OPI.PROD_STAT_CD = #{procStatCd}
	  	</if>
		<if test="prodNm != null and prodNm != ''">
		   AND PI.PROD_NM LIKE '%'||#{prodNm}||'%'
	  	</if>

	</select>

	<!-- 셰어링 상품 주문내역 조회 카운트 -->
	<select id="selectListOrderShareCount" parameterType="hashmap" resultType="int">
		SELECT
			COUNT(1) AS CNT
		FROM
			ORD_INFO OI ,ORD_PROD_INFO OPI ,PROD PI ,PROD_SHARING PS ,CODE CD ,PROD_IMG IMG, CHG_PROD_INFO CPI
		WHERE
			    OI.ORD_CD = OPI.ORD_CD
			AND OPI.PROD_CODE = PI.PROD_CODE
			AND PI.PROD_CODE = PS.PROD_CODE
			AND PI.PROD_CODE = IMG.PROD_CODE
			AND OPI.PROC_STAT_CD = CD.COM_CD
			AND OPI.ORD_CD = CPI.ORD_CD(+)
			AND OPI.PROD_CODE = CPI.PROD_CODE(+)
			AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
			AND PI.PROD_TYPE_CD = #{prodTypeCd}
			AND PI.MBER_SEQ = #{mberSeq}
			AND CD.GRP_CD = #{grpCd}
			AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
			<if test="startDate != null and startDate != ''">
			AND TO_CHAR(OI.REGIST_DT , 'YYYYMMDD') BETWEEN #{startDate} AND #{endDate}
			</if>

			<if test="procStatCdArr != null and procStatCdArr != ''">
				AND OPI.PROC_STAT_CD IN
				<foreach collection="procStatCdArr" item="cd" open="(" close=")" separator=",">
		  			#{cd}
				</foreach>
			</if>
			<if test="procStatCd != null and procStatCd != ''">
				AND OPI.PROC_STAT_CD = #{procStatCd}
		  	</if>
			<if test="prodNm != null and prodNm != ''">
				AND UPPER(PI.PROD_NM) LIKE UPPER('%'||#{prodNm}||'%')
		  	</if>
	</select>

	<!-- 셰어링 상품 주문내역 조회 -->
	<select id="selectListOrderShare" parameterType="hashmap" resultMap="listOrderMap">

		SELECT ORD.CNT
			  ,ORD.RNUM
			  ,ORD.ORD_CD
			  ,ORD.REGIST_DT
			  ,ORD.PROD_CODE
			  ,ORD.PROD_SEQ
			  ,ORD.PROC_STAT_CD
			  ,ORD.PROC_STAT_CD_NM
			  ,ORD.PROD_ORD_AMT
			  ,ORD.DLV_PRCE
			  ,ORD.ORD_QTY
			  ,ORD.OPI_REGIST_DT
			  ,ORD.PROD_NM
			  ,ORD.DLV_PAY_GB_CD
			  ,ORD.DLV_PAY_F_CD
			  ,ORD.SHARING_PRICE
			  ,ORD.DEPOSIT
			  ,ORD.FILE_SEQ
			  ,ORD.PROD_IMG_URL
			  ,ORD.CHG_CD
			  ,ORD.ADJ_COMP_YN
			  ,ORD.SHAREING_AMT
			  ,ORD.SHARE_TERM
			  ,ORD.SELLER_MBER_GB_CD
			  ,ORD.DLV_WAY_CD
			  ,ORD.DLV_GROUP_YN
			  ,ORD.DLV_STAND_AMT
			  ,ORD.SHARE_USING_DAY
			  ,ORD.PROC_STAT_NM
			  ,ORD.SHAR_DAY
		  FROM (
				SELECT CNT.CNT
					  ,ROWNUM AS RNUM
					  ,MAIN.ORD_CD
					  ,MAIN.REGIST_DT
					  ,MAIN.PROD_CODE
					  ,MAIN.PROD_SEQ
					  ,MAIN.PROC_STAT_CD
					  ,MAIN.PROC_STAT_CD_NM
					  ,MAIN.PROD_ORD_AMT
					  ,MAIN.DLV_PRCE
					  ,MAIN.ORD_QTY
					  ,MAIN.OPI_REGIST_DT
					  ,MAIN.PROD_NM
					  ,MAIN.DLV_PAY_GB_CD
					  ,MAIN.DLV_PAY_F_CD
					  ,MAIN.SHARING_PRICE
					  ,MAIN.DEPOSIT
					  ,MAIN.FILE_SEQ
					  ,MAIN.PROD_IMG_URL
					  ,MAIN.CHG_CD
					  ,MAIN.ADJ_COMP_YN
					  ,MAIN.SHAREING_AMT
					  ,MAIN.SHARE_TERM
					  ,MAIN.SELLER_MBER_GB_CD
					  ,MAIN.DLV_WAY_CD
					  ,MAIN.DLV_GROUP_YN
					  ,MAIN.DLV_STAND_AMT
					  ,MAIN.SHARE_USING_DAY
					  ,MAIN.PROC_STAT_NM
					  ,MAIN.SHAR_DAY
				  FROM (
				  		SELECT COUNT(1) AS CNT
				  		  FROM ORD_INFO OI ,ORD_PROD_INFO OPI ,PROD PI ,PROD_SHARING PS ,CODE CD ,PROD_IMG IMG, CHG_PROD_INFO CPI
				  		 WHERE OI.ORD_CD = OPI.ORD_CD
						   AND OPI.PROD_CODE = PI.PROD_CODE
						   AND PI.PROD_CODE = PS.PROD_CODE
						   AND PI.PROD_CODE = IMG.PROD_CODE
						   AND OPI.PROC_STAT_CD = CD.COM_CD
						   AND OPI.ORD_CD = CPI.ORD_CD(+)
						   AND OPI.PROD_CODE = CPI.PROD_CODE(+)
						   AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
						   AND PI.PROD_TYPE_CD = #{prodTypeCd}
						   AND PI.MBER_SEQ = #{mberSeq}
						   AND CD.GRP_CD = #{grpCd}
						   AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
						<if test="startDate != null and startDate != ''">
						AND TO_CHAR(OI.REGIST_DT , 'YYYYMMDD') BETWEEN #{startDate} AND #{endDate}
						</if>
						<if test="procStatCdArr != null and procStatCdArr != ''">
						   AND OPI.PROC_STAT_CD IN
							<foreach collection="procStatCdArr" item="cd" open="(" close=")" separator=",">
					  			#{cd}
							</foreach>
						</if>
						<if test="procStatCd != null and procStatCd != ''">
						   AND OPI.PROC_STAT_CD = #{procStatCd}
					  	</if>
						<if test="prodNm != null and prodNm != ''">
						   AND UPPER(PI.PROD_NM) LIKE UPPER('%'||#{prodNm}||'%')
					  	</if>
				  		) CNT,
				  	   (
				  		SELECT OI.ORD_CD
							  ,TO_CHAR(OI.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS REGIST_DT
							  ,OPI.PROD_CODE
							  ,OPI.PROD_SEQ
							  ,OPI.PROC_STAT_CD
							  ,CD.COM_CD_NM AS PROC_STAT_CD_NM
							  ,OPI.PROD_ORD_AMT
							  ,PI.DLV_PRCE
							  ,OPI.ORD_QTY
							  ,TO_CHAR(OPI.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS OPI_REGIST_DT
							  ,PI.PROD_NM
							  ,PI.DLV_PAY_GB_CD
							  ,OPI.DLV_PAY_F_CD
							  ,PS.SHARING_PRICE
							  <!--,(PS.DEPOSIT * OPI.ORD_QTY) AS DEPOSIT  -->
							  ,NVL(PS.DEPOSIT,0) AS DEPOSIT
							  ,IMG.FILE_SEQ
							  ,IMG.PROD_IMG_URL
							  ,CPI.CHG_CD
							  ,OPI.ADJ_COMP_YN
							  ,NVL((PS.SHARING_PRICE * OPI.SHARE_TERM), 0) AS SHAREING_AMT
							  ,OPI.SHARE_TERM
							  ,F.MBER_GB_CD AS SELLER_MBER_GB_CD
							  ,PI.DLV_WAY_CD
							  ,CASE WHEN (SELECT COUNT(*) FROM ORD_PROD_INFO WHERE ORD_CD = OI.ORD_CD AND DLV_GRP_CODE = OPI.DLV_GRP_CODE) = 1 THEN 'N' ELSE 'Y' END AS DLV_GROUP_YN
							  ,PI.DLV_STAND_AMT
							  ,(SELECT TRUNC(SYSDATE) - TRUNC(DLV_END_DT) +1 AS SHARE_USING_DAY FROM INVC_INFO WHERE ORD_CD = OI.ORD_CD AND PROD_CODE = OPI.PROD_CODE AND PROD_SEQ = OPI.PROD_SEQ) AS SHARE_USING_DAY
							  ,(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD' AND COM_CD = OPI.PROC_STAT_CD) AS PROC_STAT_NM
							  ,NVL(TO_DATE(TO_CHAR(INVC.DLV_END_DT + OPI.SHARE_TERM-1, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD'), 0) AS SHAR_DAY
				  		  FROM ORD_INFO OI ,ORD_PROD_INFO OPI ,PROD PI ,PROD_SHARING PS ,CODE CD ,PROD_IMG IMG, CHG_PROD_INFO CPI
				  		      , MBER_INFO F , INVC_INFO INVC
				  		 WHERE OI.ORD_CD = OPI.ORD_CD
						   AND OPI.PROD_CODE = PI.PROD_CODE
						   AND PI.PROD_CODE = PS.PROD_CODE
						   AND PI.PROD_CODE = IMG.PROD_CODE
						   AND OPI.PROC_STAT_CD = CD.COM_CD
						   AND PI.MBER_SEQ = F.MBER_SEQ
						   AND OPI.ORD_CD = CPI.ORD_CD(+)
						   AND OPI.PROD_CODE = CPI.PROD_CODE(+)
						   AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
				   		   AND OPI.ORD_CD = INVC.ORD_CD(+)
				   		   AND OPI.PROD_CODE = INVC.PROD_CODE(+)
				   		   AND OPI.PROD_SEQ = INVC.PROD_SEQ(+)
						   AND PI.PROD_TYPE_CD = #{prodTypeCd}
						   AND PI.MBER_SEQ = #{mberSeq}
						   AND CD.GRP_CD = #{grpCd}
						   AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
						<if test="startDate != null and startDate != ''">
						AND TO_CHAR(OI.REGIST_DT , 'YYYYMMDD') BETWEEN #{startDate} AND #{endDate}
						</if>
						<if test="procStatCdArr != null and procStatCdArr != ''">
						   AND OPI.PROC_STAT_CD IN
							<foreach collection="procStatCdArr" item="cd" open="(" close=")" separator=",">
					  			#{cd}
							</foreach>
						</if>
						<if test="procStatCd != null and procStatCd != ''">
						   AND OPI.PROC_STAT_CD = #{procStatCd}
					  	</if>
						<if test="prodNm != null and prodNm != ''">
						   AND UPPER(PI.PROD_NM) LIKE UPPER('%'||#{prodNm}||'%')
					  	</if>
					  	ORDER BY OI.ORD_CD DESC
				  	) MAIN
		       ) ORD
		 WHERE ORD.RNUM <![CDATA[>=]]> #{S_NUM}
		   AND ORD.RNUM <![CDATA[<=]]> #{E_NUM}
		ORDER BY ORD.ORD_CD DESC

	</select>

	<!-- 주문상태 변경 -->
	<update id="updateOrderProcStat" parameterType="hashmap">

		UPDATE ORD_PROD_INFO
		   SET PROC_STAT_CD = #{upProcStatCd}
		      ,UPDT_DT = SYSDATE
		 WHERE ORD_CD = #{ordCd}
		<if test="prodSeq != null and prodSeq != ''">
		   AND PROD_SEQ = #{prodSeq}
		</if>
		<if test="prodCodeArr != null and prodCodeArr != ''">
		   AND PROD_CODE IN
			<foreach collection="prodCodeArr" item="cd" open="(" close=")" separator=",">
				#{cd}
			</foreach>
		</if>
		<if test="prodCode != null and prodCode != '' ">
			AND PROD_CODE = #{prodCode}
		</if>

	</update>

	<!-- 주문 취소사유 등록 -->
	<insert id="insertOrdCancInfo" parameterType="hashmap" useGeneratedKeys="true" keyProperty="CANC_CD" keyColumn="CANC_CD">

		INSERT INTO ORD_CANC_INFO (
									CANC_CD
								   ,CANC_REASON_CD
								   ,CANC_REASON
								   ,CANC_DT
								   ,SELLER_CANC_YN
								  )
						   VALUES (
						   			TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI')||LPAD(SEQ_ORD_CANC_INFO.NEXTVAL,4,0)
						   		   ,#{cancReasonCd}
						   		   ,#{cancReason}
						   		   ,SYSDATE
						   		   ,'Y'
						   		  )

	</insert>

	<!-- 주문취소코드 등록 -->
	<update id="updateOrdProdInfoCanc" parameterType="hashmap">

		UPDATE ORD_PROD_INFO
		   SET CANC_CD = #{cancCd}
		      ,UPDT_DT = SYSDATE
		 WHERE ORD_CD = #{ordCd}
		<if test="prodSeq != null and prodSeq != ''">
		   AND PROD_SEQ = #{prodSeq}
		</if>
		<if test="prodCodeArr != null and prodCodeArr != ''">
		   AND PROD_CODE IN
			<foreach collection="prodCodeArr" item="cd" open="(" close=")" separator=",">
				#{cd}
			</foreach>
		</if>

	</update>

	<!-- 주문 반납완료 상품정보 -->
	<update id="updateOrderShareRtnProd" parameterType="hashmap">

		UPDATE CHG_PROD_INFO
		   SET PROC_STAT_CD = #{upProcStatCd}
		      ,UPDT_DT = SYSDATE
		      <if test="dlvWayCd != null and dlvWayCd != ''">
			   ,DLV_WAY_CD = #{dlvWayCd}
			  </if>
			  <if test="grpProdSeq != null and grpProdSeq != ''">
			   ,GRP_PROD_SEQ = #{grpProdSeq}
			  </if>
		 WHERE ORD_CD = #{ordCd}
		   AND PROD_CODE = #{prodCode}
		   AND PROD_SEQ = #{prodSeq}

	</update>

	<!-- 셰어링 주문 상세내역 -->
	<select id="selectOrderShareDtl" parameterType="hashmap" resultMap="listOrderMap">

		SELECT OI.ORD_CD
		       ,(CASE WHEN OPI.PROC_STAT_CD = '87' OR OPI.PROC_STAT_CD = '88' OR OPI.PROC_STAT_CD = '90' OR OPI.PROC_STAT_CD = '91'
		             THEN '환불대기중'
		             ELSE (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD' AND COM_CD = OPI.PROC_STAT_CD)
		        END) AS REFUND_STAT_NM
		      ,TO_CHAR(OI.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS REGIST_DT
		      ,(SELECT MBER_EMAIL FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ) AS ORD_EMAIL
		      ,(SELECT MBER_PHONE FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ) AS ORD_TEL
		      ,OI.ORD_HP
		      ,OI.REAL_SELT_AMT
		      ,OI.ORD_AMT
		      ,OI.DSCNT_AMT
		      ,(SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = (SELECT MBER_IMG FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ)) AS MBER_IMG_URL
		      ,OPI.PROD_CODE
		      ,OPI.PROD_SEQ
		      ,OPI.PROC_STAT_CD
		      ,OPI.DLV_PAY_F_CD
		      ,CD.COM_CD_NM AS PROC_STAT_CD_NM
		      ,OPI.PROD_ORD_AMT
		      ,OPI.ORD_QTY
		      ,OPI.SHARE_TERM
		      ,DECODE( TO_DATE(CRI.CHG_REG_DT) - TO_DATE(INVC.DLV_END_DT),'0',1,TO_DATE(CRI.CHG_REG_DT) - TO_DATE(INVC.DLV_END_DT))  AS CHG_TERM
		      ,CRI.RCV_NM
		      ,CRI.ZIP_CD AS ZIP_CODE
		      ,CRI.JUSO_JIBEN AS BAS_ADDR
		      ,CRI.JUSO_DTL AS DTL_ADDR
		      ,CRI.HP AS CONTACT
		      ,PI.PROD_NM
		      ,PI.DLV_PRCE
		      ,PI.DLV_PAY_GB_CD
		      ,PS.SHARING_PRICE
		      ,(PS.DEPOSIT * OPI.ORD_QTY) AS DEPOSIT
		      ,NVL(PS.DEPOSIT,0) AS DEPOSIT2
		      ,IMG.PROD_IMG_URL
		      ,DLV.RCV_NM AS DLV_RCV_NM
		      ,DLV.ZIP_CD AS DLV_ZIP_CD
		      ,DLV.JUSO_JIBEN
		      ,DLV.JUSO_DORO
		      ,DLV.JUSO_DTL
		      ,DLV.RCV_TEL
		      ,DLV.RCV_HP
		      ,DLV.DLV_MSG
		      ,DLV.SECU_NO_USE_YN
		      ,DLV.SECU_NO
      		  ,TO_CHAR(TO_DATE(CONF.CONF_DATE, 'YYYYMMDD'), 'YYYY-MM-DD') AS CONF_DATE
      		  /* ,TO_CHAR(INVC.DLV_END_DT, 'YYYY-MM-DD') AS SHARE_START_DT */
      		  ,TO_CHAR(INVC.DLV_END_DT, 'YYYYMMDD') AS SHAR_STA_DATE
      		  /* ,TO_CHAR((INVC.DLV_END_DT + OPI.SHARE_TERM), 'YYYY-MM-DD') AS SHARE_END_DT */
      		  ,TO_CHAR((INVC.DLV_END_DT + OPI.SHARE_TERM-1), 'YYYYMMDD') AS SHAR_END_DATE
      		  ,ROUND((SYSDATE - INVC.DLV_END_DT)) AS SHARE_USE_DT
      		  ,ROUND(((INVC.DLV_END_DT + OPI.SHARE_TERM) - SYSDATE)) AS SHARE_TRGT_DT
      		  /* ,TO_CHAR(SYSDATE, 'YYYY-MM-DD') AS TO_DAY */
      		  ,TO_CHAR(SYSDATE, 'YYYYMMDD') AS TO_DAY
              , (CASE WHEN DECODE(OPI.SHARE_TERM,1,100,ROUND((((SYSDATE - INVC.DLV_END_DT) / OPI.SHARE_TERM) * 100 )))  > 100
                     THEN 100
                     ELSE  DECODE(OPI.SHARE_TERM,1,100,ROUND((((SYSDATE - INVC.DLV_END_DT) / OPI.SHARE_TERM) * 100 )))
                 END) AS PROG_VAL
      		  ,TO_CHAR(CRI.CHG_REG_DT, 'YYYY-MM-DD HH24:MI') AS CHG_REG_DT
      		  ,TO_CHAR(CRI.CHG_REG_DT, 'YYYY-MM-DD') AS CHG_REG_DATE
		      ,CRI.CHG_REASON
		      ,CRI.CHG_REASON_CD
		      ,(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'CHG_REASON_CD' AND COM_CD = CRI.CHG_REASON_CD) AS CHG_REASON_CD_NM
		      ,CPI.CHG_CD
      		  ,TO_CHAR(CRI.CHG_REG_DT, 'YYYY-MM-DD HH24:MI') AS RTN_REG_DT
      		  /*,TO_CHAR((CRI.CHG_REG_DT+1), 'YYYY-MM-DD') AS RTN_EXP_DT*/
              ,TO_CHAR(SYSDATE + 1, 'YYYYMMDD') AS FOR_VISIT
		      ,ROUND((CRI.CHG_REG_DT - INVC.DLV_END_DT)) AS RTN_USE_DT
		      ,CRI.RCV_NM AS RTN_RCV_NM
		      ,CRI.TEL AS RTN_TEL
		      ,CRI.HP AS RTN_HP
		      ,CRI.ZIP_CD AS RTN_ZIP_CODE
		      ,CRI.JUSO_JIBEN AS RTN_JUSO_JIBEN
		      ,CRI.JUSO_DORO AS RTN_JUSO_DORO
		      ,CRI.JUSO_DTL AS RTN_JUSO_DTL
		      ,(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'DLV_CMP_CD' AND COM_CD = PI.DLV_CMP_CD) AS RTN_CMP
		      ,TO_CHAR(CINVC.DLV_END_DT, 'YYYY-MM-DD') AS CHG_DLV_END_DT
		      ,OPI.ADJ_COMP_YN
		      ,F.MBER_GB_CD AS SELLER_MBER_GB_CD
		      ,DECODE(F.MBER_GB_CD ,0, 0 ,  NVL((PS.SHARING_PRICE * OPI.SHARE_TERM), 0)) AS SHAREING_AMT
			  ,PI.DLV_WAY_CD
			  ,CASE WHEN (SELECT COUNT(*) FROM ORD_PROD_INFO WHERE ORD_CD = OI.ORD_CD AND DLV_GRP_CODE = OPI.DLV_GRP_CODE) = 1 THEN 'N' ELSE 'Y' END AS DLV_GROUP_YN
			  ,PI.DLV_STAND_AMT
			  ,(SELECT TRUNC(SYSDATE) - TRUNC(DLV_END_DT) +1 AS SHARE_USING_DAY FROM INVC_INFO WHERE ORD_CD = OI.ORD_CD AND PROD_CODE = OPI.PROD_CODE AND PROD_SEQ = OPI.PROD_SEQ) AS SHARE_USING_DAY
			  ,(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD' AND COM_CD = OPI.PROC_STAT_CD) AS PROC_STAT_NM
			  ,NVL(TO_DATE(TO_CHAR(INVC.DLV_END_DT + OPI.SHARE_TERM-1, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD'), 0) AS SHAR_DAY
		      , (CASE WHEN NVL(TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(INVC.DLV_END_DT + OPI.SHARE_TERM, 'YYYYMMDD'), 'YYYYMMDD'), 0) > 0
		             THEN NVL((PS.SHARING_PRICE * NVL(TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD'), 'YYYYMMDD') - TO_DATE(TO_CHAR(INVC.DLV_END_DT + OPI.SHARE_TERM, 'YYYYMMDD'), 'YYYYMMDD'), 0)), 0)
		             ELSE 0
		        END) AS SHAREING_ADD_AMT
  			  ,NVL(((PS.DEPOSIT * OPI.ORD_QTY) - ((PS.DEPOSIT * OPI.ORD_QTY)  / OPI.SHARE_TERM)), 0) AS DEPOSIT_BAL
  			  ,CEIL(PS.DEPOSIT/PS.SHARING_PRICE) USE_DATE
  			  ,NVL(OPI.PROD_CPN_CD,'N0') AS PROD_CPN_CD
              ,CASE WHEN TO_CHAR(SYSDATE,'YYYYMM') = TO_CHAR(OI.REGIST_DT,'YYYYMM') THEN 'Y' ELSE 'N' END AS PHONE_CANCEL_YN
              ,NVL (OPI.DLV_GRP_CODE, 'NO') AS DLV_GRP_CODE
              ,OI.SELT_GB_CD
              ,(
              	SELECT C.FILE_URL FROM
					MBER_DTL_INFO A,
					MBER_LEV B ,
					FILE_INFO C
					WHERE A.BUY_MBER_LEV_SEQ = B.MBER_LEV_SEQ
					AND  B.FILE_SEQ = C.FILE_SEQ (+)
					AND A.MBER_SEQ = OI.MBER_SEQ
              ) AS MBER_LEV
		  FROM ORD_INFO OI, ORD_PROD_INFO OPI, PROD PI, PROD_SHARING PS, CODE CD, PROD_IMG IMG, ORD_DLV_INFO DLV
			  ,PROD_BUY_CONF_INFO CONF, INVC_INFO INVC, CHG_PROD_INFO CPI, CHG_RTN_PROC_INFO CRI, CHG_INVC_INFO CINVC
			  ,MBER_INFO F
		 WHERE OI.ORD_CD = OPI.ORD_CD
		   AND OPI.PROD_CODE = PI.PROD_CODE
		   AND PI.PROD_CODE = PS.PROD_CODE
		   AND PI.PROD_CODE = IMG.PROD_CODE
		   AND OPI.PROC_STAT_CD = CD.COM_CD
		   AND OI.ORD_CD = DLV.ORD_CD
		   AND PI.MBER_SEQ = F.MBER_SEQ
		   AND OPI.ORD_CD = CONF.ORD_CD(+)
   		   AND OPI.PROD_CODE = CONF.PROD_CODE(+)
   		   AND OPI.PROD_SEQ = CONF.PROD_SEQ(+)
   		   AND OPI.ORD_CD = INVC.ORD_CD(+)
   		   AND OPI.PROD_CODE = INVC.PROD_CODE(+)
   		   AND OPI.PROD_SEQ = INVC.PROD_SEQ(+)
   		   AND OPI.ORD_CD = CPI.ORD_CD(+)
		   AND OPI.PROD_CODE = CPI.PROD_CODE(+)
		   AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
		   AND CPI.CHG_CD = CRI.CHG_CD(+)
		   AND CPI.ORD_CD = CINVC.ORD_CD(+)
		   AND CPI.PROD_CODE = CINVC.PROD_CODE(+)
		   AND CPI.PROD_SEQ = CINVC.PROD_SEQ(+)
		   AND CPI.CHG_CD = CINVC.CHG_CD(+)
		   AND OI.ORD_CD = #{ordCd}
		   AND PI.PROD_TYPE_CD = #{prodTypeCd}
		   AND CD.GRP_CD = #{grpCd}
		   AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
		<if test="prodCode != null and prodCode != ''">
		   AND PI.PROD_CODE = #{prodCode}
		</if>
		<if test="procStatCdArr != null and procStatCdArr != ''">
		   AND OPI.PROC_STAT_CD IN
			<foreach collection="procStatCdArr" item="cd" open="(" close=")" separator=",">
				#{cd}
			</foreach>
		</if>
		ORDER BY OPI.PROD_SEQ ASC

	</select>

	<!-- 셰어링 주문취소 상세내역 -->
	<select id="selectOrderShareCancDtl" parameterType="hashmap" resultMap="listOrderMap">

		SELECT OI.ORD_CD
		      ,TO_CHAR(OI.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS REGIST_DT
		      ,(SELECT MBER_EMAIL FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ) AS ORD_EMAIL
		      ,(SELECT MBER_PHONE FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ) AS ORD_TEL
		      ,OI.ORD_HP
		      ,(SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = (SELECT MBER_IMG FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ)) AS MBER_IMG_URL
		      ,OPI.PROD_CODE
		      ,OPI.PROD_SEQ
		      ,OPI.PROC_STAT_CD
		      ,CD.COM_CD_NM AS PROC_STAT_CD_NM
		      ,OPI.PROD_ORD_AMT
		      ,OPI.ORD_QTY
		      ,PI.PROD_NM
		      ,OPI.SHARE_TERM
		      ,PI.DLV_PRCE
		      ,PI.DLV_PAY_GB_CD
		      ,PI.DLV_WAY_CD
		      ,F.MBER_GB_CD AS SELLER_MBER_GB_CD
		      ,PS.SHARING_PRICE
		      ,NVL(PS.DEPOSIT,0)
		      ,NVL(PS.DEPOSIT,0) AS DEPOSIT2
		      ,IMG.PROD_IMG_URL
		      ,CI.CANC_REASON
		      ,CI.CANC_REASON_CD
		      ,TO_CHAR(CI.CANC_DT, 'YYYY-MM-DD HH24:MI') AS CANC_DT
		      ,CASE WHEN CI.SELLER_CANC_YN = 'Y'
		            THEN (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'CANC_SELLER_REASON_CD' AND COM_CD = CI.CANC_REASON_CD)
		            ELSE (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'CANC_REASON_CD' AND COM_CD = CI.CANC_REASON_CD)
		            END  AS CANC_REASON_CD_NM
		      ,NVL((PS.SHARING_PRICE * OPI.SHARE_TERM), 0) AS SHAREING_AMT
		      ,(
              	SELECT C.FILE_URL FROM
					MBER_DTL_INFO A,
					MBER_LEV B ,
					FILE_INFO C
					WHERE A.BUY_MBER_LEV_SEQ = B.MBER_LEV_SEQ
					AND  B.FILE_SEQ = C.FILE_SEQ (+)
					AND A.MBER_SEQ = OI.MBER_SEQ
              ) AS MBER_LEV
			  ,DLV.SECU_NO_USE_YN
			  ,DLV.SECU_NO
		  FROM ORD_INFO OI
		  ,ORD_PROD_INFO OPI
		  ,PROD PI
		  ,PROD_SHARING PS
		  ,CODE CD
		  ,PROD_IMG IMG
		  ,ORD_CANC_INFO CI
		  ,MBER_INFO F
		  ,ORD_DLV_INFO DLV
		 WHERE OI.ORD_CD = OPI.ORD_CD
		   AND OPI.PROD_CODE = PI.PROD_CODE
		   AND PI.PROD_CODE = PS.PROD_CODE
		   AND PI.PROD_CODE = IMG.PROD_CODE
		   AND OPI.PROC_STAT_CD = CD.COM_CD
		   AND OPI.CANC_CD = CI.CANC_CD
		   AND OI.ORD_CD = DLV.ORD_CD
		   AND OI.ORD_CD = #{ordCd}
		   AND PI.PROD_TYPE_CD = #{prodTypeCd}
		   AND CD.GRP_CD = #{grpCd}
		   AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
     	   AND OPI.PROC_STAT_CD = #{procStatCd}
     	   AND PI.MBER_SEQ=F.MBER_SEQ
     	ORDER BY OPI.PROD_SEQ ASC

	</select>

	<!-- 배송 출하지 조회 -->
	<select id="selectListGrpProdInfo" parameterType="hashmap" resultType="hashmap">

		SELECT GRP.MBER_SEQ
		      ,GRP.GRP_PROD_SEQ
		      ,GRP.GRP_NM
		      ,GRP.ZIP_CD
		      ,GRP.JUSO_DORO
		      ,GRP.JUSO_JIBEN
		      ,GRP.JUSO_DTL
		      ,GRP.TEL
		      ,GRP.HP
		      ,GRP.BASE_YN
		      ,CFG.ACNT_NM
		  FROM GRP_PROD_INFO GRP,
		       GRP_PROD_MAP GRM,
		       SELLER_INFO_CFG CFG
		 WHERE GRP.GRP_PROD_SEQ = GRM.GRP_PROD_SEQ
		   AND GRP.MBER_SEQ = CFG.MBER_SEQ
		   AND GRP.MBER_SEQ = #{mberSeq}
		   AND GRM.PROD_CODE = #{prodCode}

	</select>
	<insert id="insertGrpProdInfoReg">
	INSERT INTO GRP_PROD_INFO (MBER_SEQ, GRP_PROD_SEQ, GRP_NM, ZIP_CD, JUSO_DORO, JUSO_JIBEN, JUSO_DTL
					, HP
					, BASE_YN
					, REGIST_DT
					, UPDT_DT)
						   VALUES (#{mberSeq}
						   		  ,(SELECT NVL(MAX(GRP_PROD_SEQ)+1, 1) FROM GRP_PROD_INFO WHERE MBER_SEQ = #{mberSeq})
								  ,'기본출하지'
						   		  ,#{zipCode}
						   		  ,#{jusoDoro}
						   		  ,#{jusoJiben}
						   		  ,#{jusoDtl}
						   		  ,(SELECT MBER_PHONE FROM MBER_INFO WHERE MBER_SEQ = #{mberSeq})
						   		  ,'N'
						   		  ,SYSDATE
						   		  ,SYSDATE
						   		   )

	</insert>


	<insert id="insertGrpProdInfoRegV2" parameterType="hashmap" useGeneratedKeys="true" keyProperty="GRP_PROD_SEQ" keyColumn="GRP_PROD_SEQ">
	INSERT INTO GRP_PROD_INFO (MBER_SEQ, GRP_PROD_SEQ, GRP_NM, ZIP_CD, JUSO_DORO, JUSO_JIBEN, JUSO_DTL
					, HP
					, BASE_YN
					, REGIST_DT
					, UPDT_DT)
						   VALUES (#{mberSeq}
						   		  ,(SELECT NVL(MAX(GRP_PROD_SEQ)+1, 1) FROM GRP_PROD_INFO WHERE MBER_SEQ = #{mberSeq})
								  ,#{jusoDtl}
						   		  ,#{zipCode}
						   		  ,#{jusoDoro}
						   		  ,#{jusoJiben}
						   		  ,#{jusoDtl}
						   		  ,(SELECT MBER_PHONE FROM MBER_INFO WHERE MBER_SEQ = #{mberSeq})
						   		  ,DECODE((SELECT count(*)
						   		  			 FROM GRP_PROD_INFO
						   		  			WHERE MBER_SEQ = #{mberSeq}
						   		  			  AND BASE_YN = 'Y'), 0, 'Y','N')
						   		  ,SYSDATE
						   		  ,SYSDATE	/* insertGrpProdInfoRegV2 */
						   		   )

	</insert>

	<!-- 출하지 정보 등록 -->
	<!-- 출하지명이 없는 경우 "기본출하지"로 변경함 : okayjava -->
	<insert id="insertGrpProdInfo" parameterType="hashmap" useGeneratedKeys="true" keyProperty="GRP_PROD_SEQ" keyColumn="GRP_PROD_SEQ">

		INSERT INTO GRP_PROD_INFO (MBER_SEQ, GRP_PROD_SEQ, GRP_NM, ZIP_CD, JUSO_DORO, JUSO_JIBEN, JUSO_DTL
					<if test="hp == null and hp == ''">, HP </if>
					, BASE_YN, REGIST_DT, UPDT_DT)
						   VALUES (#{mberSeq}
						   		  ,(SELECT NVL(MAX(GRP_PROD_SEQ)+1, 1) FROM GRP_PROD_INFO WHERE MBER_SEQ = #{mberSeq})
								  ,'기본출하지'
						   		  ,#{zipCode}
						   		  ,#{jusoDoro}
						   		  ,#{jusoJiben}
						   		  ,#{jusoDtl}
						   		  <if test="hp == null and hp == ''">
						   		  ,#{hp}
						   		  </if>
						   		  ,#{baseYn}
						   		  ,SYSDATE
						   		  ,SYSDATE
						   		   )

	</insert>

	<!-- 출하지 조회 -->
	<select id="selectGrpProdMapCnt" parameterType="hashmap" resultType="int">

		SELECT COUNT(1)
		  FROM GRP_PROD_MAP
		 WHERE MBER_SEQ = #{mberSeq}
		   AND GRP_PROD_SEQ = #{grpProdSeq}
		   AND PROD_CODE = #{prodCode}

	</select>

	<!-- 상품별 출하지 조회 -->
	<select id="selectListGrpProdByProd" parameterType="hashmap" resultType="hashmap">
		SELECT GRP.MBER_SEQ
			  ,GRP.GRP_PROD_SEQ
			  ,GRP.GRP_NM
			  ,GRP.ZIP_CD
			  ,GRP.JUSO_DORO
			  ,GRP.JUSO_JIBEN
			  ,GRP.JUSO_DTL
			  ,GRP.TEL
			  ,GRP.HP
			  ,GRP.BASE_YN
			  ,CFG.ACNT_NM
		  FROM GRP_PROD_INFO GRP, SELLER_INFO_CFG CFG, GRP_PROD_MAP GRM
		 WHERE GRP.MBER_SEQ = CFG.MBER_SEQ
		   AND GRP.MBER_SEQ = GRM.MBER_SEQ
		   AND GRP.GRP_PROD_SEQ = GRM.GRP_PROD_SEQ
		   AND GRP.MBER_SEQ = #{mberSeq}
		   AND GRM.PROD_CODE = #{prodCode}
		ORDER BY GRP.GRP_PROD_SEQ DESC

	</select>



	<!-- 반품신청정보 조회 - shareing -->
	<select id="selectBackReqInfo" parameterType="hashmap" resultType="hashmap">

		SELECT OI.ORD_CD
		      ,(SELECT MBER_EMAIL FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ) AS ORD_EMAIL
		      ,(SELECT MBER_PHONE FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ) AS ORD_TEL
		      ,OI.ORD_HP
		      ,(SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = (SELECT MBER_IMG FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ)) AS MBER_IMG_URL
		      ,OPI.PROD_CODE
		      ,OPI.PROD_SEQ
		      ,OPI.PROD_ORD_AMT
		      ,OPI.ORD_QTY
		      ,PI.PROD_NM
		      ,PI.DLV_PRCE
		      ,PI.DLV_PAY_GB_CD
		      ,PS.SHARING_PRICE
		      ,PS.DEPOSIT
		      ,IMG.PROD_IMG_URL
		      ,CRI.RCV_NM
		      ,CRI.ZIP_CD
		      ,CRI.JUSO_JIBEN
		      ,CRI.JUSO_DORO
		      ,CRI.JUSO_DTL
		      ,CRI.TEL
		      ,CRI.HP
		      ,CRI.MEMO
		      ,(
              	SELECT C.FILE_URL FROM
					MBER_DTL_INFO A,
					MBER_LEV B ,
					FILE_INFO C
					WHERE A.BUY_MBER_LEV_SEQ = B.MBER_LEV_SEQ
					AND  B.FILE_SEQ = C.FILE_SEQ (+)
					AND A.MBER_SEQ = OI.MBER_SEQ
              ) AS MBER_LEV
		  FROM ORD_INFO OI
		      ,ORD_PROD_INFO OPI
		      ,PROD PI
		      ,PROD_SHARING PS
		      ,CODE CD
		      ,PROD_IMG IMG
		      ,CHG_PROD_INFO CPI
      		  ,CHG_RTN_PROC_INFO CRI
		 WHERE OI.ORD_CD = OPI.ORD_CD
		   AND OPI.PROD_CODE = PI.PROD_CODE
		   AND PI.PROD_CODE = PS.PROD_CODE
		   AND PI.PROD_CODE = IMG.PROD_CODE
		   AND OPI.PROC_STAT_CD = CD.COM_CD
		   AND OPI.ORD_CD = CPI.ORD_CD
		   AND OPI.PROD_CODE = CPI.PROD_CODE
		   AND OPI.PROD_SEQ = CPI.PROD_SEQ
		   AND CPI.CHG_CD = CRI.CHG_CD
		   AND OI.ORD_CD = #{ordCd}
		   AND OPI.PROD_CODE = #{prodCode}
		   AND PI.PROD_TYPE_CD = #{prodTypeCd}
		   AND CD.GRP_CD = #{grpCd}
		   AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
		<if test="procStatCdArr != null and procStatCdArr != ''">
		   AND OPI.PROC_STAT_CD IN
			<foreach collection="procStatCdArr" item="cd" open="(" close=")" separator=",">
				#{cd}
			</foreach>
		</if>
		ORDER BY OPI.PROD_SEQ ASC

	</select>

	<!-- 반품신청정보 조회 - 판매 -->
	<select id="selectSellBackReqInfo" parameterType="hashmap" resultType="hashmap">

		SELECT OI.ORD_CD
		      ,(SELECT MBER_EMAIL FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ) AS ORD_EMAIL
		      ,(SELECT MBER_PHONE FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ) AS ORD_TEL
		      ,OI.ORD_HP
		      ,(SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = (SELECT MBER_IMG FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ)) AS MBER_IMG_URL
		      ,OPI.PROD_CODE
		      ,OPI.PROD_SEQ
		      ,OPI.PROD_ORD_AMT
		      ,OPI.ORD_QTY
		      ,PI.PROD_NM
		      ,PI.DLV_PRCE
		      ,PI.DLV_PAY_GB_CD
		      ,PI.NRM_PRCE
		      ,PI.SELL_PRCE
		      ,IMG.PROD_IMG_URL
		      ,CRI.RCV_NM
		      ,CRI.ZIP_CD
		      ,CRI.JUSO_JIBEN
		      ,CRI.JUSO_DORO
		      ,CRI.JUSO_DTL
		      ,CRI.TEL
		      ,CRI.HP
		      ,CRI.MEMO
		      ,(
              	SELECT C.FILE_URL FROM
					MBER_DTL_INFO A,
					MBER_LEV B ,
					FILE_INFO C
					WHERE A.BUY_MBER_LEV_SEQ = B.MBER_LEV_SEQ
					AND  B.FILE_SEQ = C.FILE_SEQ (+)
					AND A.MBER_SEQ = OI.MBER_SEQ
              ) AS MBER_LEV     	
		  FROM ORD_INFO OI
		      ,ORD_PROD_INFO OPI
		      ,PROD PI
		      ,CODE CD
		      ,PROD_IMG IMG
		      ,CHG_PROD_INFO CPI
      		  ,CHG_RTN_PROC_INFO CRI
  			  	  
		 WHERE OI.ORD_CD = OPI.ORD_CD
		   AND OPI.PROD_CODE = PI.PROD_CODE
		   AND PI.PROD_CODE = IMG.PROD_CODE
		   AND OPI.PROC_STAT_CD = CD.COM_CD
		   AND OPI.ORD_CD = CPI.ORD_CD
		   AND OPI.PROD_CODE = CPI.PROD_CODE
		   AND OPI.PROD_SEQ = CPI.PROD_SEQ
		   AND CPI.CHG_CD = CRI.CHG_CD
		   AND OI.ORD_CD = #{ordCd}
		   AND OPI.PROD_CODE = #{prodCode}
		   AND PI.PROD_TYPE_CD = #{prodTypeCd}
		   AND CD.GRP_CD = #{grpCd}
		   AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
		<if test="procStatCdArr != null and procStatCdArr != ''">
		   AND OPI.PROC_STAT_CD IN
			<foreach collection="procStatCdArr" item="cd" open="(" close=")" separator=",">
				#{cd}
			</foreach>
		</if>
		ORDER BY OPI.PROD_SEQ ASC

	</select>

	<!-- 운송장 정보 생성 -->
	<insert id="insertChgInvcInfo" parameterType="hashmap">

		INSERT INTO CHG_INVC_INFO (ORD_CD, CHG_CD, PROD_CODE, PROD_SEQ, DLV_CMP_CD, REGIST_DT, UPDT_DT)
						   VALUES (#{ordCd}, #{chgCd}, #{prodCode}, #{prodSeq}, #{dlvCmpCd}, SYSDATE, SYSDATE)

	</insert>

	<!-- 판매 상품 주문내역 조회 -->
	<select id="selectListOrderSellCount" parameterType="hashmap" resultType="int">
		SELECT
			COUNT(1) AS CNT
		FROM
			ORD_INFO OI ,ORD_PROD_INFO OPI ,PROD PI ,CODE CD ,PROD_IMG IMG, CHG_PROD_INFO CPI
		WHERE
			    OI.ORD_CD = OPI.ORD_CD
			AND OPI.PROD_CODE = PI.PROD_CODE
			AND PI.PROD_CODE = IMG.PROD_CODE
			AND OPI.PROC_STAT_CD = CD.COM_CD
			AND OPI.ORD_CD = CPI.ORD_CD(+)
			AND OPI.PROD_CODE = CPI.PROD_CODE(+)
			AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
			AND PI.PROD_TYPE_CD = #{prodTypeCd}
			AND PI.MBER_SEQ = #{mberSeq}
			AND CD.GRP_CD = #{grpCd}
			AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
			<if test="startDate != null and startDate != ''">
			AND TO_CHAR(OI.REGIST_DT , 'YYYYMMDD') BETWEEN #{startDate} AND #{endDate}
			</if>
			<if test="procStatCdArr != null and procStatCdArr != ''">
				AND OPI.PROC_STAT_CD IN
				<foreach collection="procStatCdArr" item="cd" open="(" close=")" separator=",">
		  			#{cd}
				</foreach>
			</if>
			<if test="procStatCd != null and procStatCd != ''">
				AND OPI.PROC_STAT_CD = #{procStatCd}
			</if>
			<if test="prodNm != null and prodNm != ''">
				AND UPPER(PI.PROD_NM) LIKE UPPER('%'||#{prodNm}||'%')
			</if>
	</select>

	<!-- 판매 상품 주문내역 조회 -->
	<select id="selectListOrderSell" parameterType="hashmap" resultMap="listOrderMap">

		SELECT ORD.RNUM
			  ,ORD.ORD_CD
			  ,ORD.REGIST_DT
			  ,ORD.PROD_CODE
			  ,ORD.PROD_SEQ
			  ,ORD.PROC_STAT_CD
			  ,ORD.PROC_STAT_CD_NM
			  ,ORD.ORD_QTY
			  ,ORD.DLV_PAY_F_CD
			  ,ORD.DLV_PRCE
			  ,ORD.PROD_NM
			  ,ORD.SELL_PRCE
			  ,ORD.DLV_PAY_GB_CD
			  ,ORD.DLV_WAY_CD
			  ,ORD.FILE_SEQ
			  ,ORD.PROD_IMG_URL
			  ,ORD.CHG_CD
			  ,ORD.ADJ_COMP_YN
			  ,ORD.OPT_INFO
			  ,ORD.OPT_QTY
		      ,ORD.OPT_PRCE
		      ,ORD.OP_GB_CD
		  FROM (
				SELECT DENSE_RANK() OVER (ORDER BY ORD_CD DESC) AS RNUM
					  ,MAIN.ORD_CD
					  ,MAIN.REGIST_DT
					  ,MAIN.PROD_CODE
					  ,MAIN.PROD_SEQ
					  ,MAIN.PROC_STAT_CD
					  ,MAIN.PROC_STAT_CD_NM
					  ,MAIN.ORD_QTY
					  ,MAIN.DLV_PAY_F_CD
					  ,MAIN.DLV_PRCE
					  ,MAIN.PROD_NM
					  ,MAIN.SELL_PRCE
					  ,MAIN.DLV_PAY_GB_CD
					  ,MAIN.DLV_WAY_CD
					  ,MAIN.FILE_SEQ
					  ,MAIN.PROD_IMG_URL
					  ,MAIN.CHG_CD
					  ,MAIN.ADJ_COMP_YN
					  ,MAIN.OPT_INFO
					  ,MAIN.OPT_QTY
		              ,MAIN.OPT_PRCE
		              ,MAIN.OP_GB_CD
				  FROM
				  	   (
				  		SELECT OI.ORD_CD
							  ,TO_CHAR(OI.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS REGIST_DT
							  ,OPI.PROD_CODE
							  ,OPI.PROD_SEQ
							  ,OPI.PROC_STAT_CD
							  ,CD.COM_CD_NM AS PROC_STAT_CD_NM
							  ,OPI.ORD_QTY
							  ,OPI.DLV_PAY_F_CD
							  ,PI.DLV_PRCE
							  ,PI.PROD_NM
							  ,PI.SELL_PRCE
							  ,PI.DLV_PAY_GB_CD
							  ,PI.DLV_WAY_CD
							  ,IMG.FILE_SEQ
							  ,IMG.PROD_IMG_URL
							  ,CPI.CHG_CD
							  ,OPI.ADJ_COMP_YN
							  ,(
		                          SELECT REPLACE(LTRIM (SYS_CONNECT_BY_PATH (POPT.OPT_NM, ' // '), ' // '), '//', '/') AS OPT_NM
		                          FROM   PROD_OP POPT
		                           WHERE  POPT.OPT_CD = POPTI.OPT_CD
		                           START WITH POPT.PAR_OPT_CD = '0'
		                           CONNECT BY PRIOR POPT.OPT_CD = POPT.PAR_OPT_CD
		                       ) AS OPT_INFO
		                       ,POPTI.OPT_QTY
		                       ,POPT.OPT_PRCE
		                       ,POPTF.OP_GB_CD
				  		  FROM ORD_INFO OI ,ORD_PROD_INFO OPI ,PROD PI ,CODE CD ,PROD_IMG IMG, CHG_PROD_INFO CPI,
				  		  ORD_PROD_OPT_INFO POPTI,
				     	  PROD_OP POPT,
				     	  PROD_OP_INFO POPTF
				  		 WHERE OI.ORD_CD = OPI.ORD_CD
						   AND OPI.PROD_CODE = PI.PROD_CODE
						   AND PI.PROD_CODE = IMG.PROD_CODE
						   AND OPI.PROC_STAT_CD = CD.COM_CD
						   AND OPI.ORD_CD = CPI.ORD_CD(+)
						   AND OPI.PROD_CODE = CPI.PROD_CODE(+)
						   AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
						   AND PI.PROD_TYPE_CD = #{prodTypeCd}
						   AND PI.MBER_SEQ = #{mberSeq}
						   AND CD.GRP_CD = #{grpCd}
						   AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
						   AND OPI.ORD_CD =  POPTI.ORD_CD(+)
					       AND OPI.PROD_CODE = POPTI.PROD_CODE(+)
					       AND OPI.PROD_SEQ =  POPTI.PROD_SEQ(+)
					       AND POPTI.OPT_CD = POPT.OPT_CD(+)
					       AND POPT.OPT_GRP_CD = POPTF.OPT_GRP_CD(+)
						<if test="startDate != null and startDate != ''">
						AND TO_CHAR(OI.REGIST_DT , 'YYYYMMDD') BETWEEN #{startDate} AND #{endDate}
						</if>
						<if test="procStatCdArr != null and procStatCdArr != ''">
						   AND OPI.PROC_STAT_CD IN
							<foreach collection="procStatCdArr" item="cd" open="(" close=")" separator=",">
					  			#{cd}
							</foreach>
						</if>
						<if test="procStatCd != null and procStatCd != ''">
						   AND OPI.PROC_STAT_CD = #{procStatCd}
					  	</if>
						<if test="prodNm != null and prodNm != ''">
						   AND UPPER(PI.PROD_NM) LIKE UPPER('%'||#{prodNm}||'%')
					  	</if>
					  	ORDER BY OI.ORD_CD DESC
				  	) MAIN
		       ) ORD
		 WHERE ORD.RNUM <![CDATA[>=]]> #{S_NUM}
		   AND ORD.RNUM <![CDATA[<=]]> #{E_NUM}
		ORDER BY ORD.ORD_CD DESC, ORD.OP_GB_CD, ORD.OPT_INFO

	</select>

	<!-- 판매 주문 상세내역 -->
	<select id="selectOrderSellDtl" parameterType="hashmap" resultMap="listOrderMap">

		SELECT OI.ORD_CD
		      ,TO_CHAR(OI.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS REGIST_DT
		      ,(SELECT MBER_EMAIL FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ) AS ORD_EMAIL
		      ,(SELECT MBER_PHONE FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ) AS ORD_TEL
		      ,OI.ORD_HP
		      ,OI.REAL_SELT_AMT
		      ,OI.ORD_AMT
		      ,OI.DSCNT_AMT
		      ,(SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = (SELECT MBER_IMG FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ)) AS MBER_IMG_URL
		      ,OPI.PROD_CODE
		      ,OPI.PROD_SEQ
		      ,OPI.PROC_STAT_CD
		      ,CD.COM_CD_NM AS PROC_STAT_CD_NM
		      ,OPI.PROD_ORD_AMT
		      ,OPI.ORD_QTY
		      ,OPI.DLV_PAY_F_CD
		      ,PI.PROD_NM
		      ,PI.PROD_TYPE_CD
		      ,PI.DLV_PRCE
		      ,PI.DLV_PAY_GB_CD
		      ,PI.SELL_PRCE
		      ,PI.DLV_WAY_CD
		      ,PI.DLV_CMP_CD
		      ,(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'DLV_CMP_CD' AND COM_CD = PI.DLV_CMP_CD) AS DLV_CMP_NM
		      ,IMG.PROD_IMG_URL
		      ,DLV.RCV_NM
		      ,DLV.JUSO_JIBEN
		      ,DLV.JUSO_DORO
		      ,DLV.JUSO_DTL
		      ,DLV.RCV_TEL
		      ,DLV.RCV_HP
		      ,DLV.DLV_MSG
		      ,DLV.SECU_NO_USE_YN
		      ,DLV.SECU_NO
      		  ,TO_CHAR(CRI.CHG_REG_DT, 'YYYY-MM-DD HH24:MI') AS CHG_REG_DT
		      ,CRI.CHG_REASON
		      ,CRI.CHG_REASON_CD
		      <!--(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'CHG_REASON_CD' AND COM_CD = CRI.CHG_REASON_CD) AS CHG_REASON_CD_NM  -->
		      ,(SELECT COM_CD_NM FROM CODE WHERE  GRP_CD = 'CANC_SELLER_REASON_CD' AND COM_CD = CRI.CHG_REASON_CD)  AS CHG_REASON_CD_NM
		      ,CPI.CHG_CD
		      ,OPI.ADJ_COMP_YN
		      , (SELECT TRUNC(SYSDATE) - TRUNC(DLV_END_DT) +1 AS SHARE_USING_DAY FROM INVC_INFO WHERE ORD_CD = OI.ORD_CD AND PROD_CODE = OPI.PROD_CODE AND PROD_SEQ = OPI.PROD_SEQ) AS SHARE_USING_DAY
		      
              ,NVL(OPI.PROD_CPN_CD,'N0') AS PROD_CPN_CD
              ,CASE WHEN TO_CHAR(SYSDATE,'YYYYMM') = TO_CHAR(OI.REGIST_DT,'YYYYMM') THEN 'Y' ELSE 'N' END AS PHONE_CANCEL_YN
              ,NVL (OPI.DLV_GRP_CODE, 'NO') AS DLV_GRP_CODE
              ,OI.SELT_GB_CD
              ,(
              	SELECT C.FILE_URL FROM
					MBER_DTL_INFO A,
					MBER_LEV B ,
					FILE_INFO C
					WHERE A.BUY_MBER_LEV_SEQ = B.MBER_LEV_SEQ
					AND  B.FILE_SEQ = C.FILE_SEQ (+)
					AND A.MBER_SEQ = OI.MBER_SEQ
              ) AS MBER_LEV
              ,(
					SELECT REPLACE(LTRIM (SYS_CONNECT_BY_PATH (POPT.OPT_NM, ' // '), ' // '), '//', '/') AS OPT_NM
						FROM   PROD_OP POPT 
					 	WHERE  POPT.OPT_CD = POPTI.OPT_CD
					 	START WITH POPT.PAR_OPT_CD = '0'
					 	CONNECT BY PRIOR POPT.OPT_CD = POPT.PAR_OPT_CD
               ) AS OPT_INFO
               ,POPTI.OPT_QTY
               ,POPT.OPT_PRCE
               ,POPTF.OP_GB_CD
		  FROM ORD_INFO OI
		      ,ORD_PROD_INFO OPI
		      ,PROD PI
		      ,CODE CD
		      ,PROD_IMG IMG
		      ,ORD_DLV_INFO DLV
		      ,CHG_PROD_INFO CPI
		      ,CHG_RTN_PROC_INFO CRI
		      ,ORD_CANC_INFO CI
		      ,ORD_PROD_OPT_INFO POPTI
		     ,PROD_OP POPT
		     ,PROD_OP_INFO POPTF
		 WHERE OI.ORD_CD = OPI.ORD_CD
		   AND OPI.PROD_CODE = PI.PROD_CODE
		   AND PI.PROD_CODE = IMG.PROD_CODE
		   AND OPI.PROC_STAT_CD = CD.COM_CD
		   AND OI.ORD_CD = DLV.ORD_CD
   		   AND OPI.ORD_CD = CPI.ORD_CD(+)
		   AND OPI.PROD_CODE = CPI.PROD_CODE(+)
		   AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
		   AND CPI.CHG_CD = CRI.CHG_CD(+)
		   AND OI.ORD_CD = #{ordCd}
		   AND PI.PROD_TYPE_CD = #{prodTypeCd}
		   AND CD.GRP_CD = #{grpCd}
		   AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
		   AND OPI.CANC_CD = CI.CANC_CD(+)
		   AND OPI.ORD_CD =  POPTI.ORD_CD(+)
	       AND OPI.PROD_CODE = POPTI.PROD_CODE(+)
	       AND OPI.PROD_SEQ =  POPTI.PROD_SEQ(+)
	       AND POPTI.OPT_CD = POPT.OPT_CD(+)
	       AND POPT.OPT_GRP_CD = POPTF.OPT_GRP_CD(+)
		<if test="prodCode != null and prodCode != ''">
		   AND PI.PROD_CODE = #{prodCode}
		</if>
		<if test="procStatCdArr != null and procStatCdArr != ''">
		   AND OPI.PROC_STAT_CD IN
			<foreach collection="procStatCdArr" item="cd" open="(" close=")" separator=",">
				#{cd}
			</foreach>
		</if>
		ORDER BY OPI.PROD_SEQ ASC, POPTF.OP_GB_CD, OPT_INFO

	</select>

	<!-- 판매상품 전체취소 가능 유무 -->
	<select id="selectOrdSellAllCancYn" parameterType="hashmap" resultType="String">

		SELECT CASE WHEN CNT.TOT_CNT = (CNT.REQ_CNT + CNT.DLV_CNT) THEN 'Y' ELSE 'N' END AS CANC_FLAG
		  FROM (
				SELECT COUNT(OPI.PROC_STAT_CD) AS TOT_CNT
					  ,SUM(CASE WHEN OPI.PROC_STAT_CD = '10' THEN 1 ELSE 0 END) AS REQ_CNT
					  ,SUM(CASE WHEN OPI.PROC_STAT_CD = '21' THEN 1 ELSE 0 END) AS DLV_CNT
				  FROM ORD_INFO OI
					  ,ORD_PROD_INFO OPI
					  ,PROD PI
					  ,CODE CD
					  ,PROD_IMG IMG
					  ,ORD_DLV_INFO DLV
					  ,CHG_PROD_INFO CPI
					  ,CHG_RTN_PROC_INFO CRI
				 WHERE OI.ORD_CD = OPI.ORD_CD
				   AND OPI.PROD_CODE = PI.PROD_CODE
				   AND PI.PROD_CODE = IMG.PROD_CODE
				   AND OPI.PROC_STAT_CD = CD.COM_CD
				   AND OI.ORD_CD = DLV.ORD_CD
				   AND OPI.ORD_CD = CPI.ORD_CD(+)
				   AND OPI.PROD_CODE = CPI.PROD_CODE(+)
				   AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
				   AND CPI.CHG_CD = CRI.CHG_CD(+)
				   AND OI.ORD_CD = #{ordCd}
				   AND PI.PROD_TYPE_CD = #{prodTypeCd}
				   AND CD.GRP_CD = #{grpCd}
				   AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
				<if test="prodCode != null and prodCode != ''">
				   AND PI.PROD_CODE = #{prodCode}
				</if>
				<if test="procStatCdArr != null and procStatCdArr != ''">
				   AND OPI.PROC_STAT_CD IN
					<foreach collection="procStatCdArr" item="cd" open="(" close=")" separator=",">
						#{cd}
					</foreach>
				</if>
		  	   ) CNT

	</select>

	<!-- 판매 주문취소 상세내역 -->
	<select id="selectOrderSellCancDtl" parameterType="hashmap" resultMap="listOrderMap">

		SELECT OI.ORD_CD
		      ,TO_CHAR(OI.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS REGIST_DT
		      ,(SELECT MBER_EMAIL FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ) AS ORD_EMAIL
		      ,(SELECT MBER_PHONE FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ) AS ORD_TEL
		      ,OI.ORD_HP
		      ,(SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = (SELECT MBER_IMG FROM MBER_INFO WHERE MBER_SEQ = OI.MBER_SEQ)) AS MBER_IMG_URL
		      ,OPI.PROD_CODE
		      ,OPI.PROD_SEQ
		      ,OPI.PROC_STAT_CD
		      ,CD.COM_CD_NM AS PROC_STAT_CD_NM
		      ,OPI.PROD_ORD_AMT
		      ,OPI.ORD_QTY
		      ,PI.SELL_PRCE
		      ,PI.PROD_NM
		      ,PI.DLV_PRCE
		      ,PI.DLV_WAY_CD
		      ,PI.DLV_PAY_GB_CD 
		      ,PI.DLV_STAND_AMT
		      ,cASE
                  WHEN (SELECT Count(*)
                        FROM   ORD_PROD_INFO
                        WHERE  ORD_CD = OI.ORD_CD
                               AND DLV_GRP_CODE = OPI.DLV_GRP_CODE) = 1 THEN
                  'N'
                  ELSE 'Y'
              END AS DLV_GROUP_YN
		      ,IMG.PROD_IMG_URL
		      ,CI.CANC_REASON
		      ,CI.CANC_REASON_CD
		      ,TO_CHAR(CI.CANC_DT, 'YYYY-MM-DD HH24:MI') AS CANC_DT
		      ,(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'CANC_SELLER_REASON_CD' AND COM_CD = CI.CANC_REASON_CD) AS CANC_REASON_CD_NM
		      ,(
              	SELECT C.FILE_URL FROM
					MBER_DTL_INFO A,
					MBER_LEV B ,
					FILE_INFO C
					WHERE A.BUY_MBER_LEV_SEQ = B.MBER_LEV_SEQ
					AND  B.FILE_SEQ = C.FILE_SEQ (+)
					AND A.MBER_SEQ = OI.MBER_SEQ
              ) AS MBER_LEV
              ,DLV.SECU_NO_USE_YN
		      ,DLV.SECU_NO
		  FROM ORD_INFO OI ,ORD_PROD_INFO OPI ,PROD PI ,CODE CD ,PROD_IMG IMG, ORD_CANC_INFO CI, ORD_DLV_INFO DLV
		 WHERE OI.ORD_CD = OPI.ORD_CD
		   AND OPI.PROD_CODE = PI.PROD_CODE
		   AND PI.PROD_CODE = IMG.PROD_CODE
		   AND OPI.PROC_STAT_CD = CD.COM_CD
		   AND OPI.CANC_CD = CI.CANC_CD
		   AND OI.ORD_CD = DLV.ORD_CD
		   AND OI.ORD_CD = #{ordCd}
		   AND PI.PROD_TYPE_CD = #{prodTypeCd}
		   AND CD.GRP_CD = #{grpCd}
		   AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
     	   AND OPI.PROC_STAT_CD = #{procStatCd}
     	ORDER BY OPI.PROD_SEQ ASC

	</select>

	<!-- 일반택배 운송장 정보생성 -->
	<insert id="insertInvcInfo" parameterType="hashmap">

		INSERT INTO INVC_INFO (PROD_CODE, PROD_SEQ, ORD_CD, INVC_NO, DLV_CMP_CD, DLV_STAT_CD, DLV_START_DT, REGIST_DT, UPDT_DT)
					   VALUES (#{prodCode}, #{prodSeq}, #{ordCd}, #{invcNo}, #{dlvCmpCd}, #{dlvStatCd}, SYSDATE, SYSDATE, SYSDATE)

	</insert>

	<!-- 일반택배 배송완료 운송장 정보수정 -->
	<update id="updateInvcInfo" parameterType="hashmap">

		UPDATE INVC_INFO
		   SET DLV_STAT_CD = #{dlvStatCd}
		      ,DLV_END_DT = SYSDATE
		      ,UPDT_DT = SYSDATE
		 WHERE PROD_CODE = #{prodCode}
		   AND PROD_SEQ = #{prodSeq}
		   AND ORD_CD = #{ordCd}

	</update>

	<!-- 주문내역 금액 정보 조회 -->
	<select id="selectOrderAmtInfo" parameterType="hashmap" resultType="hashmap">

		SELECT A.DSCNT_BF_ORD_AMT
		      ,(A.DSCNT_BF_ORD_AMT + A.DLV_SELT_AMT) AS BF_ORD_AMT
		      ,A.DSCNT_AMT
		      ,A.ORD_AMT
		      ,A.DLV_SELT_AMT
		      ,A.REAL_SELT_AMT AS SELT_AMT
		      ,NVL(A.POINT_USE_AMT,0) AS POINT_USE_AMT
		      ,NVL(A.CPN_USE_AMT,0) AS CPN_USE_AMT
		      ,NVL(A.DLV_SELT_AMT,'0') AS DLV_PRCE
		      ,(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'SELT_GB_CD' AND COM_CD = A.SELT_GB_CD) AS SELT_GB_NM
		  FROM ORD_INFO A
		 WHERE ORD_CD = #{ordCd}

	</select>

	<!-- 주문내역 쿠폰 사용정보 조회 -->
	<select id="selectOrderCpnUseInfo" parameterType="hashmap" resultType="hashmap">

		SELECT CD.COM_CD_NM AS CPN_NM
			  ,CI.CPN_GB_CD
			  ,SUM(NVL(CI.BNFIT_DSCNT_PRCE, 0)) AS CPN_USE_AMT
		  FROM ORD_INFO OI, ORD_PROD_INFO OPI, MBER_CPN_INFO MCI, CPN_INFO CI, CODE CD
		 WHERE OI.ORD_CD = OPI.ORD_CD
		   AND OPI.PROD_CPN_CD = MCI.CPN_NO
		   AND MCI.CPN_GRP_CD = CI.CPN_GRP_CD
		   AND CI.CPN_GB_CD = CD.COM_CD
		   AND CD.GRP_CD = 'CPN_GB_CD'
		   AND OI.ORD_CD = #{ordCd}
		GROUP BY CI.CPN_GB_CD, CD.COM_CD_NM
		ORDER BY CI.CPN_GB_CD ASC

	</select>

	<!-- 나눔상품 신청내역 총건수 -->
	<select id="selectListOrderFreeCnt" parameterType="hashmap" resultType="int">

		SELECT COUNT(1)
		  FROM (
				SELECT X.CNT AS CNT
					  ,X.PROD_CODE AS PROD_CODE
					  ,X.PROD_NM AS PROD_NM
					  ,X.PROD_TYPE_CD AS PROD_TYPE_CD
					  ,X.DLV_WAY_CD AS DLV_WAY_CD
					  ,X.FREESHARE_START_DT AS FREESHARE_START_DT
					  ,X.FREESHARE_END_DT AS FREESHARE_END_DT
					  ,OPI.ORD_CD AS ORD_CD
					  ,OPI.REGIST_DT AS ORD_REGIST_DT
					  ,NVL(OPI.PROC_STAT_CD, '97') AS PROC_STAT_CD
					  ,OPI.PROD_SEQ AS PROD_SEQ
					  ,IMG.PROD_IMG_URL
				  FROM (
						SELECT COUNT(PI.PROD_CODE) AS CNT
							  ,PI.PROD_CODE
							  ,PI.PROD_NM AS PROD_NM
							  ,PI.PROD_TYPE_CD AS PROD_TYPE_CD
							  ,PI.DLV_WAY_CD AS DLV_WAY_CD
							  ,PI.REGIST_DT AS FREESHARE_START_DT
							  ,PI.FREESHARE_END_DT AS FREESHARE_END_DT
						  FROM PROD PI ,PROD_SUBMIT_INFO PSI
						 WHERE PI.PROD_CODE = PSI.PROD_CODE
						   AND PI.PROD_TYPE_CD = #{prodTypeCd}
						   AND PI.MBER_SEQ = #{mberSeq}
						<if test="startDate != null and startDate != ''">
							AND TO_CHAR(PSI.REGIST_DT , 'YYYYMMDD') BETWEEN #{startDate} AND #{endDate}
						</if>
						<if test="prodNm != null and prodNm != ''">
						   AND UPPER(PI.PROD_NM) LIKE UPPER('%'||#{prodNm}||'%')
						</if>
						GROUP BY PI.PROD_CODE, PI.PROD_NM, PI.PROD_TYPE_CD, PI.DLV_WAY_CD, PI.REGIST_DT, PI.FREESHARE_END_DT
						)X LEFT OUTER JOIN ORD_PROD_INFO OPI ON X.PROD_CODE = OPI.PROD_CODE
						   LEFT OUTER JOIN PROD_IMG IMG ON X.PROD_CODE = IMG.PROD_CODE AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
		<!--  주석처리 이부분이 왜 있을까? 응? 동일데이터 두번나오는데.
				UNION
				SELECT 0 AS CNT
					  ,PI.PROD_CODE AS PROD_CODE
					  ,PI.PROD_NM AS PROD_NM
					  ,PI.PROD_TYPE_CD AS PROD_TYPE_CD
					  ,PI.DLV_WAY_CD AS DLV_WAY_CD
					  ,PI.REGIST_DT AS FREESHARE_START_DT
					  ,PI.FREESHARE_END_DT AS FREESHARE_END_DT
					  ,OPI.ORD_CD AS ORD_CD
					  ,OPI.REGIST_DT AS ORD_REGIST_DT
					  ,OPI.PROC_STAT_CD AS PROC_STAT_CD
					  ,OPI.PROD_SEQ AS PROD_SEQ
					  ,IMG.PROD_IMG_URL
				  FROM PROD PI
					   INNER JOIN ORD_PROD_INFO OPI ON PI.PROD_CODE = OPI.PROD_CODE
					   LEFT OUTER JOIN PROD_IMG IMG ON PI.PROD_CODE = IMG.PROD_CODE AND IMG.PROD_IMG_GB_CD = '12'
				 WHERE PI.PROD_TYPE_CD = #{prodTypeCd}
				   AND PI.MBER_SEQ = #{mberSeq}
				   AND TO_CHAR(OPI.REGIST_DT , 'YYYYMMDD') BETWEEN #{startDate} AND #{endDate}
				<if test="prodNm != null and prodNm != ''">
				   AND UPPER(PI.PROD_NM) LIKE UPPER('%'||#{prodNm}||'%')
				</if> -->

				)

	</select>

	<!-- 나눔상품 신청내역 조회 -->
	<select id="selectListOrderFree" parameterType="hashmap" resultType="hashmap">

		SELECT FREE.RNUM
			  ,FREE.PROD_CODE
			  ,FREE.PROD_NM
			  ,FREE.PROD_TYPE_CD
			  ,FREE.DLV_WAY_CD
			  ,FREE.FREESHARE_START_DT
			  ,FREE.FREESHARE_END_DT
			  ,FREE.REQ_CNT
			  ,FREE.PROD_IMG_URL
			  ,FREE.ORD_CD
			  ,FREE.ORD_REGIST_DT
			  ,FREE.PROC_STAT_CD
			  ,(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD' AND COM_CD = FREE.PROC_STAT_CD) AS PROC_STAT_CD_NM
			  ,FREE.PROD_SEQ
		  FROM (
				SELECT ROWNUM AS RNUM
					  ,INFO.PROD_CODE
					  ,INFO.PROD_NM
					  ,INFO.PROD_TYPE_CD
					  ,INFO.DLV_WAY_CD
					  ,TO_CHAR(INFO.FREESHARE_START_DT, 'YYYY-MM-DD') AS FREESHARE_START_DT
					  ,TO_CHAR(INFO.FREESHARE_END_DT, 'YYYY-MM-DD') AS FREESHARE_END_DT
					  ,INFO.REQ_CNT
					  ,INFO.PROD_IMG_URL
					  ,INFO.ORD_CD
					  ,TO_CHAR(INFO.ORD_REGIST_DT, 'YYYY-MM-DD HH24:MI') AS ORD_REGIST_DT
					  ,INFO.PROC_STAT_CD
					  ,INFO.PROD_SEQ
				  FROM (
						SELECT X.CNT AS REQ_CNT
							  ,X.PROD_CODE AS PROD_CODE
							  ,X.PROD_NM AS PROD_NM
							  ,X.PROD_TYPE_CD AS PROD_TYPE_CD
							  ,X.DLV_WAY_CD AS DLV_WAY_CD
							  ,X.FREESHARE_START_DT AS FREESHARE_START_DT
							  ,X.FREESHARE_END_DT AS FREESHARE_END_DT
							  ,OPI.ORD_CD AS ORD_CD
							  ,OPI.REGIST_DT AS ORD_REGIST_DT
							  ,NVL(OPI.PROC_STAT_CD, '97') AS PROC_STAT_CD
							  ,OPI.PROD_SEQ AS PROD_SEQ
							  ,IMG.PROD_IMG_URL
						  FROM (
								SELECT COUNT(PI.PROD_CODE) AS CNT
									  ,PI.PROD_CODE
									  ,PI.PROD_NM
									  ,PI.PROD_TYPE_CD
									  ,PI.DLV_WAY_CD
									  ,PI.REGIST_DT AS FREESHARE_START_DT
									  ,PI.FREESHARE_END_DT
								  FROM PROD PI ,PROD_SUBMIT_INFO PSI
								 WHERE PI.PROD_CODE = PSI.PROD_CODE
								   AND PI.PROD_TYPE_CD = #{prodTypeCd}
								   AND PI.MBER_SEQ = #{mberSeq}
								<if test="startDate != null and startDate != ''">
									AND TO_CHAR(PSI.REGIST_DT , 'YYYYMMDD') BETWEEN #{startDate} AND #{endDate}
								</if>
								<if test="prodNm != null and prodNm != ''">
								   AND UPPER(PI.PROD_NM) LIKE UPPER('%'||#{prodNm}||'%')
								</if>
								GROUP BY PI.PROD_CODE, PI.PROD_NM, PI.PROD_TYPE_CD, PI.DLV_WAY_CD, PI.REGIST_DT, PI.FREESHARE_END_DT
								)X LEFT OUTER JOIN ORD_PROD_INFO OPI ON X.PROD_CODE = OPI.PROD_CODE
								   LEFT OUTER JOIN PROD_IMG IMG ON X.PROD_CODE = IMG.PROD_CODE AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
					   ) INFO
				<if test="searchCd != null and searchCd != ''">
				 WHERE INFO.PROC_STAT_CD = #{searchCd}
				</if>
			   ) FREE
		 WHERE FREE.RNUM <![CDATA[>=]]> #{S_NUM}
		   AND FREE.RNUM <![CDATA[<=]]> #{E_NUM}
		 ORDER BY FREE.ORD_CD DESC

	</select>

	<!-- 나눔 신청내역 상세 -->
	<select id="selectOrderFreeReqDtl" parameterType="hashmap" resultMap="ordFreeDtlMap">

		SELECT INFO.PROD_CODE
			  ,INFO.PROD_NM
			  ,INFO.PROD_TYPE_CD
			  ,INFO.DLV_WAY_CD
			  ,INFO.FREESHARE_START_DT
			  ,INFO.FREESHARE_END_DT
			  ,INFO.PROD_IMG_URL
			  ,INFO.MBER_SEQ
			  ,INFO.MBER_IMG_URL
			  ,INFO.MBER_EMAIL
			  ,INFO.REQ_MEMO
			  ,CNT.REQ_CNT
			  ,'97' AS PROC_STAT_CD
			  ,(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD' AND COM_CD = '97') AS PROC_STAT_CD_NM
			  , INFO.MBER_LEV
		  FROM (
				SELECT PI.PROD_CODE
					  ,PI.PROD_NM
					  ,PI.PROD_TYPE_CD
					  ,PI.DLV_WAY_CD
					  ,PI.REGIST_DT AS FREESHARE_START_DT
					  ,PI.FREESHARE_END_DT
					  ,IMG.PROD_IMG_URL
					  ,PSI.MBER_SEQ
					  ,(SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = (SELECT MI.MBER_IMG FROM MBER_INFO MI WHERE MI.MBER_SEQ = PSI.MBER_SEQ)) AS MBER_IMG_URL
					  ,(SELECT MBER_EMAIL FROM MBER_INFO WHERE MBER_SEQ = PSI.MBER_SEQ) AS MBER_EMAIL
					  ,PSI.REQ_MEMO
					  ,(
		              	SELECT C.FILE_URL FROM
							MBER_DTL_INFO A,
							MBER_LEV B ,
							FILE_INFO C
							WHERE A.BUY_MBER_LEV_SEQ = B.MBER_LEV_SEQ
							AND  B.FILE_SEQ = C.FILE_SEQ (+)
							AND A.MBER_SEQ = PSI.MBER_SEQ
		              ) AS MBER_LEV
				  FROM PROD PI ,PROD_SUBMIT_INFO PSI, PROD_IMG IMG
				 WHERE PI.PROD_CODE = PSI.PROD_CODE
				   AND PI.PROD_CODE = IMG.PROD_CODE
				   AND PI.PROD_TYPE_CD = #{prodTypeCd}
				   AND PI.MBER_SEQ = #{mberSeq}
				   AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
				   AND PI.PROD_CODE = #{prodCode}
			   ) INFO,
			   (
				SELECT COUNT(1) AS REQ_CNT
				  FROM PROD PI ,PROD_SUBMIT_INFO PSI, PROD_IMG IMG
				 WHERE PI.PROD_CODE = PSI.PROD_CODE
				   AND PI.PROD_CODE = IMG.PROD_CODE
				   AND PI.PROD_TYPE_CD = #{prodTypeCd}
				   AND PI.MBER_SEQ = #{mberSeq}
				   AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
				   AND PI.PROD_CODE = #{prodCode}
			   ) CNT

	</select>

	<!-- 나눔 신청내역 상세 -->
	<select id="selectOrderFreeConfDtl" parameterType="hashmap" resultType="hashmap">

		SELECT PI.PROD_CODE
		      ,PI.PROD_NM
		      ,PI.PROD_TYPE_CD
		      ,PI.DLV_WAY_CD
		      ,PI.REGIST_DT AS FREESHARE_START_DT
		      ,PI.FREESHARE_END_DT
		      ,IMG.PROD_IMG_URL
		      ,PSI.MBER_SEQ
		      ,PSI.RCV_NM
		      ,PSI.TEL
		      ,(SELECT FILE_URL FROM FILE_INFO WHERE FILE_SEQ = (SELECT MI.MBER_IMG FROM MBER_INFO MI WHERE MI.MBER_SEQ = PSI.MBER_SEQ)) AS MBER_IMG_URL
		      ,(SELECT MBER_EMAIL FROM MBER_INFO WHERE MBER_SEQ = PSI.MBER_SEQ) AS MBER_EMAIL
		      ,PSI.REQ_MEMO
		      ,PSI.ZIP_CD
			  ,PSI.JUSO_DORO
			  ,PSI.JUSO_JIBEN
			  ,PSI.JUSO_DTL
		      ,OPI.ORD_CD
		      ,OPI.PROD_SEQ
		      ,OPI.REGIST_DT
		      ,OPI.PROC_STAT_CD
		      ,(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD' AND COM_CD = OPI.PROC_STAT_CD) PROC_STAT_CD_NM
		      ,(
              	SELECT C.FILE_URL FROM
					MBER_DTL_INFO A,
					MBER_LEV B ,
					FILE_INFO C
					WHERE A.BUY_MBER_LEV_SEQ = B.MBER_LEV_SEQ
					AND  B.FILE_SEQ = C.FILE_SEQ (+)
					AND A.MBER_SEQ = PSI.MBER_SEQ
              ) AS MBER_LEV
		  FROM PROD PI ,PROD_SUBMIT_INFO PSI, PROD_IMG IMG, ORD_PROD_INFO OPI
		 WHERE PI.PROD_CODE = PSI.PROD_CODE
		   AND PI.PROD_CODE = IMG.PROD_CODE
		   AND PI.PROD_CODE = OPI.PROD_CODE
		   AND PI.PROD_TYPE_CD = #{prodTypeCd}
		   AND PI.MBER_SEQ = #{mberSeq}
		   AND IMG.PROD_IMG_GB_CD = #{prodImgGbCd}
		   AND PI.PROD_CODE = #{prodCode}
		   AND PSI.PROC_STAT_CD = #{procStatCd}

	</select>

	<!-- 나눔신청 상태변경 -->
	<update id="updateOrderFreeReq" parameterType="hashmap">

		UPDATE PROD_SUBMIT_INFO
		   SET PROC_STAT_CD = #{procStatCd}
		 WHERE PROD_CODE = #{prodCode}
		<if test="mberSeq != null and mberSeq != ''">
		   AND MBER_SEQ = #{mberSeq}
		</if>

	</update>

	<!-- 상품 상태변경 -->
	<update id="updateProdStatCd" parameterType="hashmap">

		UPDATE PROD
		   SET PROD_STAT_CD = #{prodStatCd}
		 WHERE PROD_CODE = #{prodCode}

	</update>

	<!-- 나눔 신청정보 조회 -->
	<select id="selectProdSubmitInfo" parameterType="hashmap" resultType="hashmap">

		SELECT PROD_CODE
			  ,MBER_SEQ
			  ,RCV_NM
			  ,PROD_TYPE_CD
			  ,ZIP_CD
			  ,JUSO_DORO
			  ,JUSO_JIBEN
			  ,JUSO_DTL
			  ,TEL
			  ,MEMO
		  FROM PROD_SUBMIT_INFO
		 WHERE PROD_CODE = #{prodCode}
		   AND MBER_SEQ = #{mberSeq}
		   AND PROC_STAT_CD = #{procStatCd}

	</select>

	<!-- 주문서 등록 -->
    <insert id="insertOrdInfo" parameterType="hashmap" useGeneratedKeys="true" keyProperty="ORD_CD" keyColumn="ORD_CD">
  			INSERT INTO ORD_INFO( ORD_CD				<!--  주문코드  -->
								, MBER_SEQ				<!--  회원고유번호 -->
								, ORD_REG_DATE			<!--  등록일시  -->
								, REGIST_DT				<!--  등록일시  -->
								, UPDT_DT				<!--  수정일시  -->
		)VALUES (
				TO_CHAR(SYSDATE, 'YYYYMMDD')||LPAD(SEQ_ORD_CD.NEXTVAL,4,0)
				, #{MBER_SEQ}
				, SYSDATE
				, SYSDATE
				, SYSDATE
		)
	</insert>

	<!-- 주문 배송지 정보 등록 -->
    <insert id="insertOrdDlvInfo" parameterType="hashmap">
  		INSERT INTO ORD_DLV_INFO( ORD_CD					<!-- 주문코드  -->
							, RCV_NM				<!-- 받는자명  -->
							, RCV_TEL				<!-- 받는자전화번호  -->
							, ZIP_CD				<!--  우편번호  -->
							, JUSO_DORO				<!--  배송지 주소 -->
							, JUSO_JIBEN			<!--  배송지 주소 -->
							, JUSO_DTL				<!--  배송지 주소 상세 -->
							, REGIST_DT				<!--  등록일시  -->
							, UPDT_DT				<!--  수정일시  -->
						<if test="searchCd != null and searchCd != ''">
							, DLV_MSG				<!--  배송 메시지  -->
						</if>
		)VALUES ( #{ORD_CD}
				, #{RCV_NM}
				, #{TEL}
				, #{ZIP_CD}
				, #{JUSO_DORO}
				, #{JUSO_JIBEN}
				, #{JUSO_DTL}
				, SYSDATE
				, SYSDATE
			<if test="searchCd != null and searchCd != ''">
				, #{MEMO}
			</if>
		)
	</insert>

	<!-- 주문 상품 정보 등록 -->
    <insert id="insertOrdProdInfo" parameterType="hashmap"  useGeneratedKeys="true" keyProperty="PROD_SEQ" keyColumn="PROD_SEQ">
  		INSERT INTO ORD_PROD_INFO( PROD_CODE				<!--  상품코드  -->
								, ORD_CD				<!--  주문코드  -->
								, PROD_SEQ				<!--  상품일련번호  -->
								, MBER_SEQ				<!--  회원일련번호  -->
								, PROD_TYPE_CD			<!--  상품구분코드  -->
								, PROC_STAT_CD			<!--  처리상태코드  -->
								, ORD_QTY				<!--  주문수량  -->
								, REGIST_DT				<!--  등록일시  -->
								, UPDT_DT				<!--  수정일시  -->
		)VALUES ( #{PROD_CODE}
				, #{ORD_CD}
				, #{PROD_SEQ}
				, #{MBER_SEQ}
				, #{PROD_TYPE_CD}
				, #{PROC_STAT_CD}
				, #{ORD_QTY}
				, SYSDATE
				, SYSDATE
		)
	</insert>

	<!-- 판매상품 옵션정보 등록 -->
	<insert id="insertProdOpInfo" parameterType="hashmap">

		INSERT INTO PROD_OP_INFO (
								  OPT_GRP_CD
								 ,PROD_CODE
								 ,USE_YN
								 ,OP_GB_CD
								 ,REGIST_DT
								 ,UPDT_DT
								)
						  VALUES (
								  (SELECT NVL(MAX(OPT_GRP_CD), 0) + 1 FROM PROD_OP_INFO)
								 ,#{prodCode}
								 ,#{useYn}
								 ,#{opGbCd}
								 ,SYSDATE
								 ,SYSDATE
						  		)

	</insert>

	<!-- 판매상품 정산 조회 -->
	<select id="selectSellAdjustHist" parameterType="hashmap" resultType="hashmap">

		SELECT ADJ.ORD_CD
		      ,ADJ.PROD_CD
		      ,ADJ.PROD_SEQ
		      ,ADJ.PROD_NM
		      ,(SELECT PROD_IMG_URL FROM PROD_IMG WHERE PROD_IMG_GB_CD = '11' AND PROD_CODE = ADJ.PROD_CD) AS PROD_IMG_URL
		      ,ADJ.SELL_PRCE
		      ,ADJ.SELL_PRCE_SUM
		      ,ADJ.OPT_PRCE_SUM
		      ,ADJ.ORD_QTY
		      ,ADJ.DLV_PRCE
		      ,ADJ.CMTN
		      ,ADJ.DNL_CMTN
		      ,ADJ.DNL_CMTN_RATE
		      ,ADJ.DNL_CMTN_RATE_NM
		      ,ADJ.BILL_CMTN
		      ,(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'SELT_GB_CD' AND COM_CD = ADJ.SELT_GB_CD) AS SELT_GB_CD_NM
		      ,(ADJ.DSCNT_CASH_AMT-ADJ.DSCNT_CASH_DNL_AMT)+(ADJ.DSCNT_RATE_AMT-ADJ.DSCNT_RATE_DNL_AMT) AS DSCNT_CPN_AMT
		      ,TO_CHAR(PCI.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS CONF_DATE
		      ,(
		        SELECT CI.MARKET_BURDEN
		          FROM ORD_PROD_INFO OPI, MBER_CPN_INFO MCI, CPN_INFO CI
		         WHERE OPI.PROD_CPN_CD = MCI.CPN_NO
		           AND MCI.CPN_GRP_CD = CI.CPN_GRP_CD
		           AND OPI.ORD_CD = ADJ.ORD_CD
		           AND OPI.PROD_CODE = ADJ.PROD_CD
		           AND OPI.PROD_SEQ = ADJ.PROD_SEQ
		      ) AS MARKET_BURDEN
		      ,ADJ.ADJ_AMT
		      ,ADJ.ADJ_STAT
		      ,TO_CHAR(TO_DATE(ADJ.ADJ_EXP_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS ADJ_EXP_YMD
      		  ,TO_CHAR(TO_DATE(ADJ.CHG_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS CHG_YMD
		  FROM ADJUST_HIST ADJ, PROD_BUY_CONF_INFO PCI
		 WHERE ADJ.ORD_CD = PCI.ORD_CD
		   AND ADJ.PROD_CD = PCI.PROD_CODE
		   AND ADJ.PROD_SEQ = PCI.PROD_SEQ
		   AND ADJ.ORD_CD = #{ordCd}
		   AND ADJ.PROD_CD = #{prodCode}
		   AND ADJ.PROD_SEQ = #{prodSeq}

	</select>

	<!-- 셰어링상품 정산 조회 -->
	<select id="selectShareAdjustHist" parameterType="hashmap" resultType="hashmap">

		SELECT ADJ.ORD_CD
		      ,ADJ.PROD_CD
		      ,ADJ.PROD_SEQ
		      ,ADJ.PROD_NM
		      ,(SELECT PROD_IMG_URL FROM PROD_IMG WHERE PROD_IMG_GB_CD = '11' AND PROD_CODE = ADJ.PROD_CD) AS PROD_IMG_URL
		      ,ADJ.ORD_QTY
		      ,ADJ.DEPOSIT
		      ,ADJ.SELL_PRCE
		      ,ADJ.SELL_PRCE_SUM
		      ,ADJ.SHARE_TERM
		      ,ADJ.DLV_PRCE
		      ,ADJ.CMTN
		      ,ADJ.DNL_CMTN
		      ,ADJ.DNL_CMTN_RATE
		      ,ADJ.DNL_CMTN_RATE_NM
		      ,ADJ.BILL_CMTN
		      ,OPI.SHARE_TERM AS PROC_SHARE_TERM
		      ,(SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'SELT_GB_CD' AND COM_CD = ADJ.SELT_GB_CD) AS SELT_GB_CD_NM
		      ,(DSCNT_CASH_AMT-DSCNT_CASH_DNL_AMT)+(DSCNT_RATE_AMT-DSCNT_RATE_DNL_AMT) AS DSCNT_CPN_AMT
		      ,TO_CHAR(INVC.DLV_END_DT, 'YYYY-MM-DD') AS SHARE_START_DT
		      ,TO_CHAR(PCI.REGIST_DT, 'YYYY-MM-DD') AS CONF_DATE
		      ,TO_CHAR((INVC.DLV_END_DT + OPI.SHARE_TERM), 'YYYY-MM-DD') AS SHARE_END_DT
		      ,ROUND((SYSDATE - INVC.DLV_END_DT)) AS SHARE_USE_DT
		      ,ROUND(((INVC.DLV_END_DT + OPI.SHARE_TERM) - SYSDATE)) AS SHARE_TRGT_DT
		      ,TO_CHAR(CRI.CHG_REG_DT, 'YYYY-MM-DD') AS RTN_REG_DT
		      ,ROUND((CRI.CHG_REG_DT - INVC.DLV_END_DT)) AS RTN_USE_DT
		      ,ADJ.ADJ_AMT
		      ,ADJ.ADJ_STAT
		      ,TO_CHAR(TO_DATE(ADJ.ADJ_EXP_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS ADJ_EXP_YMD
		      ,TO_CHAR(TO_DATE(ADJ.CHG_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS CHG_YMD
		      ,OPI.PROC_STAT_CD
		  FROM ADJUST_HIST ADJ, PROD_BUY_CONF_INFO PCI, INVC_INFO INVC, ORD_PROD_INFO OPI, CHG_PROD_INFO CPI, CHG_RTN_PROC_INFO CRI
		 WHERE ADJ.ORD_CD = PCI.ORD_CD
		   AND ADJ.PROD_CD = PCI.PROD_CODE
		   AND ADJ.PROD_SEQ = PCI.PROD_SEQ
		   AND ADJ.ORD_CD = INVC.ORD_CD
		   AND ADJ.PROD_CD = INVC.PROD_CODE
		   AND ADJ.PROD_SEQ = INVC.PROD_SEQ
		   AND ADJ.ORD_CD = OPI.ORD_CD
		   AND ADJ.PROD_CD = OPI.PROD_CODE
		   AND ADJ.PROD_SEQ = OPI.PROD_SEQ
		   AND ADJ.ORD_CD = CPI.ORD_CD(+)
		   AND ADJ.PROD_CD = CPI.PROD_CODE(+)
		   AND ADJ.PROD_SEQ = CPI.PROD_SEQ(+)
		   AND CPI.CHG_CD = CRI.CHG_CD(+)
		   AND ADJ.ORD_CD = #{ordCd}
		   AND ADJ.PROD_CD = #{prodCode}
		   AND ADJ.PROD_SEQ = #{prodSeq}

	</select>
		          	<!-- 상품문의 조회 -->
	<select id="selectProdQnaInfo" parameterType="hashmap" resultType="hashmap">
		 SELECT BOARD_TYPE_CD, PROD_CODE, ANS_GB_CD, TO_CHAR(MBER_SEQ) AS RCV_MBER_SEQ
           FROM BOARD_INFO
          WHERE BOARD_SEQ = #{boardSeq}
	</select>
	<!-- 주문상품 내역 조회 -->
	<select id="procOrderSearchMain" parameterType="hashmap" resultType="hashmap">
		SELECT O.MBER_SEQ
		     , NVL(B.CNT_1, 0) AS SHA_ORD_CNT /* 셰어링 주문건수조회 */
		     , NVL(C.CNT_2, 0) AS SHA_RTN_EXC_CNT /* 셰어링 교환건수조회 */
		     , NVL(D.CNT_3, 0) AS SHA_RTN_CNT /* 쉐어링 반품건수조회 */
		     , NVL(E.CNT_4, 0) AS SHA_CANCEL_CNT /* 쉐어링 취소건수조회 */
		     , NVL(F.CNT_5, 0) AS SALE_ORD_CNT /* 판매 주문건수조회 */
		     , NVL(G.CNT_6, 0) AS SALE_RTN_EXC_CNT /* 판매 교환건수조회 */
		     , NVL(H.CNT_7, 0) AS SALE_RTN_CNT /* 판매 반품건수조회 */
		     , NVL(I.CNT_8, 0) AS SALE_CANCEL_CNT /* 판매 취소건수조회 */
		     , NVL(J.CNT_9, 0) AS NANUM_CNT /* 나눔 건수조회 */
		  FROM MBER_INFO O LEFT OUTER JOIN ( /* 셰어링 주문건수조회 */
		          SELECT COUNT(1) AS CNT_1, #{MBER_SEQ} AS MBER_SEQ
		            FROM ORD_INFO OI ,ORD_PROD_INFO OPI ,PROD PI ,PROD_SHARING PS ,CODE CD ,PROD_IMG IMG, CHG_PROD_INFO CPI
		           WHERE OI.ORD_CD = OPI.ORD_CD
			AND OPI.PROD_CODE = PI.PROD_CODE
			AND PI.PROD_CODE = PS.PROD_CODE
			AND PI.PROD_CODE = IMG.PROD_CODE
			AND OPI.PROC_STAT_CD = CD.COM_CD
			AND OPI.ORD_CD = CPI.ORD_CD(+)
			AND OPI.PROD_CODE = CPI.PROD_CODE(+)
			AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
			AND PI.PROD_TYPE_CD = '2'
			AND PI.MBER_SEQ = #{MBER_SEQ}
			AND CD.GRP_CD = 'PROC_STAT_CD'
			AND IMG.PROD_IMG_GB_CD = '11'
			AND OPI.PROC_STAT_CD IN ('10', '21', '22', '23', '85', '86', '87', '88', '89')
		     ) B ON O.MBER_SEQ = B.MBER_SEQ LEFT OUTER JOIN ( /* 셰어링 교환건수조회 */
		          SELECT COUNT(1) AS CNT_2, #{MBER_SEQ} AS MBER_SEQ
		            FROM ORD_INFO OI ,ORD_PROD_INFO OPI ,PROD PI ,PROD_SHARING PS ,CODE CD ,PROD_IMG IMG, CHG_PROD_INFO CPI
		           WHERE OI.ORD_CD = OPI.ORD_CD
			AND OPI.PROD_CODE = PI.PROD_CODE
			AND PI.PROD_CODE = PS.PROD_CODE
			AND PI.PROD_CODE = IMG.PROD_CODE
			AND OPI.PROC_STAT_CD = CD.COM_CD
			AND OPI.ORD_CD = CPI.ORD_CD(+)
			AND OPI.PROD_CODE = CPI.PROD_CODE(+)
			AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
			AND PI.PROD_TYPE_CD = '2'
			AND PI.MBER_SEQ = #{MBER_SEQ}
			AND CD.GRP_CD = 'PROC_STAT_CD'
			AND IMG.PROD_IMG_GB_CD = '11'
			AND OPI.PROC_STAT_CD IN ('41', '42', '43')
		     ) C ON O.MBER_SEQ = C.MBER_SEQ LEFT OUTER JOIN (/* 쉐어링 반품건수조회 */
		          SELECT COUNT(1) AS CNT_3, #{MBER_SEQ} AS MBER_SEQ
		            FROM ORD_INFO OI ,ORD_PROD_INFO OPI ,PROD PI ,PROD_SHARING PS ,CODE CD ,PROD_IMG IMG, CHG_PROD_INFO CPI
		           WHERE OI.ORD_CD = OPI.ORD_CD
			AND OPI.PROD_CODE = PI.PROD_CODE
			AND PI.PROD_CODE = PS.PROD_CODE
			AND PI.PROD_CODE = IMG.PROD_CODE
			AND OPI.PROC_STAT_CD = CD.COM_CD
			AND OPI.ORD_CD = CPI.ORD_CD(+)
			AND OPI.PROD_CODE = CPI.PROD_CODE(+)
			AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
			AND PI.PROD_TYPE_CD = '2'
			AND PI.MBER_SEQ = #{MBER_SEQ}
			AND CD.GRP_CD = 'PROC_STAT_CD'
			AND IMG.PROD_IMG_GB_CD = '11'
			AND OPI.PROC_STAT_CD IN ('31', '32', '33')
		     ) D ON O.MBER_SEQ = D.MBER_SEQ LEFT OUTER JOIN (/* 쉐어링 취소건수조회 */
		          SELECT COUNT(1) AS CNT_4, #{MBER_SEQ} AS MBER_SEQ
		            FROM ORD_INFO OI ,ORD_PROD_INFO OPI ,PROD PI ,PROD_SHARING PS ,CODE CD ,PROD_IMG IMG, CHG_PROD_INFO CPI
		           WHERE OI.ORD_CD = OPI.ORD_CD
			AND OPI.PROD_CODE = PI.PROD_CODE
			AND PI.PROD_CODE = PS.PROD_CODE
			AND PI.PROD_CODE = IMG.PROD_CODE
			AND OPI.PROC_STAT_CD = CD.COM_CD
			AND OPI.ORD_CD = CPI.ORD_CD(+)
			AND OPI.PROD_CODE = CPI.PROD_CODE(+)
			AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
			AND PI.PROD_TYPE_CD = '2'
			AND PI.MBER_SEQ = #{MBER_SEQ}
			AND CD.GRP_CD = 'PROC_STAT_CD'
			AND IMG.PROD_IMG_GB_CD = '11'
			AND OPI.PROC_STAT_CD IN ('50')
		     ) E ON O.MBER_SEQ = E.MBER_SEQ LEFT OUTER JOIN ( /* 판매 주문건수조회 */
		          SELECT COUNT(1) AS CNT_5,  #{MBER_SEQ} AS MBER_SEQ
		           FROM ORD_INFO OI ,ORD_PROD_INFO OPI ,PROD PI ,CODE CD ,PROD_IMG IMG, CHG_PROD_INFO CPI
		          WHERE OI.ORD_CD = OPI.ORD_CD
			AND OPI.PROD_CODE = PI.PROD_CODE
			AND PI.PROD_CODE = IMG.PROD_CODE
			AND OPI.PROC_STAT_CD = CD.COM_CD
			AND OPI.ORD_CD = CPI.ORD_CD(+)
			AND OPI.PROD_CODE = CPI.PROD_CODE(+)
			AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
			AND PI.PROD_TYPE_CD = '1'
			AND PI.MBER_SEQ = #{MBER_SEQ}
			AND CD.GRP_CD = 'PROC_STAT_CD'
			AND IMG.PROD_IMG_GB_CD = '11'
			AND OPI.PROC_STAT_CD IN ('10', '21', '22', '23', '99')
		     ) F ON O.MBER_SEQ = F.MBER_SEQ LEFT OUTER JOIN ( /* 판매 교환건수조회 */
		          SELECT COUNT(1) AS CNT_6,  #{MBER_SEQ} AS MBER_SEQ
		           FROM ORD_INFO OI ,ORD_PROD_INFO OPI ,PROD PI ,CODE CD ,PROD_IMG IMG, CHG_PROD_INFO CPI
		          WHERE OI.ORD_CD = OPI.ORD_CD
			AND OPI.PROD_CODE = PI.PROD_CODE
			AND PI.PROD_CODE = IMG.PROD_CODE
			AND OPI.PROC_STAT_CD = CD.COM_CD
			AND OPI.ORD_CD = CPI.ORD_CD(+)
			AND OPI.PROD_CODE = CPI.PROD_CODE(+)
			AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
			AND PI.PROD_TYPE_CD = '1'
			AND PI.MBER_SEQ = #{MBER_SEQ}
			AND CD.GRP_CD = 'PROC_STAT_CD'
			AND IMG.PROD_IMG_GB_CD = '11'
			AND OPI.PROC_STAT_CD IN ('41', '42', '43')
		     ) G ON O.MBER_SEQ = G.MBER_SEQ LEFT OUTER JOIN (/* 판매 반품건수조회 */
		          SELECT COUNT(1) AS CNT_7,  #{MBER_SEQ} AS MBER_SEQ
		           FROM ORD_INFO OI ,ORD_PROD_INFO OPI ,PROD PI ,CODE CD ,PROD_IMG IMG, CHG_PROD_INFO CPI
		          WHERE OI.ORD_CD = OPI.ORD_CD
			AND OPI.PROD_CODE = PI.PROD_CODE
			AND PI.PROD_CODE = IMG.PROD_CODE
			AND OPI.PROC_STAT_CD = CD.COM_CD
			AND OPI.ORD_CD = CPI.ORD_CD(+)
			AND OPI.PROD_CODE = CPI.PROD_CODE(+)
			AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
			AND PI.PROD_TYPE_CD = '1'
			AND PI.MBER_SEQ = #{MBER_SEQ}
			AND CD.GRP_CD = 'PROC_STAT_CD'
			AND IMG.PROD_IMG_GB_CD = '11'
			AND OPI.PROC_STAT_CD IN ('31', '32', '33')
		   ) H ON O.MBER_SEQ = H.MBER_SEQ LEFT OUTER JOIN (/* 판매 취소건수조회 */
		          SELECT COUNT(1) AS CNT_8,  #{MBER_SEQ} AS MBER_SEQ
		           FROM ORD_INFO OI ,ORD_PROD_INFO OPI ,PROD PI ,CODE CD ,PROD_IMG IMG, CHG_PROD_INFO CPI
		          WHERE OI.ORD_CD = OPI.ORD_CD
			AND OPI.PROD_CODE = PI.PROD_CODE
			AND PI.PROD_CODE = IMG.PROD_CODE
			AND OPI.PROC_STAT_CD = CD.COM_CD
			AND OPI.ORD_CD = CPI.ORD_CD(+)
			AND OPI.PROD_CODE = CPI.PROD_CODE(+)
			AND OPI.PROD_SEQ = CPI.PROD_SEQ(+)
			AND PI.PROD_TYPE_CD = '1'
			AND PI.MBER_SEQ = #{MBER_SEQ}
			AND CD.GRP_CD = 'PROC_STAT_CD'
			AND IMG.PROD_IMG_GB_CD = '11'
			AND OPI.PROC_STAT_CD IN ('50')
		   ) I ON O.MBER_SEQ = I.MBER_SEQ LEFT OUTER JOIN (
		       SELECT COUNT(*) CNT_9, #{MBER_SEQ} AS MBER_SEQ
		         FROM (
		              SELECT X.CNT AS CNT
		                   , X.PROD_CODE AS PROD_CODE
		                   , X.PROD_NM AS PROD_NM
		                   , X.PROD_TYPE_CD AS PROD_TYPE_CD
		                   , X.DLV_WAY_CD AS DLV_WAY_CD
		                   , X.FREESHARE_START_DT AS FREESHARE_START_DT
		                   , X.FREESHARE_END_DT AS FREESHARE_END_DT
		                   , OPI.ORD_CD AS ORD_CD
		                   , OPI.REGIST_DT AS ORD_REGIST_DT
		                   , NVL(OPI.PROC_STAT_CD, '97') AS PROC_STAT_CD
		                   , OPI.PROD_SEQ AS PROD_SEQ
		                   , IMG.PROD_IMG_URL
		                FROM (
		                     SELECT COUNT(PI.PROD_CODE) AS CNT
		                          , PI.PROD_CODE
		                          , PI.PROD_NM AS PROD_NM
		                          , PI.PROD_TYPE_CD AS PROD_TYPE_CD
		                          , PI.DLV_WAY_CD AS DLV_WAY_CD
		                          , PI.REGIST_DT AS FREESHARE_START_DT
		                          , PI.FREESHARE_END_DT AS FREESHARE_END_DT
		                       FROM PROD PI
		                          , PROD_SUBMIT_INFO PSI
		                      WHERE PI.PROD_CODE = PSI.PROD_CODE
		                        AND PI.PROD_TYPE_CD = '3'
		                        AND PI.MBER_SEQ = #{MBER_SEQ}
		                      GROUP BY PI.PROD_CODE
		                          , PI.PROD_NM
		                          , PI.PROD_TYPE_CD
		                          , PI.DLV_WAY_CD
		                          , PI.REGIST_DT
		                          , PI.FREESHARE_END_DT
		                   ) X LEFT OUTER JOIN ORD_PROD_INFO OPI ON X.PROD_CODE = OPI.PROD_CODE LEFT OUTER JOIN PROD_IMG IMG ON X.PROD_CODE = IMG.PROD_CODE
		                 AND IMG.PROD_IMG_GB_CD = '11'
		                 <!--  주석처리 이부분이 왜 있을까? 응? 동일데이터 두번나오는데.
		               UNION
		              SELECT 0 AS CNT
		                   , PI.PROD_CODE AS PROD_CODE
		                   , PI.PROD_NM AS PROD_NM
		                   , PI.PROD_TYPE_CD AS PROD_TYPE_CD
		                   , PI.DLV_WAY_CD AS DLV_WAY_CD
		                   , PI.REGIST_DT AS FREESHARE_START_DT
		                   , PI.FREESHARE_END_DT AS FREESHARE_END_DT
		                   , OPI.ORD_CD AS ORD_CD
		                   , OPI.REGIST_DT AS ORD_REGIST_DT
		                   , OPI.PROC_STAT_CD AS PROC_STAT_CD
		                   , OPI.PROD_SEQ AS PROD_SEQ
		                   , IMG.PROD_IMG_URL
		                FROM PROD PI INNER JOIN ORD_PROD_INFO OPI ON PI.PROD_CODE = OPI.PROD_CODE LEFT OUTER JOIN PROD_IMG IMG ON PI.PROD_CODE = IMG.PROD_CODE
		                 AND IMG.PROD_IMG_GB_CD = '12'
		               WHERE PI.PROD_TYPE_CD = '3'
		                 AND PI.MBER_SEQ = #{MBER_SEQ}
		                  -->
		            )
		        WHERE 1=1
		          AND PROC_STAT_CD IN ('22', '23', '95', '96', '97' )
		     ) J ON O.MBER_SEQ = J.MBER_SEQ
		 WHERE O.MBER_SEQ = #{MBER_SEQ}
	</select>

		<!-- 나눔수락여부 체크 -->
	<select id="checkFreeConfirm" parameterType="hashmap" resultType="int">

		SELECT COUNT(1)
		  FROM ORD_PROD_INFO
		 WHERE PROD_CODE = #{prodCode}
	</select>

	<update id="updateGrpProdInfoRegAll" parameterType="hashmap">
		UPDATE 	GRP_PROD_INFO
		   SET 	BASE_YN = 'N'
		 WHERE 	MBER_SEQ = #{MBER_SEQ}
	</update>

	<!-- 상품별 출하지 조회 -->
	<select id="selectRelDevInfo" parameterType="hashmap" resultType="hashmap">

		SELECT
			DLV_CMP_CD,
			(
				SELECT COM_CD_NM FROM CODE WHERE GRP_CD='DLV_CMP_CD' AND COM_CD = REL_DLV_INFO.DLV_CMP_CD
			) AS DLV_CMP_NM
		FROM REL_DLV_INFO
	</select>
	
	<!-- 사용자 카테고리코드  -->
	<select id="selectUsrCtryCd" resultType="String">
		SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'SITE_DEFAULT' AND COM_CD = 'CTRY_TEMP'
	</select>
	
	
	<!-- 11~16 이미지 삭제 -->
	<delete id="deleteProdInfoV2" parameterType="String">
		DELETE 	FROM PROD_IMG
		 WHERE 	PROD_CODE = #{prodCode}
		   AND 	PROD_IMG_GB_CD IN ('11','12','13','14','15','16')
	</delete>

	<!-- 상품별 출하지 조회 -->
	<select id="selectProdStat" parameterType="String" resultType="String">
		SELECT 	PROD_STAT_CD 
		  FROM 	PROD
		 WHERE 	PROD_CODE = #{PRODCODE}
	</select>
		
	
	
</mapper>