package com.ssocio.sharing.controller.mobile;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.openmarket.common.Constant;
import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.service.web.MobileCpnPointService;
import com.ssocio.sharing.vo.web.WebSession;



/**
 * <pre>
 * 메인 컨트롤러
 * 메인 처리를 위한 컨트롤러
 * @author S.B.LEE
 * @version
 * @since 2015. 8. 14. 오후 1:52:33
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 8. 14.	|	SEOKBAE	|신규
 * @비고
 * </pre>
 */
@Controller
public class MobileCpnPointController extends MobileReferController {

	// --------------------------------------------------------------------------
		// # Log 설정
		// --------------------------------------------------------------------------
		@SuppressWarnings ("unused")
		private static final Logger logger = LoggerFactory.getLogger(MobileCpnPointController.class);

		// --------------------------------------------------------------------------
		// # Service 설정
		// --------------------------------------------------------------------------
		@Autowired
		private MobileCpnPointService mobileCpnPointService;




		@RequestMapping("/mobile/cpnPoint/insertCpn.do")
		public ModelAndView sessionChek(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE insertCpn START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("jsonView");

			try {

				HttpSession session  = request.getSession();
				session.getAttribute("user");
				WebSession webSession = (WebSession) session.getAttribute("user");
				
				List<String> cpnGbCdList = new ArrayList<String>();
				cpnGbCdList.add(Constant.CPN_PROD_DSCNT); // 상품할인쿠폰
				cpnGbCdList.add(Constant.CPN_DELY_DSCNT); // 배송비쿠폰
				
				inParam.put("MBER_SEQ", webSession.getMBER_SEQ());
				inParam.put("cpn_gb_cd_arr", cpnGbCdList);
				
				inParam = mobileCpnPointService.insertCpn(inParam);

			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}

		@RequestMapping("/mobile/myInfo/selectCpnList.do")
		public ModelAndView selectCpnList(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE confirmPhonView START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/myPage/selectCpnList");
			LoggerUtil.writeMap(inParam);

			try {

				HttpSession session  = request.getSession();
				session.getAttribute("user");
				WebSession webSession = null;
				webSession= (WebSession) session.getAttribute("user");
				inParam.put("MBER_SEQ", webSession.getMBER_SEQ());

				System.out.println("webSession.getMBER_SEQ()-->" + webSession.getMBER_SEQ());

				mav.addObject("list", mobileCpnPointService.selectCpnList(inParam));

			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}


		@RequestMapping("/mobile/myInfo/selectCpnUseList.do")
		public ModelAndView selectCpnUseList(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE selectCpnUseList START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/myPage/selectCpnUseList");
			LoggerUtil.writeMap(inParam);

			try {

				HttpSession session  = request.getSession();
				session.getAttribute("user");
				WebSession webSession = null;
				webSession= (WebSession) session.getAttribute("user");
				inParam.put("MBER_SEQ", webSession.getMBER_SEQ());

				mav.addObject("list", mobileCpnPointService.selectCpnUseList(inParam));

			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}


		@RequestMapping("/mobile/myInfo/selectPointList.do")
		public ModelAndView selectPointList(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE selectPointList START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("web/myPage/selectPointList");
			LoggerUtil.writeMap(inParam);

			try {

				HttpSession session  = request.getSession();
				session.getAttribute("user");
				WebSession webSession = null;
				webSession= (WebSession) session.getAttribute("user");
				inParam.put("MBER_SEQ", webSession.getMBER_SEQ());

				mav.addObject("list", mobileCpnPointService.selectPointList(inParam));

			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}


		@RequestMapping("/mobile/myInfo/cpnCheck.do")
		public ModelAndView cpnCheck(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
			logger.info("★☆★☆★☆★☆★☆★☆★MOBILE selectEamilChek START☆★☆★☆★☆★☆★☆");
			ModelAndView mav = new ModelAndView("jsonView");
			String result="";
			try {

				HttpSession session  = request.getSession();
				session.getAttribute("user");
				WebSession webSession = null;
				webSession= (WebSession) session.getAttribute("user");
				inParam.put("MBER_SEQ", webSession.getMBER_SEQ());

				result = mobileCpnPointService.cpnCheck(inParam);
			
				mav.addObject("result", result);
			} catch (Exception e) {
				e.printStackTrace();
			}
			return mav;
		}




}
