package com.ssocio.sharing.dao.seller;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.dao.DataAccessException;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.cmmn.web.RspnsCnst;
import com.ssocio.sharing.vo.seller.SellerSession;

/**
 * <pre>
 * 공통 Dao
 * 공통 처리 Dao
 * @author S.B.LEE
 * @version
 * @since 2015. 6. 22.. 오후 4:24:10
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 6. 22.	|	S.B.LEE	|신규
 * @쌔애
 * </pre>
 */
@Component
public class SellerFindDao {
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(SellerFindDao.class);
	
	// --------------------------------------------------------------------------
	// # sqlSession 설정
	//   -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
	//   -- 하나만 사용할 경우 @Autowired
	// --------------------------------------------------------------------------
	@Resource(name="sqlSessionSeller")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	/**
	 * <pre>
	 * 아이디를 검색 한다
	 * @param paramDto
	 * @return
	 * @throws DataAccessException
	 * @exception
	 * @date 2015. 6. 22. 오후 4:26:25
	 * @author SEOKBAE
	 * @see com.ssocio.sharing.seller.dao
	 * @비고
	 * 
	 * </pre>
	 */
	public List<SellerSession> selectIndivFindId(Map<String, Object> inParam) throws DataAccessException {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectIndivFindId Start");
		return  sqlSession.selectList("sellerFindMapper.selectIndivFindId", inParam);
	}
	
	public List<SellerSession>  selectBusiFindId(Map<String, Object> inParam) throws DataAccessException {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectBusiFindId Start");
		return sqlSession.selectList("sellerFindMapper.selectBusiFindId", inParam);
	}
	
	
	/**
	 * <pre>
	 * 비밀번호 찾기를 검색 한다
	 * @param paramDto
	 * @return
	 * @throws DataAccessException
	 * @exception
	 * @date 2015. 6. 22. 오후 4:26:25
	 * @author SEOKBAE
	 * @see com.ssocio.sharing.seller.dao
	 * @비고
	 * 
	 * </pre>
	 */
	public SellerSession selectIndivFindPw(Map<String, Object> inParam) throws DataAccessException {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectIndivFindPw Start");
		return (SellerSession)sqlSession.selectOne("sellerFindMapper.selectIndivFindPw", inParam);
	}
	
	public SellerSession selectBusiFindPw(Map<String, Object> inParam) throws DataAccessException {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectBusiFindPw Start");
		return (SellerSession)sqlSession.selectOne("sellerFindMapper.selectBusiFindPw", inParam);
	}
	
	
	/**
	 * <pre>
	 * 임시 비밀번호 업데이트
	 * @param paramDto
	 * @return
	 * @throws DataAccessException
	 * @exception
	 * @date 2015. 6. 22. 오후 4:26:25
	 * @author SEOKBAE
	 * @see com.ssocio.sharing.seller.dao
	 * @비고
	 * 
	 * </pre>
	 */
	public int updatePass(Map<String, Object> inParam) throws Exception {
		int ret =0;
		logger.info("updatePass Start");
			ret = sqlSession.update("sellerFindMapper.updatePass", inParam);

		
		return ret;
	}
	
	public String selectsiteIFUrl() throws Exception {
		return sqlSession.selectOne("sellerFindMapper.selectsiteIFUrl");
	}
	
}
