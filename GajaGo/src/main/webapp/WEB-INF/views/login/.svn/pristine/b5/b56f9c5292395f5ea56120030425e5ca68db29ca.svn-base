/* ======================================================================
Function : 이메일 유효성 체크
Return   : false
========================================================================= */
function emailValid(emailVal) {
	
	var regex=/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/;
	if(emailVal.length < 1) {
		alert("이메일을 입력해 주세요.");
		return false;
	}
	
	if(regex.test(emailVal) === false) {
		alert("유효하지 않는 이메일 형식 입니다.");
		return false;
	} else {
		return true;
	}
	
}

/* ======================================================================
Function : save cookie (auto login)
Return   : false
========================================================================= */
function setCookie(cEmail, cPass, cAuto){
	$.cookie(cEmail, this.MBER_EMAIL, { expires: 60, path: '/mobile' });
	$.cookie(cPass, this.MBER_PASS, { expires: 60, path: '/mobile' });
	$.cookie(cAuto, this.MBER_AUTO_LOGIN, { expires: 60, path: '/mobile' });
}

/* ======================================================================
Function : remove cookie (auto login)
Return   : false
========================================================================= */
function removeCookie(cEmail, cPass, cAuto){
	$.removeCookie(cEmail, { path: '/mobile' });
	$.removeCookie(cPass, { path: '/mobile' });
	$.removeCookie(cAuto, { path: '/mobile' });
}

/* ======================================================================
Function : save cookie (ID SAVE)
Return   : false
========================================================================= */
function setIdCookie(cEmail, cIdSave){
	$.cookie(cEmail, this.MBER_EMAIL, { expires: 60, path: '/mobile' });
	$.cookie(cIdSave, this.MBER_ID_SAVE, { expires: 60, path: '/mobile' });
}

/* ======================================================================
Function : remove cookie (ID SAVE)
Return   : false
========================================================================= */
function removeIdCookie(cEmail, cIdSave){
	$.removeCookie(cEmail, { path: '/mobile' });
	$.removeCookie(cIdSave, { path: '/mobile' });
}

/* ======================================================================
Function : save cookie (ID SAVE)
Return   : false
========================================================================= */
function setSnsCookie(cInit, cMid, cAuto){
	$.cookie(cInit, this.SNS_INIT, { expires: 60, path: '/mobile' });
	$.cookie(cMid, this.SNS_MBER_ID, { expires: 60, path: '/mobile' });
	$.cookie(cAuto, this.MBER_AUTO_LOGIN, { expires: 60, path: '/mobile' });
}

/* ======================================================================
Function : remove cookie (ID SAVE)
Return   : false
========================================================================= */
function removeSnsCookie(cInit, cMid, cAuto){
	$.removeCookie(cInit, { path: '/mobile' });
	$.removeCookie(cMid, { path: '/mobile' });
	$.removeCookie(cAuto, { path: '/mobile' });
}

/* ======================================================================
Function : 문자열의 byte length 얻기
Return   : 
========================================================================= */
function getByteLength(str) {
	if (str == "") {
		return	0;
	}

	var len = 0;

	for (var i = 0; i < str.length; i++) {
		if (str.charCodeAt(i) > 128) {
			len++;
		}
		len++;
	}

	return	len;
}

/* ======================================================================
Function : 숫자만입력받기
Return   : 
========================================================================= */
function numberOnly(obj){
	var pattern = /^[0-9+]*$/;
	if(!pattern.test($(obj).val())){
		$(obj).val($(obj).val().replace(/[^0-9]/ig, ""));
	}
	if($(obj).hasClass("ip")){
	    if($(obj).val() > 255){
	      alert("잘못된 IP주소입니다.");
	      $(obj).focus();
	    }
    }else if($(obj).hasClass("numType")){
    	if($(obj).val() != "" && $(obj).val() != "0"){
    		$(obj).val(Number($(obj).val()));
    	}
    }
	
	return false;
}

/* ======================================================================
Function : null check
Return   : 
========================================================================= */
function gf_isNull(sValue) {
    if( new String(sValue).valueOf() == "undefined") 
        return true;
    if( sValue == null )
        return true;
    if( ("x"+sValue == "xNaN") && ( new String(sValue.length).valueOf() == "undefined" ) )
        return true;
    if( sValue.length == 0 )
        return true;
    return false;
}


function popup(url,pop_tit,width,height){
	window.open(url,pop_tit,'width='+width+', height='+height+', toolbar=no, menubar=no, scrollbars=yes, resizable=no');
}

/* ================================================================== */
/* Description : Date Format.                                         */
/* Parameter   : str : 포맷                                                  */ 
/* ================================================================== */
String.prototype.dateFormat = function(str) {
	if(this == null || this == "") return true;
    var yyyymmdd = this.replace(/[-.,]/gi, "");
    
    var y = yyyymmdd.substring(0, 4);
    var m = yyyymmdd.substring(4, 6);
    var d = yyyymmdd.substring(6, 8);
    var strDate = y+str+m+str+d;
    	
    return strDate;
}

/* ================================================================== */
/* Description : 만 14세 나이 계산                                                     */
/* Parameter   : 생년월일 : 19800101                                   */
/* ================================================================== */
var age = {
	check14 : function (yyyymmdd){
		var today = this.get_today();
		var result = today - parseInt(yyyymmdd) - 140000;
		return result;//if(result < 0) less than 14 
	},
	get_today : function (){
		now        = new Date();
		year       = now.getFullYear();
		month      = now.getMonth()+1;
		day        = now.getDate();
		if(month < 10) month = "0"+month;
		if(day < 10) day = "0"+day;
		return year+''+month+''+day;
	}
}