package com.ssocio.sharing.controller.admin;

import java.io.PrintWriter;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import com.ssocio.sharing.cmmn.admin.util.HttpUrlConnectionUtil;
import com.ssocio.sharing.cmmn.util.JsonUtil;
import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.util.StringUtil;
import com.ssocio.sharing.service.admin.AdminAutoSmsService;

/**
 * <pre>
 * 발송관리  Controller
 * 자동 메시지 발송 리스트 / 수정/ 등록 기능을 위한 Controller
 * @author guitarhyo
 * @version
 * @since 2015. 7. 13. 오후 
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 13	|	guitarhyo	|신규
 * @비고
 * </pre>
 */
@Controller
public class AdminAutoSmsController extends AdminReferController {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminAutoSmsController.class);
	
	// --------------------------------------------------------------------------
	// # Service 설정
	// --------------------------------------------------------------------------
	@Autowired
	private AdminAutoSmsService adminAutoSmsService;


	/**
	 * <pre>
	 * > 자동 메시지 발송 조회 리스트
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/autosms/selectListAutoSms.do")
	public ModelAndView selectListAutoSms(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN selectListAutoSms START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		
		try {
			inParam.put("TPL_GB_CD", StringUtil.nvl((String)inParam.get("TPL_GB_CD"), "00"));
			mav.addObject("TPL_GB_CD", (String)inParam.get("TPL_GB_CD"));
			mav.addObject("list", adminAutoSmsService.selectListAutoSms(inParam));
			System.out.println(mav);
			mav.setViewName("admin/autosms/selectListAutoSms");
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN selectListAutoSms END☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}
	
	
	/**
	 * <pre>
	 * > 자동 메시지 발송 상세
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/autosms/selectAutoSms.do")
	public ModelAndView selectAutoSms(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  selectAutoSms  START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		
		try {
			String TPL_GB_CD = StringUtil.nvl((String)inParam.get("TPL_GB_CD"), "00");
			mav.addObject("list", adminAutoSmsService.selectAutoSms(inParam));
			inParam.put("TPL_GB_CD", TPL_GB_CD);
			mav.addObject("TPL_GB_CD", (String)inParam.get("TPL_GB_CD"));
			mav.addObject("params", inParam);
			System.out.println(mav);
			if("00".equals(TPL_GB_CD)){
				mav.setViewName("admin/autosms/selectAutoSms");
			}else if("01".equals(TPL_GB_CD)){
				mav.setViewName("admin/autosms/selectAutoEmail");
			}else {
				mav.setViewName("admin/autosms/selectAutoPush");
			}
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN selectAutoSms ENDT☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}
	
	/**
	 * <pre>
	 * > 메시지 발송 취소 업데이트
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 20. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/autosms/updateAutoSms.do")
	public @ResponseBody String updateAutoSms( HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		String retCode ="F";
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  updateAutoSms  START☆★☆★☆★☆★☆★☆★☆");
		
		ModelMap modelMap = new ModelMap();
		LoggerUtil.writeMap(inParam);
		
		try {
			modelMap = adminAutoSmsService.updateAutoSms(inParam);
			
			retCode = (String) modelMap.get("retCode");
			if(retCode == null){
				retCode ="F";
			}
			logger.debug(modelMap.toString());
		
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  updateAutoSms  END☆★☆★☆★☆★☆★☆★☆");
		
		return retCode;

	}
	
	/**
	 * <pre>
	 * > 자동 메시지 발송 등록 메시지
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/autosms/insertAutoSms.do")
	public ModelAndView insertAutoSms(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  insertAutoSms  START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		
		try {

			inParam.put("TPL_GB_CD", StringUtil.nvl((String)inParam.get("TPL_GB_CD"), "00"));
			mav.addObject("TPL_GB_CD", (String)inParam.get("TPL_GB_CD"));
			System.out.println(mav);
			mav.setViewName("admin/autosms/insertAutoSms");
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN insertAutoSms ENDT☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}
	
	
	/**
	 * <pre>
	 * > 자동 메시지 발송 등록 이메일
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/autosms/insertAutoEmail.do")
	public ModelAndView insertAutoEmail(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  insertAutoEmail  START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		
		try {
			inParam.put("TPL_GB_CD", StringUtil.nvl((String)inParam.get("TPL_GB_CD"), "00"));
			mav.addObject("TPL_GB_CD", (String)inParam.get("TPL_GB_CD"));
			System.out.println(mav);
			mav.setViewName("admin/autosms/insertAutoEmail");
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN insertAutoEmail ENDT☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}
	
	
	/**
	 * <pre>
	 * > 자동 메시지 발송 등록 푸시
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/autosms/insertAutoPush.do")
	public ModelAndView insertAutoPush(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  insertAutoPush  START☆★☆★☆★☆★☆★☆★☆");

		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		
		try {

			inParam.put("TPL_GB_CD", StringUtil.nvl((String)inParam.get("TPL_GB_CD"), "00"));
			mav.addObject("TPL_GB_CD", (String)inParam.get("TPL_GB_CD"));
			System.out.println(mav);
			mav.setViewName("admin/autosms/insertAutoPush");
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN insertAutoPush ENDT☆★☆★☆★☆★☆★☆★☆");
		return mav;
	}
	
	
	/**
	 * <pre>
	 * > 메시지 발송 등록 페이지
	 * @param request
	 * @param response
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @exception
	 * @date 2015. 7. 13. 오후 
	 * @author guitarhyo
	 * @see com.ssocio.sharing.controller.admin
	 * @비고
	 * 
	 * </pre>
	*/
	@RequestMapping("/admin/autosms/insertAutoReg.do")
	public @ResponseBody String insertAutoReg(HttpServletRequest request, HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  insertAutoReg  START☆★☆★☆★☆★☆★☆★☆");

		ModelMap modelMap = new ModelMap();
		LoggerUtil.writeMap(inParam);
		String retCode ="F";
		try {

			modelMap = adminAutoSmsService.insertAutoReg(inParam);
			retCode = (String) modelMap.get("retCode");
			if(retCode == null){
				retCode ="F";
			}
			logger.debug(modelMap.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN insertAutoReg END☆★☆★☆★☆★☆★☆★☆");
		return retCode;
	}
	
	@RequestMapping("/admin/autosms/responsJsonHttp.do")
	public void responsJsonHttp( HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
//		public @ResponseBody String
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  responsJsonHttp  START☆★☆★☆★☆★☆★☆★☆");
		
		LoggerUtil.writeMap(inParam);
		JSONObject json = null;
		try {
			inParam.put("result", "SUCCESS");
			json = JsonUtil.getJsonfromMap(inParam);
			PrintWriter writer = response.getWriter();
			System.out.println(json.toString());
			writer.print(json.toString());
			writer.flush();
		    writer.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  responsJsonHttp  END☆★☆★☆★☆★☆★☆★☆");
//		return json.toString();
	

	}
	
	@RequestMapping("/admin/autosms/sendJsonHttp.do")
	public @ResponseBody String httpTest( HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{
		
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  httpTest  START☆★☆★☆★☆★☆★☆★☆");
		
		LoggerUtil.writeMap(inParam);
		String retStr = "";
		try {
//			$deviceToken = $_POST[token];
//			$message = $_POST[message];
//			$badge = intval ($_POST[badge]);
//			$sound = $_POST[sound];
//			$pushtype = $_POST[pushtype];

			inParam.put("token", "75b053ed56363c2f5c0cb1a641706bdc6614fb65cc376aba2e67c0841b92ee7a");

			inParam.put("message", "테스트입니다.");

			inParam.put("pushtype", "1");
			inParam.put("badge", "1");
			inParam.put("sound", "default");
			 retStr = HttpUrlConnectionUtil.callHttpURLConnectionPush("http://sso-app.ssocio.net:30080/IF_PUSH/apns.pilot.html", "POST", inParam);
			logger.debug(retStr);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		JSONObject json = JsonUtil.getJsonfromMap(inParam);
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  httpTest  END☆★☆★☆★☆★☆★☆★☆");
		return retStr;
	
		
	

	}
	
	
	@RequestMapping("/admin/autosms/httpTestPage.do")
	public ModelAndView httpTestPage( HttpServletResponse response, @RequestParam Map<String, Object> inParam) throws Exception{

		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  httpTestPage  START☆★☆★☆★☆★☆★☆★☆");


		ModelAndView mav = new ModelAndView();
		LoggerUtil.writeMap(inParam);
		
		try {

	
			System.out.println(mav);
			mav.setViewName("admin/test/testHttp");
		} catch (Exception e) {
			e.printStackTrace();
		}
		logger.info("☆★☆★☆★☆★☆★☆★☆ADMIN  httpTestPage  END☆★☆★☆★☆★☆★☆★☆");
		
		return mav;
	
		
		
	

	}
}
