package com.ssocio.sharing.dao.admin;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.cmmn.web.RspnsCnst;

/**
 * <pre>
 * 주문관리
 * 나눔상품주문관리를 위한 DAO
 * @author S.B.LEE
 * @version
 * @since 2015. 7. 16. 오후 3:35:32
 * @see
 * @History
 * Date			|	author	| 변경 내용
 * 2015. 7. 16.	|	S.B.LEE	|신규
 * @비고
 * </pre>
 */
@Component
public class AdminDivideOrderDao {
	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	private static final Logger logger = LoggerFactory.getLogger(AdminDivideOrderDao.class);
	
	// --------------------------------------------------------------------------
	// # sqlSession 설정
	//	 -- DataSource를 두개 쓰므로 @Resource(name="sqlSessionMySql") 사용
	//	 -- 하나만 사용할 경우 @Autowired
	// --------------------------------------------------------------------------
	@Resource(name="sqlSessionAdmin")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	/**
	 * <pre>
	 * 나눔 주문 리스트 총 카운트
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오후 8:04:15
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int selectListDivOrderCount(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListDivOrderCount Start");
		int outParam = 0;
		try {
			outParam =  sqlSession.selectOne("adminDivideOrderMapper.selectListDivOrderCount", inParam);
		} catch (Exception e) {
			logger.error("selectListDivOrderCount DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return outParam;
	}
	
	/**
	 * <pre>
	 * 나눔주문리스트
	 * 나눔주문리스트를 조회합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 16. 오후 3:39:40
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectListDivOrder(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListDivOrder Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminDivideOrderMapper.selectListDivOrder", inParam);
		} catch (Exception e) {
			logger.error("selectListDivOrder DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	/**
	 * <pre>
	 * 나눔 판매 주문 현황 건수 조회
	 * 나눔 판매 주문 현황 건수를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 16. 오후 5:48:46
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object> selectDivOrdStatCnt(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectDivOrdStatCnt Start");
		Map<String, Object> statCnt = null;
		try {
			statCnt =  sqlSession.selectOne("adminDivideOrderMapper.selectDivOrdStatCnt", inParam);
		} catch (Exception e) {
			logger.error("selectDivOrdStatCnt DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return statCnt;
	}
	
	/**
	 * <pre>
	 * 엑셀다운로드
	 * 
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 16. 오후 5:11:34
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectListDivOrdExcel(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectListDivOrdExcel Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminDivideOrderMapper.selectListDivOrdExcel", inParam);
		} catch (Exception e) {
			logger.error("selectListDivOrdExcel DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	/**
	 * <pre>
	 * 나눔 주문 상세 내역 리스트 조회
	 * 나눔 주문 상세 내역 리스트를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 16. 오후 6:06:53
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public List<Map<String, Object>> selectDivOrderDtl(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectDivOrderDtl Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminDivideOrderMapper.selectDivOrderDtl", inParam);
		} catch (Exception e) {
			logger.error("selectDivOrderDtl DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	
	/**
	 * <pre>
	 * 나눔 주문 결제 상세 정보 조회
	 * 나눔 주문 결제 상세 정보를 조회 합니다.
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 16. 오후 6:12:31
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public Map<String, Object> selectDivOrdSetlDtl(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("selectDivOrdSetlDtl Start");
		Map<String, Object> map = new HashMap<String, Object>();
		try {
			map.put("selectDivSetlDtl", sqlSession.selectOne("adminDivideOrderMapper.selectDivOrdSetlDtl", inParam));
		} catch (Exception e) {
			logger.error("selectDivOrdSetlDtl DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return map;
	}
	
	/**
	 * <pre>
	 * 주문 상태 변경
	 * 설명
	 * @param inParam
	 * @return
	 * @throws Exception
	 * @date 2015. 7. 17. 오전 11:03:41
	 * @author S.B.LEE
	 * @see com.ssocio.sharing.dao.admin
	 * </pre>
	 */
	public int updateDivOrderDtl(Map<String, Object> inParam) throws Exception {
		// ------------------------------------------------------------------------
		// # 시작로그
		// ------------------------------------------------------------------------
		logger.info("updateDivOrderDtl Start");
		int count = 0;
		try {
			count =  sqlSession.update("adminDivideOrderMapper.updateDivOrderDtl", inParam);
		} catch (Exception e) {
			logger.error("updateDivOrderDtl DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return count;
	}
}
