package com.ssocio.sharing.dao.admin;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.springframework.ui.ModelMap;

import com.ssocio.sharing.cmmn.util.LoggerUtil;
import com.ssocio.sharing.cmmn.web.RspnsCnst;

@Component
public class AdminPromoEvtDao {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------

	private static final Logger logger = LoggerFactory.getLogger(AdminPromoEvtDao.class);
	
	@Resource(name="sqlSessionAdmin")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}

	public String selectEvtSeq() throws Exception{
		logger.info("selectEvtSeq Start");
		String seq = "";
		try {
			seq =  sqlSession.selectOne("adminPromoEvtMapper.selectEvtInfoSeq");
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return seq;
	}
	
	public String selectEvtImgSeq() throws Exception{
		logger.info("selectEvtImgSeq Start");
		String seq = "";
		try {
			seq =  sqlSession.selectOne("adminPromoEvtMapper.selectEvtImgSeq");
		} catch (Exception e) {
			logger.error("selectListCpn DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return seq;
	}

	public void insertEvtInfo(ModelMap mm) throws Exception{
		
		logger.info("insertEvtInfo Start");		
		LoggerUtil.writeMap(mm);	
		try {
			  sqlSession.insert("adminPromoEvtMapper.insertEvtInfo",mm);
		} catch (Exception e) {
			logger.error("insertEvtInfo DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		
	}
	
	public void insertEvtImg(ModelMap mm) throws Exception{
		
		logger.info("insertEvtImg Start");		
		LoggerUtil.writeMap(mm);	
		try {
			  sqlSession.insert("adminPromoEvtMapper.insertEvtImg",mm);
		} catch (Exception e) {
			logger.error("insertEvtImg DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		
	}

	public int selectEvtCount(Map<String, Object> inParam) throws Exception {
		logger.info("selectEvtCount Start");
		int count = 0;
		try {
			count =  sqlSession.selectOne("adminPromoEvtMapper.selectEvtCount", inParam);
		} catch (Exception e) {
			logger.error("selectEvtCount DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return count;
	}
	
	public List<Map<String, Object>>  selectEvt(Map<String, Object> inParam)  throws Exception{
		logger.info("selectEvt Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminPromoEvtMapper.selectEvt", inParam);
		} catch (Exception e) {
			logger.error("selectEvt DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;	
	}
	
	public Map<String, Object> selectEvtDtl(String evtGrpCd) throws Exception{
		logger.info("selectEvtDtl Start");
		Map<String, Object> mm = null;
		try {
			mm =  sqlSession.selectOne("adminPromoEvtMapper.selectEvtDtl", evtGrpCd);
		} catch (Exception e) {
			logger.error("selectEvtDtl DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return mm;
	}

	public int selectEvtJoinMberCount(Map<String, Object> inParam) throws Exception{
		logger.info("selectEvtJoinMberCount Start");
		int count = 0;
		try {
			count =  sqlSession.selectOne("adminPromoEvtMapper.selectEvtJoinMberCount", inParam);
		} catch (Exception e) {
			logger.error("selectEvtJoinMberCount DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return count;
	}
	
	public List<Map<String, Object>>  selectEvtJoinMber(Map<String, Object> inParam)  throws Exception{
		logger.info("selectEvtJoinMber Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminPromoEvtMapper.selectEvtJoinMber", inParam);
		} catch (Exception e) {
			logger.error("selectEvtJoinMber DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;	
	}

	public List<Map<String, Object>> selectEvtJoinMberExcelDownload(Map<String, Object> inParam) throws Exception {

		logger.info("selectEvtJoinMberExcelDownload Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminPromoEvtMapper.selectEvtJoinMber", inParam);
		} catch (Exception e) {
			logger.error("selectEvtJoinMberExcelDownload DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}
	

	public int selectEvtWinMberCount(Map<String, Object> inParam) throws Exception{
		logger.info("selectEvtWinMberCount Start");
		int count = 0;
		try {
			count =  sqlSession.selectOne("adminPromoEvtMapper.selectEvtWinMberCount", inParam);
		} catch (Exception e) {
			logger.error("selectEvtWinMberCount DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return count;
	}
	
	public List<Map<String, Object>> selectEvtWinMberExcelDownload(Map<String, Object> inParam) throws Exception {

		logger.info("selectEvtWinMberExcelDownload Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminPromoEvtMapper.selectEvtWinMber", inParam);
		} catch (Exception e) {
			logger.error("selectEvtWinMberExcelDownload DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;
	}

	public  List<Map<String, Object>> selectEvtWinMber(Map<String, Object> inParam) throws Exception{
		logger.info("selectEvtWinMber Start");
		List<Map<String, Object>> list = null;
		try {
			list =  sqlSession.selectList("adminPromoEvtMapper.selectEvtWinMber", inParam);
		} catch (Exception e) {
			logger.error("selectEvtWinMber DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
		return list;	
	}

	public void updateEvtJoinMber(Map<String, Object> mm)throws Exception {
		logger.info("updateEvtJoinMber Start");		
		LoggerUtil.writeMap(mm);	
		try {
			  sqlSession.update("adminPromoEvtMapper.updateEvtJoinMber",mm);
		} catch (Exception e) {
			logger.error("updateEvtJoinMber DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}
	
	public void updateEvtWinMber(Map<String, Object> mm)throws Exception {
		logger.info("updateEvtWinMber Start");		
		LoggerUtil.writeMap(mm);	
		try {
			  sqlSession.update("adminPromoEvtMapper.updateEvtWinMber",mm);
		} catch (Exception e) {
			logger.error("updateEvtWinMber DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public void updateEvt(ModelMap mm) throws Exception{
		logger.info("updateEvt Start");		
		LoggerUtil.writeMap(mm);	
		try {
			  sqlSession.update("adminPromoEvtMapper.updateEvt",mm);
		} catch (Exception e) {
			logger.error("updateEvt DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public void updateEvtImg(ModelMap mm)throws Exception {
		logger.info("updateEvtImg Start");		
		LoggerUtil.writeMap(mm);	
		try {
			  sqlSession.update("adminPromoEvtMapper.updateEvtImg",mm);
		} catch (Exception e) {
			logger.error("updateEvtImg DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}

	public void updateEvtState(ModelMap mm) throws Exception{
		logger.info("updateEvtState Start");		
		LoggerUtil.writeMap(mm);	
		try {
			  sqlSession.update("adminPromoEvtMapper.updateEvtState",mm);
		} catch (Exception e) {
			logger.error("updateEvtState DB Error : " + e.toString());
			throw new Exception(RspnsCnst.RC1000000004);
		}
	}
	
}
