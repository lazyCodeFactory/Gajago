<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="webCtryMapper">
    <resultMap id="prodResultMap" type="hashmap">
        <id property="PROD_CODE"                column="PROD_CODE" />
        <result property="PROD_NM"              column="PROD_NM" />
        <result property="CTRY_CD"              column="CTRY_CD" />
        <result property="MBER_SEQ"             column="MBER_SEQ" />
        <result property="BRAND_CD"             column="BRAND_CD" />
        <result property="BRAND_NM"             column="BRAND_NM" />
        <result property="BRAND_FILE_URL"       column="BRAND_FILE_URL" />
        <result property="NPROD_GB_CD"          column="NPROD_GB_CD" />
        <result property="PROD_TYPE_CD"         column="PROD_TYPE_CD" />
        <result property="PROD_STAT_CD"         column="PROD_STAT_CD" />
        <result property="DLV_WAY_CD"           column="DLV_WAY_CD" />
        <result property="DLV_PAY_GB_CD"        column="DLV_PAY_GB_CD" />
        <result property="DLV_PRCE"             column="DLV_PRCE" />
        <result property="BNDL_DLV_YN"          column="BNDL_DLV_YN" />
        <result property="DLV_STAND_YN"         column="DLV_STAND_YN" />
        <result property="DLV_STAND_AMT"        column="DLV_STAND_AMT" />
        <result property="TRAD_LOC"             column="TRAD_LOC" />
        <result property="PROD_MB_DTL"          column="PROD_MB_DTL" jdbcType="CLOB" javaType="string"/>
        <result property="PROD_PC_DTL"          column="PROD_PC_DTL" jdbcType="CLOB" javaType="string"/>
        <result property="PROD_PC_DTL_USE_YN"   column="PROD_PC_DTL_USE_YN" />
        <result property="PROD_MB_DTL_USE_YN"   column="PROD_MB_DTL_USE_YN" />
        <result property="SELL_PRCE"            column="SELL_PRCE" />
        <result property="NRM_PRCE"             column="NRM_PRCE" />
        <result property="INVENTORY_QTY"        column="INVENTORY_QTY" />
        <result property="FREESHARE_OK_GB_CD"   column="FREESHARE_OK_GB_CD" />
        <result property="FREESHARE_END_DT"     column="FREESHARE_END_DT" />
        <result property="REGIST_DT"            column="REGIST_DT" />
        <result property="OPT_PROD_YN"          column="OPT_PROD_YN" />
        <result property="OPT_PROD_EXT_YN"      column="OPT_PROD_EXT_YN" />
        <result property="OPT_BUY_GB_CD"        column="OPT_BUY_GB_CD" />
        <result property="NPROD_GB_NM"          column="NPROD_GB_NM" />
        <result property="PROD_TYPE_NM"         column="PROD_TYPE_NM" />
        <result property="PROD_STAT_NM"         column="PROD_STAT_NM" />
        <result property="PROD_ITEM_CODE"       column="PROD_ITEM_CODE" />
        <result property="DLV_WAY_NM"           column="DLV_WAY_NM" />
        <result property="DLV_PAY_GB_NM"        column="DLV_PAY_GB_NM" />
        <result property="MINI_SHOP_NM"         column="MINI_SHOP_NM" />
        <result property="MINI_SHOP_FILE_URL"   column="MINI_SHOP_FILE_URL" />
        <result property="MBER_GB_CD"           column="MBER_GB_CD" />
        <result property="PS_PRCE"              column="PS_PRCE" />
        <result property="PS_DEPOSIT"           column="PS_DEPOSIT" />
        <result property="PS_MIN_ITEM"          column="PS_MIN_ITEM" />
        <result property="PS_MAX_ITEM"          column="PS_MAX_ITEM" />
        <result property="PS_START_DT"          column="PS_START_DT" />
        <result property="PS_END_DT"            column="PS_END_DT" />
        <result property="PROD_THUMB_URL"       column="PROD_THUMB_URL"/>
        <result property="KAKAO_FILE_SEQ"       column="KAKAO_FILE_SEQ"/>
        <result property="WISH_PROD_CNT"        column="WISH_PROD_CNT"/>

        <collection property="extLands"         javaType="java.util.ArrayList" ofType="java.util.HashMap">
            <id property="EXT_LAND_CD"          column="EXT_LAND_CD"/>
            <result property="ADD_DLV_PRICE"    column="ADD_DLV_PRICE"/>
        </collection>
        <collection property="options"          javaType="java.util.ArrayList" ofType="java.util.HashMap">
            <id property="OPT_GRP_CD"           column="OPT_GRP_CD" />
            <result property="OP_GR_CD"         column="OP_GB_CD" />
        </collection>
        <collection property="images"           javaType="java.util.ArrayList" ofType="java.util.HashMap">
            <id property="PROD_FILE_SEQ"        column="PROD_FILE_SEQ" />
            <result property="PROD_IMG_URL"     column="PROD_IMG_URL" />
            <result property="PROD_IMG_GB_CD"   column="PROD_IMG_GB_CD" />
        </collection>
    </resultMap>

    <resultMap id="prodSummaryResultMap" type="hashmap">
        <id property="PROD_CODE"                column="PROD_CODE" />
        <result property="PROD_NM"              column="PROD_NM" />
        <result property="PROD_TYPE_CD"         column="PROD_TYPE_CD" />
        <result property="CTRY_CD"              column="CTRY_CD" />
        <result property="PARENT_CTRY_CD"       column="PARENT_CTRY_CD" />
        <result property="MBER_SEQ"             column="MBER_SEQ" />
        <result property="MBER_GB_CD"           column="MBER_GB_CD" />
        <result property="SELL_PRCE"            column="SELL_PRCE" />
        <result property="NRM_PRCE"             column="NRM_PRCE" />
        <result property="DLV_WAY_CD"           column="DLV_WAY_CD" />
        <result property="DLV_PAY_GB_CD"        column="DLV_PAY_GB_CD" />
        <result property="DLV_PRCE"             column="DLV_PRCE" />
        <result property="BNDL_DLV_YN"          column="BNDL_DLV_YN" />
        <result property="DLV_STAND_YN"         column="DLV_STAND_YN" />
        <result property="DLV_STAND_AMT"        column="DLV_STAND_AMT" />
        <result property="OPT_PROD_YN"          column="OPT_PROD_YN" />
        <result property="OPT_PROD_EXT_YN"      column="OPT_PROD_EXT_YN" />
        <result property="PROD_IMG_URL"         column="PROD_IMG_URL" />
        <result property="PS_PRCE"              column="PS_PRCE" />
        <result property="PS_DEPOSIT"           column="PS_DEPOSIT" />
        <result property="PS_MIN_ITEM"          column="PS_MIN_ITEM" />
        <result property="PS_MAX_ITEM"          column="PS_MAX_ITEM" />
        <result property="PS_START_DT"          column="PS_START_DT" />
        <result property="PS_END_DT"            column="PS_END_DT" />
        <result property="FREESHARE_OK_GB_CD"   column="FREESHARE_OK_GB_CD" />
        <result property="FREESHARE_END_DT"     column="FREESHARE_END_DT" />
        <result property="AGR_YN"               column="AGR_YN" />
        <result property="AGR_TITLE"            column="AGR_TITLE" />
        <result property="AGR"                  column="AGR"  jdbcType="CLOB" javaType="string"/>
        <result property="GRP_PROD_SEQ"         column="GRP_PROD_SEQ" />
        <collection property="extLands"         javaType="java.util.ArrayList" ofType="java.util.HashMap">
            <id property="EXT_LAND_CD"          column="EXT_LAND_CD"/>
            <result property="ADD_DLV_PRICE"    column="ADD_DLV_PRICE"/>
        </collection>
    </resultMap>

    <resultMap id="cpnResultMap" type="hashmap">
        <id property="CPN_GB_CD"            column="CPN_GB_CD" />
        <result property="CPN_GB_NM"        column="CPN_GB_NM" />
        <collection property="coupons"      javaType="java.util.ArrayList" ofType="java.util.HashMap">
            <id property="CPN_GRP_CD"                   column="CPN_GRP_CD" />
            <result property="CPN_NM"                   column="CPN_NM" />
            <result property="CPN_NO"                   column="CPN_NO" />
            <result property="CPN_ISSUE_TGT_GB_CD"      column="CPN_ISSUE_TGT_GB_CD"/>
            <result property="CPN_USE_CD"               column="CPN_USE_CD"/>
            <result property="BNFIT_DSCNT_PRCE"         column="BNFIT_DSCNT_PRCE"/>
            <result property="PROD_PRCE"                column="PROD_PRCE"/>
            <result property="BNFIT_DSCNT_RATE"         column="BNFIT_DSCNT_RATE"/>
            <result property="BNFIT_MAX_DSCNT_PRCE"     column="BNFIT_MAX_DSCNT_PRCE"/>
            <result property="EXP_DAY"                  column="EXP_DAY"/>
            <result property="DUP_DSCNT_YN"             column="DUP_DSCNT_YN"/>
            <result property="DLV_CPN_YN"               column="DLV_CPN_YN"/>
            <result property="INFLOW_ROUTE_CPN_YN"      column="INFLOW_ROUTE_CPN_YN"/>
            <result property="BNFIT_CHK"                column="BNFIT_CHK"/>
            <result property="PROD_CODE"                column="PROD_CODE"/>
            <result property="PLAN_CD"                  column="PLAN_CD"/>
            <result property="CTRY_CD"                  column="CTRY_CD"/>
            <result property="PCI_CPN_CD"               column="PCI_CPN_CD"/>
            <collection property="chans"    javaType="java.util.ArrayList" ofType="java.lang.String">
                <result column="CHAN_CD"/>
            </collection>
        </collection>
    </resultMap>

    <resultMap id="dlvAddrResultMap" type="hashmap">
        <id property="REG_SEQ"              column="REG_SEQ" />
        <result property="RCV_NM"           column="RCV_NM" />
        <result property="RCV_TEL"          column="RCV_TEL" />
        <result property="RCV_HP"           column="RCV_HP" />
        <result property="RCV_EMAIL"        column="RCV_EMAIL" />
        <result property="ZIP_CD"           column="ZIP_CD" />
        <result property="ADDR_GB_CD"       column="ADDR_GB_CD" />
        <result property="JUSO_JIBEN"       column="JUSO_JIBEN" />
        <result property="JUSO_DORO"        column="JUSO_DORO" />
        <result property="JUSO_DTL"         column="JUSO_DTL" />
        <result property="EXT_LAND_CD"      column="EXT_LAND_CD" />
        <collection property="addrs"        javaType="java.util.ArrayList" ofType="java.util.HashMap">
            <id property="REGS_SEQ"         column="REGS_SEQ" />
            <result property="DLV_NAME"     column="DLVS_NAME" />
        </collection>
    </resultMap>

    <!-- 긴급하게 소스를 수정 하였습니다. SEOKBAE -->
    <resultMap id="selectProdDetailInfoByMaps" type="hashmap">
        <id property="PROD_CODE"                column="PROD_CODE" />
        <result property="PROD_PC_DTL"          column="PROD_PC_DTL" jdbcType="CLOB" javaType="string" />
        <result property="PROD_MB_DTL"          column="PROD_MB_DTL" jdbcType="CLOB" javaType="string" />
        <result property="PROD_PC_DTL_USE_YN"   column="PROD_PC_DTL_USE_YN" />
        <result property="PROD_MB_DTL_USE_YN"   column="PROD_MB_DTL_USE_YN" />
    </resultMap>

    <resultMap id="freeshareResultMap"      type="hashmap">
        <id property="PROD_CODE"            column="PROD_CODE" />
        <result property="CNT"              column="CNT" />
        <collection property="list"         javaType="java.util.ArrayList" ofType="java.util.HashMap">
            <id property="MBER_SEQ"         column="MBER_SEQ" />
            <result property="MBER_EMAIL"   column="MBER_EMAIL" />
            <result property="REGIST_DT"    column="REGIST_DT" />
            <result property="RCV_NM"       column="RCV_NM" />
            <result property="MBER_NICK"    column="MBER_NICK" />
            <result property="REQ_MEMO"     column="REQ_MEMO" />
            <result property="SSO_GB_CD"    column="SSO_GB_CD" />
            <result property="FILE_URL"     column="FILE_URL" />
            <result property="LEVEL_IMG"    column="LEVEL_IMG" />
        </collection>
    </resultMap>

    <resultMap id="ordProductResultMap" type="hashmap">
        <id property="PROD_CODE"            column="PROD_CODE" />
        <result property="SELL_PRCE"        column="SELL_PRCE" />
        <result property="BNFIT_DSCNT_PRCE" column="BNFIT_DSCNT_PRCE" />
        <collection property="options"      javaType="java.util.ArrayList" ofType="java.util.HashMap">
            <id property="OPT_CD"           column="OPT_CD" />
            <result property="OP_GB_CD"     column="OP_GB_CD" />
            <result property="OPT_PRCE"     column="OPT_PRCE" />
        </collection>
    </resultMap>
        
    <select id="selectCtry" parameterType="string" resultType="hashmap">
        SELECT A.CTRY_CD            AS CTRY_CD  <!-- 카테고리 코드 -->
            , A.PARENT_CTRY_CD      AS PARENT_CTRY_CD <!-- 상위 카테고리 코드 -->
            , A.LVL_SEQ             AS LVL_SEQ  <!-- 분류 레벨 -->
            , A.CTRY_NM             AS CTRY_NM  <!-- 카테고리 이름 -->
            , A.VIEW_YN             AS VIEW_YN  <!-- 사용 유무 -->
            , NVL(B.FILE_URL, '')   AS FILE_URL <!-- 파일 URL -->
        FROM CTRY A LEFT OUTER JOIN FILE_INFO B ON A.FILE_SEQ = B.FILE_SEQ
        WHERE CTRY_CD = #{ctryCd}
    </select>

    <!-- 카테고리 목록 조회-->
    <select id="selectListCtry" parameterType="hashmap" resultType="hashmap">
        SELECT A.CTRY_CD                        <!-- 카테고리 코드 -->
            , A.PARENT_CTRY_CD                  <!-- 상위카테고리 코드 -->
            , A.CTRY_NM                         <!-- 카테고리 이름 -->
            , A.LVL_SEQ                         <!-- 카테고리 레벨 -->
            , A.SORT_SEQ                        <!-- 노출 순서 -->
            , NVL(B.FILE_URL, '') AS FILE_URL   <!-- 파일 URL -->
        FROM CTRY A
            LEFT OUTER JOIN FILE_INFO B ON A.FILE_SEQ = B.FILE_SEQ
        WHERE A.LVL_SEQ = #{LVL_SEQ}
            <if test='PARENT_CTRY_CD != null and PARENT_CTRY_CD != ""'>
                AND A.PARENT_CTRY_CD = #{PARENT_CTRY_CD}
            </if>
            AND A.VIEW_YN = 'Y'
        ORDER BY A.SORT_SEQ
    </select>



    <!-- 상위 카테고리 코드로 상품 개수 조회-->
    <select id="selectCountProd" parameterType="hashmap" resultType="int">
        SELECT COUNT(X.PROD_CODE) AS CNT
        FROM (
            <foreach item="prod" collection="prods" index="index" open="" close="" separator="UNION">
                SELECT P.PROD_CODE
                FROM PROD P
                <if test='prod.PROD_TYPE_CD == "2"'>
                    , PROD_SHARING PS
                </if>
                WHERE 1=1
                <choose>
                    <when test='prod.ctryGbn == "1"'>
                        <if test='prod.PARENT_CTRY_CD != null and prod.PARENT_CTRY_CD != ""'>
                        AND (
                                <foreach item="item" index="index" collection="prod.PARENT_CTRY_CD" open="" separator="OR" close="">
                                P.CTRY_CD LIKE #{item} || '%'
                                </foreach>
                            )
                        </if>
                    </when>
                    <otherwise>
                        <if test='prod.PARENT_CTRY_CD != null and prod.PARENT_CTRY_CD != ""'>
                        AND P.CTRY_CD LIKE #{prod.PARENT_CTRY_CD} || '%'
                        </if>
                    </otherwise>
                </choose>
                    AND P.PROD_STAT_CD = '0'
                <if test='prod.SELLER_MBER_SEQ != "" and prod.SELLER_MBER_SEQ != null'>
                    AND P.MBER_SEQ = #{prod.SELLER_MBER_SEQ}
                </if>
                <if test='prod.CPON_APPLY_PSBL_YN != "" and prod.CPON_APPLY_PSBL_YN != null'>
                    AND P.CPON_APPLY_PSBL_YN = #{prod.CPON_APPLY_PSBL_YN}
                </if>
                <if test='prod.DLV_PAY_GB_CD != "" and prod.DLV_PAY_GB_CD != null'>
                    AND P.DLV_WAY_CD != 5
                    <choose>
                        <when test='prod.PROD_TYPE_CD == "3" || prod.PROD_TYPE_CD == "5"'>
                            AND P.DLV_PAY_GB_CD = ''
                        </when>
                        <otherwise>
                            AND P.DLV_PAY_GB_CD = '1'
                        </otherwise>
                    </choose>
                </if>
                <if test='prod.PROD_NM != "" and prod.PROD_NM != null'>
                    AND P.PROD_NM LIKE '%' || #{prod.PROD_NM} || '%'
                </if>
                <if test='prod.PROD_TYPE_CD != "" and prod.PROD_TYPE_CD != null'>
                    AND P.PROD_TYPE_CD = #{prod.PROD_TYPE_CD}
                    <if test='prod.PROD_TYPE_CD == "2"'>
                        AND P.PROD_CODE = PS.PROD_CODE
                    </if>
                    <if test='prod.PROD_TYPE_CD == "3"'>
                        AND P.REGIST_DT <![CDATA[<=]]> SYSDATE AND CEIL(P.FREESHARE_END_DT - SYSDATE) <![CDATA[>=]]> 0
                    </if>
                    AND (NVL(P.STOCK_QTY, 1) - NVL(P.EXP_QTY, 0)) <![CDATA[>]]> 0
                </if>
            </foreach>
        )X
    </select>

    <!-- 상위 카테고리 코드로 상품 조회-->
    <select id="selectListProd" parameterType="java.util.List" resultType="hashmap">
        SELECT Z.PROD_CODE          AS PROD_CODE
            , Z.CTRY_CD             AS CTRY_CD
            , Z.PROD_TYPE_CD        AS PROD_TYPE_CD
            , Z.PROD_NM             AS PROD_NM
            , Z.BRAND_CD            AS BRAND_CD
            , Z.KEYWORD             AS KEYWORD
            , Z.RECOM_YN            AS RECOM_YN
            , Z.BUY_PRCE            AS BUY_PRCE
            , Z.NRM_PRCE            AS NRM_PRCE
            , Z.SELL_PRCE           AS SELL_PRCE
            , Z.CPON_APPLY_PSBL_YN  AS CPON_APPLY_PSBL_YN
            , Z.DLV_PRCE_TYPE_NM    AS DLV_PRCE_TYPE_NM
            , Z.DLV_PAY_GB_CD       AS DLV_PAY_GB_CD
            , Z.DLV_WAY_CD          AS DLV_WAY_CD
            , Z.REGIST_DT           AS REGIST_DT
            , Z.PROD_IMG_URL        AS PROD_IMG_URL
            , Z.CNT                 AS CNT
        FROM (
            SELECT ROWNUM                   AS RNUM
                , PROD.PROD_CODE            AS PROD_CODE
                , PROD.CTRY_CD              AS CTRY_CD
                , PROD.PROD_TYPE_CD         AS PROD_TYPE_CD
                , PROD.PROD_NM              AS PROD_NM
                , PROD.BRAND_CD             AS BRAND_CD
                , PROD.KEYWORD              AS KEYWORD
                , PROD.RECOM_YN             AS RECOM_YN
                , PROD.BUY_PRCE             AS BUY_PRCE
                , PROD.NRM_PRCE             AS NRM_PRCE
                , PROD.SELL_PRCE            AS SELL_PRCE
                , PROD.CPON_APPLY_PSBL_YN   AS CPON_APPLY_PSBL_YN
                , PROD.DLV_PAY_GB_CD        AS DLV_PAY_GB_CD
                , PROD.DLV_WAY_CD           AS DLV_WAY_CD
                , PROD.DLV_PRCE_TYPE_NM     AS DLV_PRCE_TYPE_NM
                , PROD.REGIST_DT            AS REGIST_DT
                , PROD.BRAND_NM             AS BRAND_NM
                , PROD.PROD_IMG_URL         AS PROD_IMG_URL
                , PROD.CNT                  AS CNT
            FROM (
                SELECT X.PROD_CODE              AS PROD_CODE
                    , X.CTRY_CD                 AS CTRY_CD
                    , X.PROD_TYPE_CD            AS PROD_TYPE_CD
                    , X.PROD_NM                 AS PROD_NM
                    , X.BRAND_CD                AS BRAND_CD
                    , X.RECOM_YN                AS RECOM_YN
                    , X.KEYWORD                 AS KEYWORD
                    , X.BUY_PRCE                AS BUY_PRCE
                    , X.NRM_PRCE                AS NRM_PRCE
                    , X.SELL_PRCE               AS SELL_PRCE
                    , X.CPON_APPLY_PSBL_YN      AS CPON_APPLY_PSBL_YN
                    , X.DLV_PAY_GB_CD           AS DLV_PAY_GB_CD
                    , X.DLV_WAY_CD              AS DLV_WAY_CD
                    , X.DLV_PRCE_TYPE_NM        AS DLV_PRCE_TYPE_NM
                    , X.REGIST_DT               AS REGIST_DT
                    , BI.BRAND_NM               AS BRAND_NM         <!-- 브랜드 명 -->
                    , PI.PROD_IMG_URL           AS PROD_IMG_URL     <!-- 상품 이미지 -->
                    , COUNT(PBCI.PROD_CODE)     AS CNT              <!-- 인기순을 알기 위해서 판매량 체크 -->
                FROM(
                <foreach item="prod" collection="prods" index="index" open="" close="" separator="UNION">
                    SELECT P.PROD_CODE                      AS PROD_CODE            <!-- 상품 코드 -->
                        , P.CTRY_CD                         AS CTRY_CD              <!-- 카테고리 코드 -->
                        , P.PROD_TYPE_CD                    AS PROD_TYPE_CD         <!-- 상품 구분 코드 -->
                        , P.PROD_NM                         AS PROD_NM              <!-- 상품 이름 -->
                        , P.BRAND_CD                        AS BRAND_CD             <!-- 브랜드 코드 -->
                        , NVL(P.RECOM_YN, 'N')              AS RECOM_YN             <!-- 추천 상품 YN -->
                        , P.KEYWORD                         AS KEYWORD              <!-- 키워드 -->
                        , NVL(P.BUY_PRCE, 0)                AS BUY_PRCE             <!-- 매입가격 -->
                        , NVL(P.NRM_PRCE, 0)                AS NRM_PRCE             <!-- 정상가격 -->
                        <choose>
                            <when test='prod.PROD_TYPE_CD == "2"'>
                                , NVL(PS.SHARING_PRICE, 0)          AS SELL_PRCE    <!-- 셰어링가격 -->
                            </when>
                            <otherwise>
                                , NVL(P.SELL_PRCE, 0)               AS SELL_PRCE    <!-- 판매가격 -->
                            </otherwise>
                        </choose>
                        , NVL(P.CPON_APPLY_PSBL_YN, 'N')    AS CPON_APPLY_PSBL_YN   <!-- 쿠폰 적용 여부 -->
                        , P.DLV_PAY_GB_CD                   AS DLV_PAY_GB_CD        <!-- 배송비 결제 유형 코드 -->
                        , P.DLV_WAY_CD                      AS DLV_WAY_CD           <!-- 배송 유형 코드 -->
                        , (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'DLV_PAY_GB_CD' AND COM_CD = P.DLV_PAY_GB_CD) AS DLV_PRCE_TYPE_NM
                        , P.REGIST_DT                       AS REGIST_DT            <!-- 등록일 -->
                    FROM PROD P
                    <if test='prod.PROD_TYPE_CD == "2"'>
                        , PROD_SHARING PS
                    </if>
                    WHERE 1=1
                        <choose>
                            <when test='prod.ctryGbn == "1"'>
                                <if test='prod.PARENT_CTRY_CD != null and prod.PARENT_CTRY_CD != ""'>
                                AND (
                                        <foreach item="item" index="index" collection="prod.PARENT_CTRY_CD" open="" separator="OR" close="">
                                        P.CTRY_CD LIKE #{item} || '%'
                                        </foreach>
                                    )
                                </if>
                            </when>
                            <otherwise>
                                <if test='prod.PARENT_CTRY_CD != null and prod.PARENT_CTRY_CD != ""'>
                                AND P.CTRY_CD LIKE #{prod.PARENT_CTRY_CD} || '%'
                                </if>
                            </otherwise>
                        </choose>
                        AND P.PROD_STAT_CD = '0'
                        <if test='prod.SELLER_MBER_SEQ != "" and prod.SELLER_MBER_SEQ != null'>
                            AND P.MBER_SEQ = #{prod.SELLER_MBER_SEQ}
                        </if>
                        <if test='prod.CPON_APPLY_PSBL_YN != "" and prod.CPON_APPLY_PSBL_YN != null'>
                            AND P.CPON_APPLY_PSBL_YN = #{prod.CPON_APPLY_PSBL_YN}
                        </if>
                        <if test='prod.DLV_PAY_GB_CD != "" and prod.DLV_PAY_GB_CD != null'>
                            AND P.DLV_WAY_CD != 5
                            <choose>
                                <when test='prod.PROD_TYPE_CD == "3" || prod.PROD_TYPE_CD == "5"'>
                                    AND P.DLV_PAY_GB_CD = ''
                                </when>
                                <otherwise>
                                    AND P.DLV_PAY_GB_CD = '1'
                                </otherwise>
                            </choose>
                        </if>
                        <if test='prod.PROD_NM != "" and prod.PROD_NM != null'>
                            AND P.PROD_NM LIKE '%' || #{prod.PROD_NM} || '%'
                        </if>
                        <if test='prod.PROD_TYPE_CD != "" and prod.PROD_TYPE_CD != null'>
                            AND P.PROD_TYPE_CD = #{prod.PROD_TYPE_CD}
                            <if test='prod.PROD_TYPE_CD == "2"'>
                                AND P.PROD_CODE = PS.PROD_CODE
                            </if>
                            <if test='prod.PROD_TYPE_CD == "3"'>
                                AND P.REGIST_DT <![CDATA[<=]]> SYSDATE AND CEIL(P.FREESHARE_END_DT - SYSDATE) <![CDATA[>=]]> 0
                            </if>
                            AND (NVL(P.STOCK_QTY, 1) - NVL(P.EXP_QTY, 0)) <![CDATA[>]]> 0
                        </if>
                </foreach>
                ) X
                    LEFT OUTER JOIN PROD_IMG PI ON X.PROD_CODE = PI.PROD_CODE AND PI.PROD_IMG_GB_CD = '11'
                    LEFT OUTER JOIN PROD_BUY_CONF_INFO PBCI ON X.PROD_CODE = PBCI.PROD_CODE
                    LEFT OUTER JOIN BRAND_INFO BI ON X.BRAND_CD = BI.BRAND_CD
                    LEFT OUTER JOIN PROD_SUBMIT_INFO PSI ON X.PROD_CODE = PSI.PROD_CODE AND PSI.PROC_STAT_CD = '95'
                GROUP BY X.PROD_CODE, X.CTRY_CD, X.PROD_TYPE_CD, X.PROD_NM, X.BRAND_CD, X.RECOM_YN, X.KEYWORD, X.BUY_PRCE, X.NRM_PRCE, X.SELL_PRCE, X.CPON_APPLY_PSBL_YN, X.DLV_PAY_GB_CD, X.DLV_WAY_CD, X.DLV_PRCE_TYPE_NM, X.REGIST_DT, BI.BRAND_NM, PI.PROD_IMG_URL
                <trim prefix="ORDER BY">
                    <if test="ORDER_KIND == 'POPULAR'">
                        CNT DESC
                    </if>
                    <if test="ORDER_KIND == 'HIGHPRCE'">
                        X.SELL_PRCE DESC
                    </if>
                    <if test="ORDER_KIND == 'LOWPRCE'">
                        X.SELL_PRCE ASC
                    </if>
                    <if test="ORDER_KIND == 'REGIST'">
                        X.REGIST_DT DESC
                    </if>
                </trim>
            ) PROD
        )Z
        WHERE Z.RNUM <![CDATA[>=]]> #{S_NUM}
            AND Z.RNUM <![CDATA[<=]]> #{E_NUM}
    </select>

    <!-- 상품 유형 및 개수 조회-->
    <select id="selectListProdType" parameterType="hashmap" resultType="hashmap">
        SELECT '0'                      AS PROD_TYPE_CD
            , '전체 상품'                   AS PROD_TYPE_NM
            , COUNT(X.PROD_CODE)            AS PROD_TYPE_CNT
        FROM (
            <foreach item="prod" collection="prods" index="index" open="" close="" separator="UNION">
                SELECT P.PROD_CODE
                FROM PROD P
                <if test='prod.PROD_TYPE_CD == "2"'>
                    , PROD_SHARING PS
                </if>
                WHERE 1=1
                <choose>
                    <when test='prod.ctryGbn == "1"'>
                        <if test='prod.PARENT_CTRY_CD != null and prod.PARENT_CTRY_CD != ""'>
                        AND (
                                <foreach item="item" index="index" collection="prod.PARENT_CTRY_CD" open="" separator="OR" close="">
                                P.CTRY_CD LIKE #{item} || '%'
                                </foreach>
                            )
                        </if>
                    </when>
                    <otherwise>
                        <if test='prod.PARENT_CTRY_CD != null and prod.PARENT_CTRY_CD != ""'>
                        AND P.CTRY_CD LIKE #{prod.PARENT_CTRY_CD} || '%'
                        </if>
                    </otherwise>
                </choose>
                    AND P.PROD_STAT_CD = '0'
                <if test='prod.SELLER_MBER_SEQ != "" and prod.SELLER_MBER_SEQ != null'>
                    AND P.MBER_SEQ = #{prod.SELLER_MBER_SEQ}
                </if>
                <if test='prod.CPON_APPLY_PSBL_YN != "" and prod.CPON_APPLY_PSBL_YN != null'>
                    AND P.CPON_APPLY_PSBL_YN = #{prod.CPON_APPLY_PSBL_YN}
                </if>
                <if test='prod.PROD_NM != "" and prod.PROD_NM != null'>
                    AND P.PROD_NM LIKE '%' || #{prod.PROD_NM} || '%'
                </if>
                <if test='prod.DLV_PAY_GB_CD != "" and prod.DLV_PAY_GB_CD != null'>
                    AND P.DLV_WAY_CD != 5
                    <choose>
                        <when test='prod.PROD_TYPE_CD == "3" || prod.PROD_TYPE_CD == "5"'>
                            AND P.DLV_PAY_GB_CD = ''
                        </when>
                        <otherwise>
                            AND P.DLV_PAY_GB_CD = '1'
                        </otherwise>
                    </choose>
                </if>
                <if test='prod.PROD_TYPE_CD != "" and prod.PROD_TYPE_CD != null'>
                    AND P.PROD_TYPE_CD = #{prod.PROD_TYPE_CD}
                    <if test='prod.PROD_TYPE_CD == "2"'>
                        AND P.PROD_CODE = PS.PROD_CODE
                    </if>
                    <if test='prod.PROD_TYPE_CD == "3"'>
                        AND P.REGIST_DT <![CDATA[<=]]> SYSDATE AND CEIL(P.FREESHARE_END_DT - SYSDATE) <![CDATA[>=]]> 0
                    </if>
                    AND (NVL(P.STOCK_QTY, 1) - NVL(P.EXP_QTY, 0)) <![CDATA[>]]> 0
                </if>
            </foreach>
        ) X
        UNION ALL
        (
            SELECT X.COM_CD             AS PROD_TYPE_CD     <!-- 상품구분코드 -->
                , X.COM_CD_NM           AS PROD_TYPE_NM     <!-- 상품구분명 -->
                , NVL(Y.COM_CD_CNT, 0)  AS PROD_TYPE_CNT    <!-- 구분별 상품개수  -->
            FROM CODE X LEFT OUTER JOIN (
                        <foreach item="prod" collection="prods" index="index" open="" close="" separator="UNION">
                            SELECT P.PROD_TYPE_CD
                                , COUNT(P.PROD_CODE) AS COM_CD_CNT
                            FROM PROD P
                            <if test='prod.PROD_TYPE_CD == "2"'>
                                , PROD_SHARING PS
                            </if>
                            WHERE 1=1
                            <choose>
                                <when test='prod.ctryGbn == "1"'>
                                    <if test='prod.PARENT_CTRY_CD != null and prod.PARENT_CTRY_CD != ""'>
                                    AND (
                                            <foreach item="item" index="index" collection="prod.PARENT_CTRY_CD" open="" separator="OR" close="">
                                            P.CTRY_CD LIKE #{item} || '%'
                                            </foreach>
                                        )
                                    </if>
                                </when>
                                <otherwise>
                                    <if test='prod.PARENT_CTRY_CD != null and prod.PARENT_CTRY_CD != ""'>
                                    AND P.CTRY_CD LIKE #{prod.PARENT_CTRY_CD} || '%'
                                    </if>
                                </otherwise>
                            </choose>
                                AND P.PROD_STAT_CD = '0'
                                <if test='prod.SELLER_MBER_SEQ != "" and prod.SELLER_MBER_SEQ != null'>
                                    AND P.MBER_SEQ = #{prod.SELLER_MBER_SEQ}
                                </if>
                                <if test='prod.CPON_APPLY_PSBL_YN != "" and prod.CPON_APPLY_PSBL_YN != null'>
                                    AND P.CPON_APPLY_PSBL_YN = #{prod.CPON_APPLY_PSBL_YN}
                                </if>
                                <if test='prod.DLV_PAY_GB_CD != "" and prod.DLV_PAY_GB_CD != null'>
                                    AND P.DLV_WAY_CD != 5
                                    <choose>
                                        <when test='prod.PROD_TYPE_CD == "3" || prod.PROD_TYPE_CD == "5"'>
                                            AND P.DLV_PAY_GB_CD = ''
                                        </when>
                                        <otherwise>
                                            AND P.DLV_PAY_GB_CD = '1'
                                        </otherwise>
                                    </choose>
                                </if>
                                <if test='prod.PROD_TYPE_CD != "" and prod.PROD_TYPE_CD != null'>
                                    AND P.PROD_TYPE_CD = #{prod.PROD_TYPE_CD}
                                    <if test='prod.PROD_TYPE_CD == "2"'>
                                        AND P.PROD_CODE = PS.PROD_CODE
                                    </if>
                                    <if test='prod.PROD_TYPE_CD == "3"'>
                                        AND P.REGIST_DT <![CDATA[<=]]> SYSDATE AND CEIL(P.FREESHARE_END_DT - SYSDATE) <![CDATA[>=]]> 0
                                    </if>
                                    AND (NVL(P.STOCK_QTY, 1) - NVL(P.EXP_QTY, 0)) <![CDATA[>]]> 0
                                </if>
                            GROUP BY P.PROD_TYPE_CD
                        </foreach>
             ) Y ON Y.PROD_TYPE_CD = X.COM_CD
            WHERE X.GRP_CD = 'PROD_TYPE_CD'
                AND X.COM_CD <![CDATA[<>]]> '4'
        )
        ORDER BY PROD_TYPE_CD
    </select>

    <update id="insertLateProd" parameterType="hashmap">
        MERGE INTO LATE_PROD
            USING DUAL
            ON (MBER_SEQ = #{MBER_SEQ} AND PROD_CODE = #{PROD_CODE})
            WHEN MATCHED THEN
                UPDATE SET REGIST_DT = SYSDATE
            WHEN NOT MATCHED THEN
                INSERT (PROD_CODE
                        , MBER_SEQ
                        , REGIST_DT
                ) VALUES(#{PROD_CODE}
                        , #{MBER_SEQ}
                        , SYSDATE
                )
    </update>

    <!-- 상품 상세 조회-->
    <select id="selectProdDetailInfo" parameterType="string" resultMap="prodResultMap">
        SELECT P.PROD_CODE              AS PROD_CODE        <!-- 상품 코드 -->
            , P.PROD_NM                 AS PROD_NM          <!-- 상품 이름 -->
            , P.CTRY_CD                 AS CTRY_CD          <!-- 카테고리 코드 -->
            , P.MBER_SEQ                AS MBER_SEQ         <!-- 회원 번호 -->
            , P.BRAND_CD                AS BRAND_CD         <!-- 브랜드 코드 -->
            , X.BRAND_NM                AS BRAND_NM         <!-- 브랜드 명 -->
            , X.FILE_URL                AS BRAND_FILE_URL   <!-- 브랜드 이미지 URL -->
            , P.NPROD_GB_CD             AS NPROD_GB_CD      <!-- 신상품 구분 코드 -->
            , P.PROD_TYPE_CD            AS PROD_TYPE_CD     <!-- 상품 구분 코드 -->
            , P.PROD_STAT_CD            AS PROD_STAT_CD     <!-- 상품 상태 코드 -->
            , P.DLV_WAY_CD              AS DLV_WAY_CD       <!-- 배송 유형 코드 -->
            , P.DLV_PAY_GB_CD           AS DLV_PAY_GB_CD    <!-- 배송비 결제 구분 코드 -->
            , P.DLV_PRCE                AS DLV_PRCE         <!-- 배송비 -->
            , P.BNDL_DLV_YN             AS BNDL_DLV_YN      <!-- 묶음 배송 가능 여부 -->
            , P.DLV_STAND_YN            AS DLV_STAND_YN     <!-- 조건부 배송비 여부 -->
            , P.DLV_STAND_AMT           AS DLV_STAND_AMT    <!-- 조건부 배소비 무료 금액 -->
            , P.TRAD_LOC                AS TRAD_LOC         <!-- 거래 위치(시군구) -->
            , P.PROD_MB_DTL             AS PROD_MB_DTL      <!-- 모바일용 상품 설명 -->
            , P.PROD_PC_DTL             AS PROD_PC_DTL      <!-- PC용 상품 설명 -->
            , P.MB_DTL_USE_YN           AS PROD_MB_DTL_USE_YN   <!-- 모바일용 상품 설명 사용 유무-->
            , P.PC_DTL_USE_YN           AS PROD_PC_DTL_USE_YN   <!-- PC용 상품 설명 사용 유무-->
            , P.SELL_PRCE               AS SELL_PRCE        <!-- 판매가격 -->
            , P.NRM_PRCE                AS NRM_PRCE         <!-- 정상가격 -->
            , CASE WHEN 'Y' = NVL(P.OPT_PROD_YN, 'N') THEN 'Y' ELSE 'N' END AS OPT_PROD_YN          <!-- 부가옵션상품인지 파악 -->
            , CASE WHEN 'Y' = NVL(P.OPT_PROD_EXT_YN, 'N') THEN 'Y' ELSE 'N' END AS OPT_PROD_EXT_YN  <!-- 추가옵션상품인지 파악 -->
            , P.OPT_BUY_GB_CD           AS OPT_BUY_GB_CD    <!-- 옵션 종류 -->
            , P.STOCK_QTY - NVL(P.EXP_QTY, 0)   AS INVENTORY_QTY    <!--재고물량 -->
            , P.FREESHARE_OK_GB_CD      AS FREESHARE_OK_GB_CD   <!--나눔거래성사기준 -->
            , P.FREESHARE_END_DT        AS FREESHARE_END_DT <!--나눔거래마감일시 -->
            , NVL(P.PROD_ITEM_CODE, '') AS PROD_ITEM_CODE   <!-- 정부고시항목코드 -->
            , P.REGIST_DT               AS REGIST_DT        <!--등록일시 -->
            , (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'NPROD_GB_CD' AND COM_CD = P.NPROD_GB_CD) AS NPROD_GB_NM                   <!-- 신상품 구분 -->
            , (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROD_TYPE_CD' AND COM_CD = P.PROD_TYPE_CD) AS PROD_TYPE_NM                <!-- 상품 구분 -->
            , (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'PROD_STAT_CD' AND COM_CD = P.PROD_STAT_CD) AS PROD_STAT_NM                <!-- 상품 상태 -->
            , (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'DLV_WAY_CD' AND COM_CD = P.DLV_WAY_CD) AS DLV_WAY_NM                      <!-- 배송 유형 -->
            , (SELECT COM_CD_NM FROM CODE WHERE GRP_CD = 'DLV_PAY_GB_CD' AND COM_CD = P.DLV_PAY_GB_CD) AS DLV_PAY_GB_NM             <!-- 배송비 -->
            , NVL(PI2.PROD_IMG_URL, '') AS PROD_THUMB_URL           <!-- 상품 썸네일 이미지 일련번호 -->
            , PI.FILE_SEQ               AS PROD_FILE_SEQ            <!-- 상품 이미지 일련번호 -->
            , PI.PROD_IMG_URL           AS PROD_IMG_URL             <!-- 상품 이미지 URL -->
            , PI.PROD_IMG_GB_CD         AS PROD_IMG_GB_CD
            , Y.MINI_SHOP_NM            AS MINI_SHOP_NM             <!-- 미니샵 이름 -->
            , Y.FILE_URL                AS MINI_SHOP_FILE_URL       <!-- 미니샵 프로필 이미지 URL -->
            , MI.MBER_GB_CD             AS MBER_GB_CD               <!-- 회원 구분 코드 -->
            , PS.SHARING_PRICE          AS PS_PRCE                  <!-- 셰어링 금액 -->
            , PS.DEPOSIT                AS PS_DEPOSIT               <!-- 셰어링 보증금 -->
            , PS.SHARING_MIN_TERM       AS PS_MIN_ITEM              <!-- 셰어링 최소 기간 -->
            , PS.SHARING_MAX_TERM       AS PS_MAX_ITEM              <!-- 셰어링 최소 기간 -->
            , PS.SHARING_START_DT       AS PS_START_DT              <!-- 셰어링 가능 시작일 -->
            , PS.SHARING_END_DT         AS PS_END_DT                <!-- 셰어링 가능 종료일 -->
            , POI.OPT_GRP_CD            AS OPT_GRP_CD               <!-- 옵션 그룹 코드 -->
            , POI.OP_GB_CD              AS OP_GB_CD                 <!-- 옵션 유형 코드 -->
            , ELDP.EXT_LAND_CD          AS EXT_LAND_CD              <!-- 도서산간 코드 -->
            , ELDP.ADD_DLV_PRICE        AS ADD_DLV_PRICE            <!-- 도서산간 배송비 -->
            , (SELECT FIS.FILE_SEQ FROM PROD_IMG FIS WHERE P.PROD_CODE = FIS.PROD_CODE AND FIS.PROD_IMG_GB_CD ='11') AS KAKAO_FILE_SEQ  <!-- 카카오톡 필수 FILE_SEQ 추가 -->
            , (SELECT COUNT(*) FROM PROD_WISH WHERE PROD_CODE = P.PROD_CODE) AS WISH_PROD_CNT  <!-- 위시담기 상품 총 개수 추가 -->
        FROM PROD P
            LEFT OUTER JOIN (
                            SELECT BRAND_CD
                                , BRAND_NM
                                , FILE_URL
                            FROM BRAND_INFO BI LEFT OUTER JOIN FILE_INFO FI ON BI.FILE_SEQ = FI.FILE_SEQ
                            ) X ON P.BRAND_CD = X.BRAND_CD
            LEFT OUTER JOIN PROD_IMG PI ON P.PROD_CODE = PI.PROD_CODE AND PI.PROD_IMG_GB_CD IN ('12', '13', '14', '15', '16')
            LEFT OUTER JOIN PROD_IMG PI2 ON P.PROD_CODE = PI2.PROD_CODE AND PI2.PROD_IMG_GB_CD = '20'
            LEFT OUTER JOIN (
                            SELECT MBER_SEQ
                                , MINI_SHOP_NM
                                , FILE_URL
                            FROM MBER_MINI_SHOP_INFO MNSI LEFT OUTER JOIN FILE_INFO FI ON MNSI.MINI_PROFILE_SEQ = FI.FILE_SEQ
                            ) Y ON P.MBER_SEQ = Y.MBER_SEQ
            INNER JOIN MBER_INFO MI ON P.MBER_SEQ = MI.MBER_SEQ
            LEFT OUTER JOIN PROD_SHARING PS ON P.PROD_CODE = PS.PROD_CODE
            LEFT OUTER JOIN PROD_OP_INFO POI ON P.PROD_CODE = POI.PROD_CODE
            LEFT OUTER JOIN EXT_LAND_DLV_PRICE ELDP ON P.PROD_CODE = ELDP.PROD_CODE
        WHERE P.PROD_CODE = #{prodCode}
        ORDER BY REGIST_DT DESC, PI.PROD_IMG_GB_CD, ELDP.EXT_LAND_CD
    </select>
    
    <select id="selectProdUserInfo" parameterType="String" resultType="hashmap">
		SELECT X.MBER_SEQ
			 , X.MBER_EMAIL
			 , FI1.FILE_URL			AS FILE_URL
			 , FI2.FILE_URL			AS MINI_SHOP_FILE_URL
			 , FI3.FILE_URL			AS MINI_SHOP_PROFILE_URL
			 , FI4.FILE_URL			AS LEV_FILE_URL
			 , (SELECT COUNT(*) FROM PROD WHERE MBER_SEQ = X.MBER_SEQ AND PROD_TYPE_CD = '1' AND PROD_STAT_CD = '0' AND NVL(STOCK_QTY, 1) > NVL(EXP_QTY, 0)) AS P_CNT
			 , (SELECT COUNT(*) FROM PROD WHERE MBER_SEQ = X.MBER_SEQ AND PROD_TYPE_CD = '2' AND PROD_STAT_CD = '0' AND NVL(STOCK_QTY, 1) > NVL(EXP_QTY, 0)) AS S_CNT
			 , (SELECT COUNT(*) FROM PROD WHERE MBER_SEQ = X.MBER_SEQ AND PROD_TYPE_CD = '3' AND PROD_STAT_CD = '0' AND NVL(STOCK_QTY, 1) > NVL(EXP_QTY, 0)) AS N_CNT
			 , (SELECT COUNT(*) FROM PROD WHERE MBER_SEQ = X.MBER_SEQ AND PROD_TYPE_CD = '5' AND PROD_STAT_CD = '0' AND NVL(STOCK_QTY, 1) > NVL(EXP_QTY, 0)) AS R_CNT
		  FROM (SELECT A.MBER_SEQ
					 , A.MBER_EMAIL
					 , A.MBER_IMG
					 , E.FILE_SEQ
					 , B.FILE_SEQ AS MINI_SHOP_FILE_SEQ
					 , B.MINI_PROFILE_SEQ AS MINI_SHOP_PROFILE_SEQ
					 , E.FILE_SEQ AS SELL_MBER_LEV_SEQ
				  FROM MBER_INFO A
				  LEFT OUTER JOIN MBER_MINI_SHOP_INFO B ON A.MBER_SEQ = B.MBER_SEQ
				  LEFT OUTER JOIN SELLER_INFO_CFG C ON A.MBER_SEQ = C.MBER_SEQ
				  LEFT OUTER JOIN MBER_DTL_INFO D ON A.MBER_SEQ = D.MBER_SEQ
				  LEFT OUTER JOIN MBER_LEV E ON E.MBER_LEV_SEQ = D.SELL_MBER_LEV_SEQ
				 WHERE A.MBER_SEQ = #{MBER_SEQ}
			 ) X
		  LEFT OUTER JOIN FILE_INFO FI1 ON X.MBER_IMG = FI1.FILE_SEQ
		  LEFT OUTER JOIN FILE_INFO FI2 ON X.MINI_SHOP_FILE_SEQ = FI2.FILE_SEQ
		  LEFT OUTER JOIN FILE_INFO FI3 ON X.MINI_SHOP_PROFILE_SEQ = FI3.FILE_SEQ
		  LEFT OUTER JOIN FILE_INFO FI4 ON X.SELL_MBER_LEV_SEQ = FI4.FILE_SEQ
	</select>

    <select id="selectProdDetailInfoByMap" parameterType="hashmap" resultMap="selectProdDetailInfoByMaps">
        SELECT P.PROD_CODE              AS PROD_CODE
            , P.PROD_MB_DTL             AS PROD_MB_DTL      <!-- 모바일용 상품 설명 -->
            , P.PROD_PC_DTL             AS PROD_PC_DTL      <!-- PC용 상품 설명 -->
            , P.MB_DTL_USE_YN           AS PROD_MB_DTL_USE_YN       <!-- 모바일용 상품 상세 사용 유무 -->
            , P.PC_DTL_USE_YN           AS PROD_PC_DTL_USE_YN       <!-- PC용 상품 상세 사용 유무 -->
        <choose>
            <when test='PROD_TYPE_CD == "4"'>
                FROM SP_PROD P
            </when>
            <otherwise>
                FROM PROD P
            </otherwise>
        </choose>
            LEFT OUTER JOIN PROD_IMG PI ON P.PROD_CODE = PI.PROD_CODE AND PI.PROD_IMG_GB_CD = '20'
        WHERE P.PROD_CODE = #{PROD_CODE}
    </select>

    <select id="selectListCtryByProd" parameterType="string" resultType="hashmap">
        SELECT LVL_SEQ
            , CTRY_CD
            , CTRY_NM
        FROM CTRY
        START WITH CTRY_CD = #{ctryCd}
        CONNECT BY PRIOR PARENT_CTRY_CD = CTRY_CD
        ORDER BY LVL_SEQ
    </select>

    <select id="selectListOption" parameterType="hashmap" resultType="hashmap">
        SELECT X.OPT_CD                     AS OPT_CD
            , X.OP_GB_CD                    AS OP_GB_CD
            , X.OPT_NM                      AS OPT_NM
            , X.OPT_PRCE                    AS OPT_PRCE
            , X.OPT_STOCK_QTY - X.OPT_EXP_QTY   AS OPT_INVEN_QTY
        FROM (
        <foreach item="option" collection="list" index="index" open="" close="" separator="UNION ALL">
            SELECT DISTINCT(PO.OPT_CD)          AS OPT_CD
                , POI.OP_GB_CD                  AS OP_GB_CD
                , REPLACE(LTRIM (SYS_CONNECT_BY_PATH (PO.OPT_NM, ' // '), ' // '), '//', '/') AS OPT_NM
                , PO.OPT_PRCE                   AS OPT_PRCE
                , NVL(PO.OPT_STOCK_QTY, 0)      AS OPT_STOCK_QTY
                , NVL(PO.OPT_EXP_QTY, 0)        AS OPT_EXP_QTY
            FROM PROD_OP PO, PROD_OP_INFO POI
            WHERE PO.OPT_GRP_CD = #{option.OPT_GRP_CD}
                AND PO.OPT_GRP_CD = POI.OPT_GRP_CD
                AND PO.OPT_USE_YN = 'Y'
                AND PO.OPT_STOCK_QTY IS NOT NULL
            START WITH PO.PAR_OPT_CD = '0'
            CONNECT BY PRIOR PO.OPT_CD = PO.PAR_OPT_CD
        </foreach>
        )X
        ORDER BY X.OP_GB_CD, X.OPT_CD
    </select>

    <!-- 상품 조회 (상품 상세 페이지 외 사용)-->
    <select id="selectProdInfo" parameterType="hashmap" resultMap="prodSummaryResultMap">
        SELECT P.PROD_CODE              AS PROD_CODE        <!-- 상품 코드 -->
            , P.PROD_NM                 AS PROD_NM          <!-- 상품 이름 -->
            , P.PROD_TYPE_CD            AS PROD_TYPE_CD     <!-- 상품 타입 코드 -->
            , P.CTRY_CD                 AS CTRY_CD          <!-- 카테고리 코드 -->
            , (SELECT LTRIM (SYS_CONNECT_BY_PATH (PARENT_CTRY_CD, '|'), '|')
                FROM CTRY
                WHERE CTRY_CD = P.CTRY_CD
                START WITH LVL_SEQ = 1
                CONNECT BY PRIOR CTRY_CD = PARENT_CTRY_CD ) AS PARENT_CTRY_CD   <!-- 상위카테고리 코드 -->
            , P.MBER_SEQ                AS MBER_SEQ         <!-- 회원 번호 -->
            , MI.MBER_GB_CD             AS MBER_GB_CD       <!-- 회원 구분 코드 -->
            , P.SELL_PRCE               AS SELL_PRCE        <!-- 판매가격 -->
            , P.NRM_PRCE                AS NRM_PRCE         <!-- 정상가격 -->
            , P.DLV_WAY_CD              AS DLV_WAY_CD       <!-- 배송 유형 코드 -->
            , P.DLV_PAY_GB_CD           AS DLV_PAY_GB_CD    <!-- 배송비 결제 구분 코드 -->
            , P.DLV_PRCE                AS DLV_PRCE         <!-- 배송비 -->
            , P.BNDL_DLV_YN             AS BNDL_DLV_YN      <!-- 묶음 배송 가능 여부 -->
            , P.DLV_STAND_YN            AS DLV_STAND_YN     <!-- 조건부 배송비 여부 -->
            , P.DLV_STAND_AMT           AS DLV_STAND_AMT    <!-- 조건부 배소비 무료 금액 -->
            , P.OPT_PROD_YN             AS OPT_PROD_YN      <!-- 옵션상품인지 파악 -->
            , P.OPT_PROD_EXT_YN         AS OPT_PROD_EXT_YN  <!-- 추가옵션상품인지 파악 -->
            , PI.PROD_IMG_URL           AS PROD_IMG_URL     <!-- 상품 이미지 URL -->
            , PS.SHARING_PRICE          AS PS_PRCE          <!-- 셰어링 금액 -->
            , PS.DEPOSIT                AS PS_DEPOSIT       <!-- 셰어링 보증금 -->
            , PS.SHARING_MIN_TERM       AS PS_MIN_ITEM      <!-- 셰어링 최소 기간 -->
            , PS.SHARING_MAX_TERM       AS PS_MAX_ITEM      <!-- 셰어링 최소 기간 -->
            , PS.SHARING_START_DT       AS PS_START_DT      <!-- 셰어링 가능 시작일 -->
            , PS.SHARING_END_DT         AS PS_END_DT        <!-- 셰어링 가능 종료일 -->
            , P.FREESHARE_OK_GB_CD      AS FREESHARE_OK_GB_CD   <!--나눔거래성사기준 -->
            , P.FREESHARE_END_DT        AS FREESHARE_END_DT <!--나눔거래마감일시 -->
            , AGR_YN                    AS AGR_YN           <!--렌탈 약관 유무 -->
            , AGR_TITLE                 AS AGR_TITLE        <!--렌탈 약관 타이틀 -->
            , <![CDATA[REPLACE(TRIM(P.AGR), CHR(10), '<br>')]]>             AS AGR              <!-- 렌탈 상품 약관 -->
            , GPM.GRP_PROD_SEQ          AS GRP_PROD_SEQ     <!-- 출하지 일련번호 -->
            , ELDP.EXT_LAND_CD          AS EXT_LAND_CD      <!-- 도서산간 코드 -->
            , ELDP.ADD_DLV_PRICE        AS ADD_DLV_PRICE    <!-- 도서산간 배송비 -->
        FROM PROD P
            LEFT OUTER JOIN PROD_IMG PI ON P.PROD_CODE = PI.PROD_CODE AND PI.PROD_IMG_GB_CD = #{PROD_IMG_GB_CD}
            LEFT OUTER JOIN PROD_SHARING PS ON P.PROD_CODE = PS.PROD_CODE
            INNER JOIN MBER_INFO MI ON P.MBER_SEQ = MI.MBER_SEQ
            LEFT OUTER JOIN GRP_PROD_MAP GPM ON P.PROD_CODE = GPM.PROD_CODE AND P.MBER_SEQ = GPM.MBER_SEQ
            LEFT OUTER JOIN EXT_LAND_DLV_PRICE ELDP ON P.PROD_CODE = ELDP.PROD_CODE
        WHERE P.PROD_CODE = #{PROD_CODE}
        ORDER BY ELDP.EXT_LAND_CD
    </select>

    <!-- 판매 주문 가능 여부 체크-->
    <select id="selectStatCd" parameterType="hashmap" resultType="hashmap">
        SELECT COUNT(X.PROD_CODE)               AS CNT
            , X.PROD_STAT_CD                    AS PROD_STAT_CD
            , X.INVENTORY_QTY - TO_NUMBER(#{ORD_QTY})  AS INVENTORY_QTY
        FROM (
            SELECT PROD_CODE                    AS PROD_CODE
                , PROD_STAT_CD                  AS PROD_STAT_CD
                , STOCK_QTY - NVL(EXP_QTY, 0)   AS INVENTORY_QTY
            FROM PROD
            WHERE PROD_CODE = #{PROD_CODE}
        ) X
        GROUP BY X.PROD_STAT_CD, X.INVENTORY_QTY
    </select>

    <select id="selectStatBySell" parameterType="hashmap" resultType="hashmap">
        SELECT COUNT(X.PROD_CODE)               AS CNT
            , X.PROD_STAT_CD                    AS PROD_STAT_CD
            , X.INVENTORY_QTY - TO_NUMBER(#{ORD_QTY})   AS INVENTORY_QTY
        FROM (
            SELECT PROD_CODE                    AS PROD_CODE
                , PROD_STAT_CD                  AS PROD_STAT_CD
                , NVL(STOCK_QTY, 0) - NVL(EXP_QTY, 0)   AS INVENTORY_QTY
            FROM PROD
            WHERE PROD_TYPE_CD = '1'
                AND PROD_CODE = #{PROD_CODE}
        ) X
        GROUP BY X.PROD_STAT_CD, X.INVENTORY_QTY
    </select>

    <select id="selectStatByShar" parameterType="hashmap" resultType="hashmap">
        SELECT COUNT(X.PROD_CODE)               AS CNT
            , X.PROD_STAT_CD                    AS PROD_STAT_CD
            , X.INVENTORY_QTY - TO_NUMBER(#{ORD_QTY})   AS INVENTORY_QTY
            , X.SHARING_START_DT                  AS SHARING_START_DT
            , X.SHARING_END_DT                    AS SHARING_END_DT
        FROM (
            SELECT P.PROD_CODE                          AS PROD_CODE
                , P.PROD_STAT_CD                        AS PROD_STAT_CD
                , NVL(STOCK_QTY, 0) - NVL(EXP_QTY, 0)   AS INVENTORY_QTY
                , PS.SHARING_START_DT                   AS SHARING_START_DT
                , PS.SHARING_END_DT                     AS SHARING_END_DT
            FROM PROD P, PROD_SHARING PS
            WHERE P.PROD_TYPE_CD = '2'
                AND P.PROD_CODE = #{PROD_CODE}
                AND P.PROD_CODE = PS.PROD_CODE
        ) X
        GROUP BY X.PROD_STAT_CD, X.INVENTORY_QTY, X.SHARING_START_DT, X.SHARING_END_DT
    </select>

    <select id="selectStatSharByCart" parameterType="hashmap" resultType="int">
        SELECT COUNT(*)
        FROM CART
        WHERE PROD_CODE = #{PROD_CODE}
            AND MBER_SEQ = #{MBER_SEQ}
            AND SHARE_DAY = #{SHARE_DAY}
    </select>

    <!-- okayjava : A.FREESHARE_END_DT가 Group By 에 포함되지 않아서 추가 함 -->
    <!-- okayjava : 날짜비교를 올림으로 처리하여, 0<=x 나눔 기간 남은으로처리 -->
    <select id="selectStatByFree" parameterType="hashmap" resultType="hashmap">
        SELECT COUNT(A.PROD_CODE)           AS CNT
            , NVL(A.PROD_STAT_CD, '0')      AS PROD_STAT_CD
            , NVL(B.PROD_CODE, '')          AS FREESHARE_PROD_CODE
            , CEIL(A.FREESHARE_END_DT - SYSDATE)  AS DDAY
        FROM PROD A
            LEFT OUTER JOIN PROD_SUBMIT_INFO B ON A.PROD_CODE = B.PROD_CODE AND B.MBER_SEQ = #{MBER_SEQ}
        WHERE A.PROD_CODE = #{PROD_CODE}
            AND A.PROD_TYPE_CD = '3'
        GROUP BY A.PROD_STAT_CD, B.PROD_CODE, A.FREESHARE_END_DT
    </select>

    <select id="selectStatByRent" parameterType="hashmap" resultType="hashmap">
         SELECT COUNT(A.PROD_CODE)               AS CNT
              , NVL(A.PROD_STAT_CD, 0)            AS PROD_STAT_CD
              , A.STOCK_QTY - NVL(A.EXP_QTY, 0)   AS INVENTORY
              , B.RENT_CNT
           FROM PROD A,
                (
                  SELECT COUNT(Z.PROD_CODE) AS RENT_CNT
                    FROM PROD_SUBMIT_INFO Z
                   WHERE Z.PROD_CODE = #{PROD_CODE}
                     AND Z.MBER_SEQ = #{MBER_SEQ}
                     AND Z.PROC_STAT_CD != 93 
                ) B 
          WHERE A.PROD_CODE = #{PROD_CODE}
            AND A.PROD_TYPE_CD = '5'
          GROUP BY A.PROD_STAT_CD, A.STOCK_QTY, A.EXP_QTY, B.RENT_CNT
    </select>

    <!-- 옵션 수량 체크 -->
    <select id="selectCountOption" parameterType="string" resultType="int">
        SELECT (OPT_STOCK_QTY - NVL(OPT_EXP_QTY, 0))    AS CNT
        FROM PROD_OP
        WHERE OPT_CD = #{optCd}
    </select>

    <select id="selectOption" parameterType="string" resultType="hashmap">
        SELECT DISTINCT(PO.OPT_CD)          AS OPT_CD
            , POI.OP_GB_CD                  AS OP_GB_CD
            , REPLACE(LTRIM (SYS_CONNECT_BY_PATH (PO.OPT_NM, ' // '), ' // '), '//', '/') AS OPT_NM
            , PO.OPT_PRCE                   AS OPT_PRCE
            , NVL(PO.OPT_STOCK_QTY, 0)      AS OPT_STOCK_QTY
            , NVL(PO.OPT_EXP_QTY, 0)        AS OPT_EXP_QTY
        FROM PROD_OP PO, PROD_OP_INFO POI
        WHERE PO.OPT_CD = #{optCd}
            AND PO.OPT_GRP_CD = POI.OPT_GRP_CD
        START WITH PO.PAR_OPT_CD = '0'
        CONNECT BY PRIOR PO.OPT_CD = PO.PAR_OPT_CD
    </select>

    <select id="selectListFreeshareReq" parameterType="string" resultMap="freeshareResultMap">
        SELECT Z.CNT             AS CNT
            , Z.PROD_CODE       AS PROD_CODE
            , Z.REQ_SEQ         AS REQ_SEQ
            , Z.REQ_MEMO        AS REQ_MEMO
            , Z.REGIST_DT       AS REGIST_DT
            , Z.RCV_NM          AS RCV_NM
            , Z.MBER_NICK       AS MBER_NICK
            , Z.SSO_GB_CD       AS SSO_GB_CD
            , Z.MBER_SEQ        AS MBER_SEQ
            , Z.MBER_EMAIL      AS MBER_EMAIL
            , Z.FILE_URL       AS FILE_URL
            , FI1.FILE_URL                  AS LEVEL_IMG
        FROM (
                SELECT Y.RNUM           AS RNUM
                    , W.CNT             AS CNT
                    , Y.PROD_CODE       AS PROD_CODE
                    , Y.REQ_SEQ         AS REQ_SEQ
                    , Y.REQ_MEMO        AS REQ_MEMO
                    , Y.REGIST_DT       AS REGIST_DT
                    , Y.RCV_NM          AS RCV_NM
                    , Y.SSO_GB_CD       AS SSO_GB_CD
                    , Y.MBER_NICK       AS MBER_NICK
                    , Y.MBER_SEQ        AS MBER_SEQ
                    , Y.MBER_EMAIL      AS MBER_EMAIL
                    , FI.FILE_URL       AS FILE_URL
                    , ML.FILE_SEQ       AS LEVEL_IMG_SEQ
                FROM (
                        SELECT COUNT(*)         AS CNT
                        FROM PROD_SUBMIT_INFO
                        WHERE PROD_TYPE_CD = '3'
                            AND PROD_CODE = #{prodCode}
                    )W,
                    (
                    SELECT ROWNUM       AS RNUM
                        , X.PROD_CODE   AS PROD_CODE
                        , X.REQ_SEQ     AS REQ_SEQ
                        , X.REQ_MEMO    AS REQ_MEMO
                        , X.REGIST_DT   AS REGIST_DT
                        , X.RCV_NM      AS RCV_NM
                        , MI.SSO_GB_CD  AS SSO_GB_CD
                        , MI.MBER_NICK  AS MBER_NICK
                        , MI.MBER_SEQ   AS MBER_SEQ
                        , MI.MBER_EMAIL AS MBER_EMAIL
                        , MI.MBER_IMG   AS MBER_IMG
                        , MDI.BUY_MBER_LEV_SEQ AS BUY_MBER_LEV_SEQ
                    FROM (
                        SELECT PROD_CODE    AS PROD_CODE
                            , REQ_SEQ       AS REQ_SEQ
                            , REQ_MEMO      AS REQ_MEMO
                            , REGIST_DT     AS REGIST_DT
                            , RCV_NM        AS RCV_NM
                            , MBER_SEQ      AS MBER_SEQ
                        FROM PROD_SUBMIT_INFO
                        WHERE PROD_TYPE_CD = '3'
                            AND PROD_CODE = #{prodCode}
                        ORDER BY REGIST_DT DESC
                    ) X
                        INNER JOIN MBER_INFO MI ON X.MBER_SEQ = MI.MBER_SEQ
                        LEFT OUTER JOIN MBER_DTL_INFO MDI ON MI.MBER_SEQ = MDI.MBER_SEQ
                ) Y
                    LEFT OUTER JOIN FILE_INFO FI ON Y.MBER_IMG = FI.FILE_SEQ
                    LEFT OUTER JOIN MBER_LEV ML ON Y.BUY_MBER_LEV_SEQ = ML.MBER_LEV_SEQ
                WHERE Y.RNUM <![CDATA[<=]]> 3
            ) Z
            LEFT OUTER JOIN FILE_INFO FI1 ON Z.LEVEL_IMG_SEQ = FI1.FILE_SEQ


    </select>

	<select id="selectListReFreeshareReq" parameterType="string" resultMap="freeshareResultMap">
		SELECT Z.CNT             AS CNT
		    , Z.PROD_CODE       AS PROD_CODE
		    , Z.REQ_SEQ         AS REQ_SEQ
		    , Z.REQ_MEMO        AS REQ_MEMO
		    , Z.REGIST_DT       AS REGIST_DT
		    , Z.RCV_NM          AS RCV_NM
	        , Z.MBER_NICK  		AS MBER_NICK
		    , Z.SSO_GB_CD		AS SSO_GB_CD
		    , Z.MBER_SEQ        AS MBER_SEQ
		    , Z.MBER_EMAIL      AS MBER_EMAIL
		    , Z.FILE_URL       AS FILE_URL
		    , FI1.FILE_URL				    AS LEVEL_IMG
		FROM (
				SELECT Y.RNUM           AS RNUM
				    , W.CNT             AS CNT
				    , Y.PROD_CODE       AS PROD_CODE
				    , Y.REQ_SEQ         AS REQ_SEQ
				    , Y.REQ_MEMO        AS REQ_MEMO
				    , Y.REGIST_DT       AS REGIST_DT
				    , Y.RCV_NM          AS RCV_NM
				    , Y.SSO_GB_CD		AS SSO_GB_CD
				    , Y.MBER_NICK  		AS MBER_NICK
				    , Y.MBER_SEQ        AS MBER_SEQ
				    , Y.MBER_EMAIL      AS MBER_EMAIL
				    , FI.FILE_URL       AS FILE_URL
				    , ML.FILE_SEQ		AS LEVEL_IMG_SEQ
				FROM (
				        SELECT COUNT(*) 		AS CNT
				        FROM PROD_SUBMIT_INFO
				        WHERE PROD_TYPE_CD = '3'
				            AND PROD_CODE = #{prodCode}
				    )W,
				    (
				    SELECT ROWNUM       AS RNUM
				    	, X.PROD_CODE   AS PROD_CODE
				        , X.REQ_SEQ     AS REQ_SEQ
				        , X.REQ_MEMO    AS REQ_MEMO
				        , X.REGIST_DT   AS REGIST_DT
				        , X.RCV_NM      AS RCV_NM
				        , MI.SSO_GB_CD  AS SSO_GB_CD
				        , MI.MBER_NICK  AS MBER_NICK
				        , MI.MBER_SEQ   AS MBER_SEQ
				        , MI.MBER_EMAIL AS MBER_EMAIL
				        , MI.MBER_IMG   AS MBER_IMG
				        , MDI.BUY_MBER_LEV_SEQ AS BUY_MBER_LEV_SEQ
				    FROM (
				        SELECT PROD_CODE    AS PROD_CODE
				        	, REQ_SEQ       AS REQ_SEQ
				            , REQ_MEMO      AS REQ_MEMO
				            , REGIST_DT     AS REGIST_DT
				            , RCV_NM        AS RCV_NM
				            , MBER_SEQ      AS MBER_SEQ
				        FROM PROD_SUBMIT_INFO
				        WHERE PROD_TYPE_CD = '3'
				            AND PROD_CODE = #{prodCode}
				        ORDER BY REGIST_DT DESC
				    ) X
		                INNER JOIN MBER_INFO MI ON X.MBER_SEQ = MI.MBER_SEQ
		                LEFT OUTER JOIN MBER_DTL_INFO MDI ON MI.MBER_SEQ = MDI.MBER_SEQ
				) Y
		            LEFT OUTER JOIN FILE_INFO FI ON Y.MBER_IMG = FI.FILE_SEQ
		            LEFT OUTER JOIN MBER_LEV ML ON Y.BUY_MBER_LEV_SEQ = ML.MBER_LEV_SEQ
		           WHERE Y.RNUM <![CDATA[>=]]> 1
		   			 AND Y.RNUM <![CDATA[<=]]> 20
		    ) Z
		    LEFT OUTER JOIN FILE_INFO FI1 ON Z.LEVEL_IMG_SEQ = FI1.FILE_SEQ


	</select>
	
	<select id="selectListPcFreeshareReqCnt" parameterType="hashmap" resultType="int">
		SELECT COUNT(*) AS CNT
		FROM (
				SELECT Y.RNUM           AS RNUM
				    , W.CNT             AS CNT
				    , Y.PROD_CODE       AS PROD_CODE
				    , Y.REQ_SEQ         AS REQ_SEQ
				    , Y.REQ_MEMO        AS REQ_MEMO
				    , Y.REGIST_DT       AS REGIST_DT
				    , Y.RCV_NM          AS RCV_NM
				    , Y.SSO_GB_CD		AS SSO_GB_CD
				    , Y.MBER_NICK  		AS MBER_NICK
				    , Y.MBER_SEQ        AS MBER_SEQ
				    , Y.MBER_EMAIL      AS MBER_EMAIL
				    , FI.FILE_URL       AS FILE_URL
				    , ML.FILE_SEQ		AS LEVEL_IMG_SEQ
				FROM (
				        SELECT COUNT(*) 		AS CNT
				        FROM PROD_SUBMIT_INFO
				        WHERE PROD_TYPE_CD = '3'
				            AND PROD_CODE = #{prodCode}
				    )W,
				    (
				    SELECT ROWNUM       AS RNUM
				    	, X.PROD_CODE   AS PROD_CODE
				        , X.REQ_SEQ     AS REQ_SEQ
				        , X.REQ_MEMO    AS REQ_MEMO
				        , X.REGIST_DT   AS REGIST_DT
				        , X.RCV_NM      AS RCV_NM
				        , MI.SSO_GB_CD  AS SSO_GB_CD
				        , MI.MBER_NICK  AS MBER_NICK
				        , MI.MBER_SEQ   AS MBER_SEQ
				        , MI.MBER_EMAIL AS MBER_EMAIL
				        , MI.MBER_IMG   AS MBER_IMG
				        , MDI.BUY_MBER_LEV_SEQ AS BUY_MBER_LEV_SEQ
				    FROM (
				        SELECT PROD_CODE    AS PROD_CODE
				        	, REQ_SEQ       AS REQ_SEQ
				            , REQ_MEMO      AS REQ_MEMO
				            , REGIST_DT     AS REGIST_DT
				            , RCV_NM        AS RCV_NM
				            , MBER_SEQ      AS MBER_SEQ
				        FROM PROD_SUBMIT_INFO
				        WHERE PROD_TYPE_CD = '3'
				            AND PROD_CODE = #{prodCode}
				        ORDER BY REGIST_DT DESC
				    ) X
		                INNER JOIN MBER_INFO MI ON X.MBER_SEQ = MI.MBER_SEQ
		                LEFT OUTER JOIN MBER_DTL_INFO MDI ON MI.MBER_SEQ = MDI.MBER_SEQ
				) Y
		            LEFT OUTER JOIN FILE_INFO FI ON Y.MBER_IMG = FI.FILE_SEQ
		            LEFT OUTER JOIN MBER_LEV ML ON Y.BUY_MBER_LEV_SEQ = ML.MBER_LEV_SEQ
				WHERE Y.RNUM <![CDATA[<=]]> 3
		    ) Z
		    LEFT OUTER JOIN FILE_INFO FI1 ON Z.LEVEL_IMG_SEQ = FI1.FILE_SEQ
	</select>
	
	<select id="selectListPcFreeshareReq" parameterType="string" resultMap="freeshareResultMap">
		<include refid="webCommonMapper.pagingHeader" />
		SELECT Z.CNT             AS CNT
		    , Z.PROD_CODE       AS PROD_CODE
		    , Z.REQ_SEQ         AS REQ_SEQ
		    , Z.REQ_MEMO        AS REQ_MEMO
		    , Z.REGIST_DT       AS REGIST_DT
		    , Z.RCV_NM          AS RCV_NM
	        , Z.MBER_NICK  		AS MBER_NICK
		    , Z.SSO_GB_CD		AS SSO_GB_CD
		    , Z.MBER_SEQ        AS MBER_SEQ
		    , Z.MBER_EMAIL      AS MBER_EMAIL
		    , Z.FILE_URL       AS FILE_URL
		    , FI1.FILE_URL				    AS LEVEL_IMG
		    , ROW_NUMBER() OVER(PARTITION BY Z.PROD_CODE ORDER BY Z.REGIST_DT DESC ) AS NO
		FROM (
				SELECT Y.RNUM           AS RNUM
				    , W.CNT             AS CNT
				    , Y.PROD_CODE       AS PROD_CODE
				    , Y.REQ_SEQ         AS REQ_SEQ
				    , Y.REQ_MEMO        AS REQ_MEMO
				    , Y.REGIST_DT       AS REGIST_DT
				    , Y.RCV_NM          AS RCV_NM
				    , Y.SSO_GB_CD		AS SSO_GB_CD
				    , Y.MBER_NICK  		AS MBER_NICK
				    , Y.MBER_SEQ        AS MBER_SEQ
				    , Y.MBER_EMAIL      AS MBER_EMAIL
				    , FI.FILE_URL       AS FILE_URL
				    , ML.FILE_SEQ		AS LEVEL_IMG_SEQ
				FROM (
				        SELECT COUNT(*) 		AS CNT
				        FROM PROD_SUBMIT_INFO
				        WHERE PROD_TYPE_CD = '3'
				            AND PROD_CODE = #{prodCode}
				    )W,
				    (
				    SELECT ROWNUM       AS RNUM
				    	, X.PROD_CODE   AS PROD_CODE
				        , X.REQ_SEQ     AS REQ_SEQ
				        , X.REQ_MEMO    AS REQ_MEMO
				        , X.REGIST_DT   AS REGIST_DT
				        , X.RCV_NM      AS RCV_NM
				        , MI.SSO_GB_CD  AS SSO_GB_CD
				        , MI.MBER_NICK  AS MBER_NICK
				        , MI.MBER_SEQ   AS MBER_SEQ
				        , MI.MBER_EMAIL AS MBER_EMAIL
				        , MI.MBER_IMG   AS MBER_IMG
				        , MDI.BUY_MBER_LEV_SEQ AS BUY_MBER_LEV_SEQ
				    FROM (
				        SELECT PROD_CODE    AS PROD_CODE
				        	, REQ_SEQ       AS REQ_SEQ
				            , REQ_MEMO      AS REQ_MEMO
				            , REGIST_DT     AS REGIST_DT
				            , RCV_NM        AS RCV_NM
				            , MBER_SEQ      AS MBER_SEQ
				        FROM PROD_SUBMIT_INFO
				        WHERE PROD_TYPE_CD = '3'
				            AND PROD_CODE = #{prodCode}
				        ORDER BY REGIST_DT DESC
				    ) X
		                INNER JOIN MBER_INFO MI ON X.MBER_SEQ = MI.MBER_SEQ
		                LEFT OUTER JOIN MBER_DTL_INFO MDI ON MI.MBER_SEQ = MDI.MBER_SEQ
				) Y
		            LEFT OUTER JOIN FILE_INFO FI ON Y.MBER_IMG = FI.FILE_SEQ
		            LEFT OUTER JOIN MBER_LEV ML ON Y.BUY_MBER_LEV_SEQ = ML.MBER_LEV_SEQ
				WHERE Y.RNUM <![CDATA[<=]]> 3
		    ) Z
		    LEFT OUTER JOIN FILE_INFO FI1 ON Z.LEVEL_IMG_SEQ = FI1.FILE_SEQ
		<include refid="webCommonMapper.pagingFooter" />
	</select>

    <!-- 주문서 등록 전 주문 내용 정합성 체크-->
    <select id="selectOrdProduct" parameterType="com.ssocio.sharing.vo.web.OrdProduct" resultMap="ordProductResultMap">
        SELECT PROD_CODE
            , NVL(SELL_PRCE, 0) AS SELL_PRCE
            , NVL(BNFIT_DSCNT_PRCE, 0) AS BNFIT_DSCNT_PRCE
            , NVL(OPT_CD, '') AS OPT_CD
            , NVL(OP_GB_CD, '') AS OP_GB_CD
            , NVL(OPT_PRCE, 0) AS OPT_PRCE
        FROM (
            SELECT P.PROD_CODE      AS PROD_CODE
                , P.SELL_PRCE       AS SELL_PRCE
                , (SELECT NVL(CI.BNFIT_DSCNT_PRCE, 0) FROM CPN_INFO CI, MBER_CPN_INFO MCI WHERE CI.CPN_GRP_CD = MCI.CPN_GRP_CD AND MCI.CPN_NO = #{cpnNo} ) AS BNFIT_DSCNT_PRCE
                , OPT.OPT_CD        AS OPT_CD
                , OPT.OP_GB_CD      AS OP_GB_CD
                , OPT.OPT_PRCE      AS OPT_PRCE
            FROM PROD P
                    LEFT OUTER JOIN (
                                SELECT POI.PROD_CODE
                                    , PO.OPT_CD
                                    , POI.OP_GB_CD
                                    , PO.OPT_PRCE
                                FROM PROD_OP PO, PROD_OP_INFO POI
                                WHERE PO.OPT_GRP_CD = POI.OPT_GRP_CD
                                    <choose>
                                        <when test="options == null">
                                            AND PO.OPT_CD = ''
                                        </when>
                                        <otherwise>
                                            AND PO.OPT_CD IN
                                            <foreach item="option" collection="options" open="(" close=")" separator=",">
                                                #{option.optCd}
                                            </foreach>
                                        </otherwise>
                                    </choose>
                                ) OPT ON P.PROD_CODE = OPT.PROD_CODE
            WHERE P.PROD_CODE = #{prodCode}
        )
    </select>

    <!-- 주문서 등록 -->
    <update id="insertOrdInfo" parameterType="hashmap">
        INSERT INTO ORD_INFO( ORD_CD                    <!--  주문코드  -->
                            , SELT_GB_CD            <!--  결제방법코드  -->
                            , MBER_SEQ              <!--  회원고유번호 -->
                            , REAL_SELT_AMT         <!--  실결제금액  -->
                            , ORD_AMT               <!--  주문금액  -->
                            , DSCNT_BF_ORD_AMT      <!--  할인전주문금액 -->
                            , DSCNT_AMT             <!--  할인금액 -->
                            , ORD_STAT_CD           <!--  주문상태코드 -->
                            , ORD_REG_DATE          <!--  주문접수일 -->
                            , POINT_USE_AMT         <!--  포인트사용금액 -->
                            , CPN_USE_AMT           <!-- 쿠폰사용금액 (???) -->
                            , DLV_SELT_AMT          <!--  배송비결제금액  -->
                            , SESS_ID               <!--  세션ID  -->
                            , ORD_DEL_YN            <!--  주문삭제여부  -->
                            , TOT_ORD_QTY           <!--  총주문수량  -->
                            , TOT_ORD_PROD_CNT      <!--  총주문상품건수  -->
                            , CON_GB_CD             <!--  접속구분코드  -->
                            , ORD_EMAIL             <!--  주문자 이메일  -->
                            , ORD_NM                <!--  주문자 이름  -->
                            , ORD_HP                <!--  주문자 휴대폰 번호  -->
                            , REGIST_DT             <!--  등록일시  -->
                            , UPDT_DT               <!--  수정일시  -->
        )VALUES (
                #{ORD_CD}
                , #{SELT_GB_CD}
                , #{MBER_SEQ}
                , #{REAL_SELT_AMT}
                , #{ORD_AMT}
                , #{DSCNT_BF_ORD_AMT}
                , #{DSCNT_AMT}
                , #{ORD_STAT_CD}
                , SYSDATE
                , #{POINT_USE_AMT}
                , #{CPN_USE_AMT}
                , #{DLV_SELT_AMT}
                , #{SESS_ID}
                , 'N'
                , #{TOT_ORD_QTY}
                , #{TOT_ORD_PROD_CNT}
                , #{CON_GB_CD}
                , (SELECT MBER_EMAIL FROM MBER_INFO WHERE MBER_SEQ = #{MBER_SEQ})
                , (SELECT MBER_NM FROM MBER_INFO WHERE MBER_SEQ = #{MBER_SEQ})
                , (SELECT MBER_PHONE FROM MBER_INFO WHERE MBER_SEQ = #{MBER_SEQ})
                , SYSDATE
                , SYSDATE
        )
    </update>

    <!-- 주문 결제 정보 등록 -->
    <insert id="insertOrdSeltInfo" parameterType="hashmap">
        INSERT INTO ORD_SETL_INFO( ORD_CD           <!-- 주문코드  -->
                            , REG_SEQ               <!-- 등록일련번호  -->
                            , TRD_GB_CD             <!-- 거래구분코드  -->
                            , TRD_NO                <!-- 거래번호  -->
                            , TRD_AMT               <!-- 거래금액  -->
                            , APPR_DT               <!-- 승인일시 (신용카드 전용)  -->
                            , APPR_NO               <!-- 승인번호 (신용카드 전용) -->
                            , FREE_INT_YN           <!-- 무이자여부 -->
                            , EASY_TERM             <!-- 할부개월수 -->
                            , RLT_CD                <!-- 결과코드  -->
                            , RLT_MSG               <!-- 결과메시지  -->
                            , SETL_NM               <!-- 결제자  -->
                            , CARD_COMP_NM          <!-- 결제카드명 (신용카드 전용)  -->
                            , CARD_NO               <!-- 결제카드번호 (신용카드 전용)  -->
                            , PAY_APPLY_DAY         <!-- 결제일  -->
                            , INPUT_DATA            <!--   -->
                            , OUTPUT_DATA           <!--   -->
                            , RESERVE_ORD_NO        <!-- 주문 예약 번호 (페이코 전용) -->
                            , ORD_NO                <!-- 주문 번호 (페이코 전용) -->
                            , ORD_CER_KEY           <!-- 주문 인증 키 (페이코 전용) -->
                            , BILL_KEY              <!-- 배치 키 (정기결제 전용)  -->
                            , BANK_CD               <!-- 은행 코드 [2015-11-04 추가] -->
                            , CARRIER               <!-- 통신사 [2015-11-04 추가] -->
                            , DSTADDR               <!-- 결제 전화번호 [2015-11-04 추가] -->
                            , REGIST_DT             <!-- 등록일시  -->
                            , UPDT_DT               <!-- 수정일시  -->
        )VALUES ( #{ORD_CD}
                , (SELECT NVL(MAX(REG_SEQ), 0) + 1 FROM ORD_SETL_INFO WHERE ORD_CD = #{ORD_CD})
                , #{TRD_GB_CD}
                , #{TRD_NO}
                , #{TRD_AMT}
                , #{APPR_DT}
                , #{APPR_NO}
                , #{FREE_INT_YN}
                , #{EASY_TERM}
                , #{RLT_CD}
                , #{RLT_MSG}
                , #{SETL_NM}
                , #{CARD_COMP_NM}
                , #{CARD_NO}
                , #{PAY_APPLY_DAY}
                , #{INPUT_DATA}
                , #{OUTPUT_DATA}
                , #{RESERVE_ORD_NO}
                , #{ORD_NO}
                , #{ORD_CER_KEY}
                , #{BILL_KEY}
                , #{BANK_CD}                <!-- 은행 코드 [2015-11-04 추가] -->
                , #{CARRIER}                <!-- 통신사 [2015-11-04 추가] -->
                , #{DSTADDR}                <!-- 결제 전화번호 [2015-11-04 추가] -->
                , SYSDATE
                , SYSDATE
        )
    </insert>

    <!-- 주문 배송지 정보 등록 -->
    <update id="insertOrdDlvInfo" parameterType="hashmap">
        INSERT INTO ORD_DLV_INFO( ORD_CD            <!-- 주문코드  -->
                            , RCV_NM                <!-- 받는자명  -->
                            , RCV_TEL               <!-- 받는자전화번호  -->
                            , RCV_HP                <!--  휴대폰 번호  -->
                            , ADDR_GB               <!--  주소 구분  -->
                            , ZIP_CD                <!--  우편번호  -->
                            , JUSO_JIBEN            <!--  배송지 주소 -->
                            , JUSO_DORO             <!--  배송지 주소 -->
                            , JUSO_DTL              <!--  배송지 주소 상세 -->
                            , DLV_MSG               <!--  배송 메시지  -->
                            , SECU_NO_USE_YN        <!--  안심번호사용여부  -->
                            , SECU_NO               <!--  안심번호 -->
                            , REGIST_DT             <!--  등록일시  -->
                            , UPDT_DT               <!--  수정일시  -->
        )VALUES ( #{ORD_CD}
                , #{RCV_NM}
                , #{RCV_TEL}
                , ''
                , ''
                , #{ZIP_CD}
                , #{JUSO_JIBEN}
                , #{JUSO_DORO}
                , #{JUSO_DTL}
                , #{DLV_MSG}
                , #{SECU_NO_USE_YN}
                , #{SECU_NO}
                , SYSDATE
                , SYSDATE
        )
    </update>

    <!-- 주문 상품 정보 등록 -->
    <update id="insertOrdProdInfo" parameterType="hashmap"  useGeneratedKeys="true" keyProperty="PROD_SEQ" keyColumn="PROD_SEQ">
        INSERT INTO ORD_PROD_INFO( PROD_CODE                <!--  상품코드  -->
                                , ORD_CD                <!--  주문코드  -->
                                , PROD_SEQ              <!--  상품일련번호  -->
                                , PROC_STAT_CD          <!--  처리상태코드    -->
                                , PROD_ORD_AMT          <!--  주문 금액 -->
                                , DLV_PRCE              <!--  배송비결제금액  -->
                                <if test='PROD_CPN_CD != null and PROD_CPN_CD != ""'>
                                    , PROD_CPN_CD       <!--  쿠폰 코드 -->
                                </if>
                                , CPN_USE_AMT           <!--  쿠폰사용금액  -->
                                , DLV_PAY_GB_CD         <!--  배송비결제구분코드  -->
                                , PROD_PRCE             <!--  판매가격  -->
                                , ORD_QTY               <!--  주문수량  -->
                                , REGIST_DT             <!--  등록일시  -->
                                , UPDT_DT               <!--  수정일시  -->
                                , SELLER_CD             <!--  판매자 코드 -->
                                , PROD_TYPE_CD          <!--  상품구분코드  -->
                                , MBER_SEQ              <!--  회원일련번호  -->
                                <if test='SHARE_TERM != null and SHARE_TERM != ""'>
                                    , SHARE_TERM        <!--  셰어링 일자 -->
                                </if>
                                <if test='DLV_PAY_F_CD != null and DLV_PAY_F_CD != ""'>
                                    , DLV_PAY_F_CD      <!--  배송비결제유형 -->
                                </if>
                                , DLV_GRP_CODE
                                , TAX_PLAN        <!--  기획전 수수료 -->
                                , TAX_PROD        <!--  상품 수수료 -->
                                , TAX_SELLER      <!--  셀러 수수료 -->
                                , TAX_CTRY        <!--  카테고리수수료 -->
        )VALUES ( #{PROD_CODE}
                , #{ORD_CD}
                , (SELECT NVL(MAX(PROD_SEQ), 0) + 1 FROM ORD_PROD_INFO WHERE MBER_SEQ = #{MBER_SEQ} AND ORD_CD = #{ORD_CD})
                , #{PROC_STAT_CD}
                , #{PROD_ORD_AMT}
                , #{DLV_PRCE}
                <if test='PROD_CPN_CD != null and PROD_CPN_CD != ""'>
                    , #{PROD_CPN_CD}
                </if>
                , #{CPN_USE_AMT}
                , #{DLV_PAY_GB_CD}
                , #{PROD_PRCE}
                , #{ORD_QTY}
                , SYSDATE
                , SYSDATE
                , (SELECT SELLER_CD FROM SELLER_INFO_CFG WHERE MBER_SEQ = #{MBER_SEQ})
                , #{PROD_TYPE_CD}
                , #{MBER_SEQ}
                <if test='SHARE_TERM != null and SHARE_TERM != ""'>
                    , #{SHARE_TERM}
                </if>
                <if test='DLV_PAY_F_CD != null and DLV_PAY_F_CD != ""'>
                    , #{DLV_PAY_F_CD}
                </if>
                , #{DLV_GRP_CODE}
                , NVL( (SELECT pi.PLAN_TAX
                          FROM PLAN_INFO pi , PLAN_CONT pc
                         WHERE pi.PLAN_CD = pc.PLAN_CD
                           AND pc.CONT_NO = #{PROD_CODE}
                           AND ROWNUM <![CDATA[ <= ]]> 1
                       ), 0)
                , NVL((SELECT PROD_TAX  FROM PROD WHERE PROD_CODE = #{PROD_CODE} AND ROWNUM <![CDATA[ <= ]]> 1), 0)
                , NVL((SELECT RATE FROM SELLER_INFO_CFG WHERE MBER_SEQ = #{SELLER_MBER_SEQ} AND ROWNUM <![CDATA[ <= ]]> 1), 0)
                , NVL( (
                         SELECT AA.TAX_CTRY
                           FROM (
                                  SELECT A.CTRY_CD
                                       , CASE WHEN #{PROD_TYPE_CD} = '1' THEN A.TAX_SALE 
                                              WHEN #{PROD_TYPE_CD} = '2' THEN A.TAX_SHARING
                                              WHEN #{PROD_TYPE_CD} = '5' THEN A.TAX_RENTAL
                                              ELSE 0
                                         END AS TAX_CTRY
                                    FROM CTRY A
                                   WHERE 1=1
                                   START WITH A.CTRY_CD = #{CTRY_CD}
                                 CONNECT BY A.CTRY_CD = PRIOR A.PARENT_CTRY_CD
                                   ORDER BY A.CTRY_CD DESC
                                ) AA
                          WHERE 1=1
                            AND 0 <![CDATA[ < ]]> NVL(AA.TAX_CTRY, 0)
                            AND ROWNUM <![CDATA[ <= ]]> 1
                       ), 0)
        )
    </update>
    <!-- //주문 상품 정보 등록 -->

    <update id="updateUsedOrdQty" parameterType="hashmap">
        UPDATE PROD
        SET EXP_QTY=NVL(EXP_QTY, 0) + #{ORD_QTY}, UPDT_DT=SYSDATE
        WHERE PROD_CODE = #{PROD_CODE}
    </update>
    
    <select id="selectUsedOrdQty" parameterType="string" resultType="int">
   			SELECT  (NVL(STOCK_QTY, 1) - NVL(EXP_QTY, 0)) CNT FROM PROD WHERE PROD_CODE = #{PROD_CODE}
    </select>
    

    <update id="updateProdOptionQty" parameterType="hashmap">
        UPDATE PROD_OP
        SET OPT_EXP_QTY = NVL(OPT_EXP_QTY, 0) + #{OPT_QTY}
        WHERE OPT_CD = #{OPT_CD}
    </update>

    <!-- 사용 쿠폰 체크 -->
    <update id="updateUsedCoupon" parameterType="hashmap">
        UPDATE MBER_CPN_INFO
        SET USE_YN='Y', USE_DATE=SYSDATE, UPDT_DT=SYSDATE, PROD_CODE=#{PROD_CODE}
        WHERE MBER_SEQ = #{MBER_SEQ}
            AND CPN_NO = #{CPN_NO}
    </update>

    <!-- 사용 포인트 체크 -->
    <update id="updateUsedPoint" parameterType="hashmap">
        UPDATE MBER_INFO
        SET POINT=POINT-#{POINT_USE_AMT} , UPDT_DT=SYSDATE
        WHERE MBER_SEQ = #{MBER_SEQ}
    </update>

    <update id="insertPointUseLog" parameterType="hashmap">
        INSERT INTO POINT_USE_LOG(MBER_SEQ
                                , POINT_SEQ
                                , POINT
                                , POINT_CD
                                , CHG_REASON
                                , POINT_TYPE
                                , REGIST_DT
        ) VALUES(#{MBER_SEQ}
                , SEQ_POINT_USE.nextval
                , #{POINT_USE_AMT}
                , '21'
                , #{CHG_REASON}
                , ''
                , SYSDATE
        )
    </update>


    <!-- 주문 상품 옵션 정보 등록 -->
    <update id="insertOrdProdOptInfo" parameterType="hashmap">
        INSERT INTO ORD_PROD_OPT_INFO( ORD_CD               <!--  주문코드  -->
                                    , PROD_CODE             <!--  상품코드  -->
                                    , PROD_SEQ              <!--  상품일련번호  -->
                                    , OPT_CD                <!--  옵션코드  -->
                                    , OPT_QTY               <!--  옵션수량  -->
                                    , REGIST_DT
                                    , UPDT_DT
        )VALUES ( #{ORD_CD}
                , #{PROD_CODE}
                , #{PROD_SEQ}
                , #{OPT_CD}
                , #{OPT_QTY}
                , SYSDATE
                , SYSDATE
        )
    </update>
    <!-- //주문 상품 옵션 정보 등록  -->

    <!-- 주문 상품 쿠폰 정보 등록 -->
    <update id="insertOrdProdCpnInfo" parameterType="hashmap">
        INSERT INTO ORD_PROD_CPN_INFO( ORD_CD               <!--  주문코드  -->
                                    , PROD_CODE             <!--  상품코드  -->
                                    , PROD_SEQ              <!--  상품일련번호  -->
                                    , CPN_NO                <!--  쿠폰코드  -->
                                    , REGIST_DT
                                    , UPDT_DT
        )VALUES ( #{ORD_CD}
                , #{PROD_CODE}
                , #{PROD_SEQ}
                , #{CPN_NO}
                , SYSDATE
                , SYSDATE
        )
    </update>
    <!-- //주문 상품 옵션 정보 등록  -->

    <!-- 회원 조회 -->
    <select id="selectMberInfo" parameterType="int" resultType="hashmap">
        SELECT X.MBER_GB_CD         AS MBER_GB_CD
            , X.MBER_EMAIL          AS MBER_EMAIL
            , X.MBER_NICK           AS MBER_NICK
            , X.MBER_PHONE          AS MBER_PHONE
            , X.BIRTH               AS BIRTH
            , X.AGE                 AS AGE
            , X.MBER_NM             AS MBER_NM
            , X.JUSO_DORO           AS JUSO_DORO
            , X.JUSO_JIBEN          AS JUSO_JIBEN
            , X.JUSO_DTL            AS JUSO_DTL
            , X.POINT               AS POINT
            , FI1.FILE_URL          AS MBER_FILE_URL
            , FI3.FILE_SEQ          AS FILE_SEQ
            , X.MINI_SHOP_PATH      AS MINI_SHOP_PATH
            , X.MINI_SHOP_NM        AS MINI_SHOP_NM
            , FI2.FILE_URL          AS MINI_SHOP_FILE_URL
            , FI3.FILE_URL          AS MINI_SHOP_PROFILE_URL
            , FI4.FILE_URL          AS LEV_FILE_URL
            , X.CMPNY_NM            AS CMPNY_NM
            , X.CMPNY_NO            AS CMPNY_NO
            , X.TELE_MKT_NOTI_NO    AS TELE_MKT_NOTI_NO
            , X.COPO_NO             AS COPO_NO
            , X.CEO_NM              AS CEO_NM
            , X.CMPNY_ZIP_CD        AS CMPNY_ZIP_CD
            , X.CMPNY_JUSO_DORO     AS CMPNY_JUSO_DORO
            , X.CMPNY_JUSO_JIBEN    AS CMPNY_JUSO_JIBEN
            , X.CMPNY_JUSO_DTL      AS CMPNY_JUSO_DTL
            , X.CS_PER_EMAIL        AS CS_PER_EMAIL
            , X.CS_PER_TEL          AS CS_PER_TEL
        FROM( SELECT MI.MBER_GB_CD          AS MBER_GB_CD
                , MI.MBER_EMAIL             AS MBER_EMAIL
                , MI.MBER_NICK              AS MBER_NICK
                , MI.MBER_PHONE             AS MBER_PHONE
                , MI.BIRTH                  AS BIRTH
                , NVL2(MI.BIRTH, FLOOR(MONTHS_BETWEEN(SYSDATE, TO_DATE(MI.BIRTH, 'YYYYMMDD')) / 12), 0) AS AGE
                , MI.MBER_NM                AS MBER_NM
                , MI.JUSO_DORO              AS JUSO_DORO
                , MI.JUSO_JIBEN             AS JUSO_JIBEN
                , MI.JUSO_DTL               AS JUSO_DTL
                , NVL(MI.POINT, 0)          AS POINT
                , MI.MBER_IMG               AS MBER_FILE_SEQ
                , MMSI.MINI_SHOP_PATH       AS MINI_SHOP_PATH
                , MMSI.MINI_SHOP_NM         AS MINI_SHOP_NM
                , MMSI.FILE_SEQ             AS MINI_SHOP_FILE_SEQ
                , MMSI.MINI_PROFILE_SEQ     AS MINI_SHOP_PROFILE_SEQ
                , SIC.CMPNY_NM              AS CMPNY_NM
                , SIC.CMPNY_NO              AS CMPNY_NO
                , SIC.TELE_MKT_NOTI_NO      AS TELE_MKT_NOTI_NO
                , SIC.COPO_NO               AS COPO_NO
                , SIC.CEO_NM                AS CEO_NM
                , SIC.CMPNY_ZIP_CD          AS CMPNY_ZIP_CD
                , SIC.CMPNY_JUSO_DORO       AS CMPNY_JUSO_DORO
                , SIC.CMPNY_JUSO_JIBEN      AS CMPNY_JUSO_JIBEN
                , SIC.CMPNY_JUSO_DTL        AS CMPNY_JUSO_DTL
                , SIC.CS_PER_EMAIL          AS CS_PER_EMAIL
                , SIC.CS_PER_TEL            AS CS_PER_TEL
                , ML.FILE_SEQ               AS SELL_MBER_LEV_SEQ
            FROM MBER_INFO MI
                LEFT OUTER JOIN MBER_MINI_SHOP_INFO MMSI ON MI.MBER_SEQ = MMSI.MBER_SEQ
                LEFT OUTER JOIN SELLER_INFO_CFG SIC ON MI.MBER_SEQ = SIC.MBER_SEQ
                LEFT OUTER JOIN MBER_DTL_INFO MDI ON MI.MBER_SEQ = MDI.MBER_SEQ
                LEFT OUTER JOIN MBER_LEV ML ON ML.MBER_LEV_SEQ = MDI.SELL_MBER_LEV_SEQ
             WHERE MI.MBER_SEQ = #{MBER_SEQ}
        ) X
            LEFT OUTER JOIN FILE_INFO FI1 ON X.MBER_FILE_SEQ = FI1.FILE_SEQ
            LEFT OUTER JOIN FILE_INFO FI2 ON X.MINI_SHOP_FILE_SEQ = FI2.FILE_SEQ
            LEFT OUTER JOIN FILE_INFO FI3 ON X.MINI_SHOP_PROFILE_SEQ = FI3.FILE_SEQ <!-- 프로필이미지추가 -->
            LEFT OUTER JOIN FILE_INFO FI4 ON X.SELL_MBER_LEV_SEQ = FI4.FILE_SEQ
    </select>

    <!-- 쿠폰 사용가능 여부 조회 -->
    <select id="selectUsableCoupon" parameterType="hashmap" resultType="int">
        SELECT COUNT(CPN_NO) AS CNT
        FROM MBER_CPN_INFO
        WHERE MBER_SEQ = #{MBER_SEQ}
            AND USE_YN = 'N'
            AND CPN_NO = #{CPN_NO}
    </select>

    <!-- 사용가능 쿠폰 조회-->
    <select id="selectListCoupon" parameterType="int" resultMap="cpnResultMap">
        SELECT C.COM_CD                         AS CPN_GB_CD                    <!-- 쿠폰 종류 (10:상품할인, 20:배송비, 30:신규가입, 40:첫구매, 50:인쇄배포)-->
            , C.COM_CD_NM                       AS CPN_GB_NM                    <!-- 쿠폰 종류 명 -->
            , X.CPN_NO                          AS CPN_NO                       <!-- 쿠폰 번호 -->
            , X.CPN_GRP_CD                      AS CPN_GRP_CD                   <!-- 쿠폰 그룹 코드 -->
            , X.CPN_NM                          AS CPN_NM                       <!-- 쿠폰 명 -->
            , X.CPN_ISSUE_TGT_GB_CD             AS CPN_ISSUE_TGT_GB_CD          <!-- 쿠폰 사용가능 종류 (A:전체상품, B:특정상품, C:특정카테고리, D:특정기획전)-->
            , X.CPN_USE_CD                      AS CPN_USE_CD                   <!-- 쿠폰 사용 채널 종류 (A:전체, B:특정채널)-->
            , NVL(X.BNFIT_DSCNT_PRCE, 0)        AS BNFIT_DSCNT_PRCE             <!-- 혜택할인가격 -->
            , X.PROD_PRCE                       AS PROD_PRCE                    <!-- 최소 상품 금액 -->
            , X.BNFIT_DSCNT_RATE                AS BNFIT_DSCNT_RATE             <!-- 혜택할인률 -->
            , X.BNFIT_MAX_DSCNT_PRCE            AS BNFIT_MAX_DSCNT_PRCE         <!-- 최대 할인률 금액 -->
            , X.EXP_DAY                         AS EXP_DAY                      <!-- 유효기간 일자 -->
            , NVL(X.DUP_DSCNT_YN, 'N')          AS DUP_DSCNT_YN                 <!-- 중복할인여부 -->
            , NVL(X.DEL_CPN_YN, 'N')            AS DLV_CPN_YN                   <!-- 무료배송 쿠폰 -->
            , NVL(X.INFLOW_ROUTE_CPN_YN, 'N')   AS INFLOW_ROUTE_CPN_YN          <!-- 유입경로쿠폰 구분 -->
            , NVL(X.BNFIT_CHK, 'A')             AS BNFIT_CHK                    <!-- 혜택 종류(금액A, 할인률B) -->
            , X.PROD_CODE                       AS PROD_CODE                    <!-- 상품할인 쿠폰일 경우 상품코드 -->
            , X.PLAN_CD                         AS PLAN_CD                      <!-- 기획전 쿠폰일 경우 기획전 코드 -->
            , X.CTRY_CD                         AS CTRY_CD                      <!-- 카테고리 쿠폰일 경우 카테고리코드 -->
            , X.PCI_CPN_CD                      AS PCI_CPN_CD                   <!-- 인쇄배포용 쿠폰일 경우 쿠폰코드 -->
            , X.CHAN_GRP_CD                     AS CHAN_GRP_CD                      <!-- 상품할인 쿠폰일 경우 채널코드 -->
            , X.CHAN_CD                         AS CHAN_CD                      <!-- 상품할인 쿠폰일 경우 채널코드 -->
        FROM CODE C, (
                        SELECT MCI.CPN_NO                   AS CPN_NO
                            , MCI.CPN_GRP_CD                AS CPN_GRP_CD
                            , CI.CPN_NM                     AS CPN_NM
                            , CI.CPN_GB_CD                  AS CPN_GB_CD
                            , CI.CPN_ISSUE_TGT_GB_CD        AS CPN_ISSUE_TGT_GB_CD
                            , CI.CPN_USE_CD                 AS CPN_USE_CD
                            , CI.BNFIT_DSCNT_PRCE           AS BNFIT_DSCNT_PRCE
                            , CI.PROD_PRCE                  AS PROD_PRCE
                            , CI.BNFIT_DSCNT_RATE           AS BNFIT_DSCNT_RATE
                            , CI.BNFIT_MAX_DSCNT_PRCE       AS BNFIT_MAX_DSCNT_PRCE
                            , CI.EXP_DAY                    AS EXP_DAY
                            , CI.DUP_DSCNT_YN               AS DUP_DSCNT_YN
                            , CI.DEL_CPN_YN                 AS DEL_CPN_YN
                            , CI.INFLOW_ROUTE_CPN_YN        AS INFLOW_ROUTE_CPN_YN
                            , CI.BNFIT_CHK                  AS BNFIT_CHK
                            , P.PROD_CODE                   AS PROD_CODE
                            , CUP.PLAN_CD                   AS PLAN_CD
                            , PCC.CTRY_CD                   AS CTRY_CD
                            , PCI.CPN_NO                    AS PCI_CPN_CD
                            , CUC.CPN_GRP_CD                AS CHAN_GRP_CD
                            , CUC.CPN_CHAN_CD               AS CHAN_CD
                        FROM MBER_CPN_INFO MCI
                            INNER JOIN CPN_INFO CI ON MCI.CPN_GRP_CD = CI.CPN_GRP_CD AND CI.EXP_START_DT <![CDATA[<=]]> SYSDATE AND CI.EXP_END_DT <![CDATA[>=]]> SYSDATE
                            LEFT OUTER JOIN CPN_USE_PROD P ON MCI.CPN_GRP_CD = P.CPN_GRP_CD
                            LEFT OUTER JOIN CPN_USE_PLAN CUP ON MCI.CPN_GRP_CD = CUP.CPN_GRP_CD
                            LEFT OUTER JOIN CPN_USE_CHAN CUC ON MCI.CPN_GRP_CD = CUC.CPN_GRP_CD
                            LEFT OUTER JOIN PROD_CPN_CTRY PCC ON MCI.CPN_GRP_CD = PCC.CPN_GRP_CD
                            LEFT OUTER JOIN PRINT_CPN_INFO PCI ON MCI.CPN_GRP_CD = PCI.CPN_GRP_CD AND PCI.REG_YN = 'Y'
                        WHERE MCI.MBER_SEQ = #{mberSeq}
                            AND MCI.USE_YN = 'N'
                            AND MCI.CPN_GRP_CD = CI.CPN_GRP_CD
                            AND MCI.CPN_NO IS NOT NULL

        ) X
        WHERE C.GRP_CD = 'CPN_GB_CD'
            AND C.USE_YN = 'Y'
            AND C.COM_CD = X.CPN_GB_CD
        ORDER BY C.SORT_SEQ ASC, X.CPN_GRP_CD ASC, CHAN_CD
    </select>

    <!-- 상품 기획전 포함 여부 조회 -->
    <select id="selectCountPlan" parameterType="hashmap" resultType="int">
        SELECT COUNT(*) AS CNT
        FROM PLAN_CONT
        WHERE PLAN_CD = #{PLAN_CD}
            AND CONT_NO = #{PROD_CODE}
    </select>

    <!-- 배송지 조회-->
    <select id="selectDlvAddrs" parameterType="int" resultMap="dlvAddrResultMap">
        SELECT DLV.REG_SEQ      AS REG_SEQ          <!-- 기본 배송지 등록일련번호 -->
            , DLV.RCV_NM        AS RCV_NM           <!-- 기본 배송지명 -->
            , DLV.RCV_TEL       AS RCV_TEL          <!-- 기본 배송지 받는사람 전화번호 -->
            , DLV.RCV_HP        AS RCV_HP           <!-- 기본 배송지 받는사람 휴대폰번호 -->
            , DLV.RCV_EMAIL     AS RCV_EMAIL        <!-- 기본 배송지 받는사람 이메일 -->
            , DLV.ZIP_CD        AS ZIP_CD           <!-- 기본 배송지 우편번호 -->
            , DLV.ADDR_GB_CD    AS ADDR_GB_CD       <!-- 기본 배송지 주소구분코드 -->
            , DLV.JUSO_JIBEN    AS JUSO_JIBEN       <!-- 기본 배송지 주소 -->
            , DLV.JUSO_DORO     AS JUSO_DORO        <!-- 기본 배송지 도로명주소 -->
            , DLV.JUSO_DTL      AS JUSO_DTL         <!-- 기본 배송지 주소 상세 -->
            , DLV.DLV_NAME      AS DLV_NAME         <!-- 기본 배송지  -->
            , DLV.REGS_SEQ      AS REGS_SEQ         <!-- 전체 배송지 등록일련번호 -->
            , DLV.DLVS_NAME     AS DLVS_NAME        <!-- 전체 배송지명-->
            , NVL(ELM.EXT_LAND_CD, '99')   AS EXT_LAND_CD      <!--  제주 / 산간 여부 -->
        FROM (
            SELECT X.REG_SEQ        AS REG_SEQ
                , X.RCV_NM          AS RCV_NM
                , X.RCV_TEL         AS RCV_TEL
                , X.RCV_HP          AS RCV_HP
                , X.RCV_EMAIL       AS RCV_EMAIL
                , X.ZIP_CD          AS ZIP_CD
                , X.ADDR_GB_CD      AS ADDR_GB_CD
                , X.JUSO_JIBEN      AS JUSO_JIBEN
                , X.JUSO_DORO       AS JUSO_DORO
                , X.JUSO_DTL        AS JUSO_DTL
                , X.DLV_NAME        AS DLV_NAME
                , Y.REGS_SEQ        AS REGS_SEQ
                , Y.DLVS_NAME       AS DLVS_NAME
            FROM (
                SELECT REG_SEQ
                    , RCV_NM
                    , RCV_TEL
                    , RCV_HP
                    , RCV_EMAIL
                    , ZIP_CD
                    , ADDR_GB_CD
                    , JUSO_JIBEN
                    , JUSO_DORO
                    , JUSO_DTL
                    , DLV_NAME
                FROM DLV_ADDR_BOOK
                WHERE MBER_SEQ = #{mberSeq}
                    AND BASE_DLV_YN = 'Y'
            )X, (
                SELECT REG_SEQ  AS REGS_SEQ
                    , DLV_NAME   AS DLVS_NAME
                FROM DLV_ADDR_BOOK
                WHERE MBER_SEQ = #{mberSeq}
                ORDER BY REG_SEQ ASC
            ) Y
        ) DLV
            LEFT OUTER JOIN EXT_LAND_MAP ELM ON DLV.ZIP_CD = ELM.ZIP_CD
            ORDER BY DECODE(DLV.DLVS_NAME, DLV.DLV_NAME, 1, 0) DESC, DLV.REGS_SEQ ASC
    </select>

        <!-- 배송지 조회-->
    <select id="selectDlvAddr" parameterType="string" resultType="hashmap">
        SELECT DLV.REG_SEQ
            , DLV.RCV_NM
            , DLV.RCV_TEL
            , DLV.RCV_HP
            , DLV.RCV_EMAIL
            , DLV.ZIP_CD
            , DLV.ADDR_GB_CD
            , DLV.JUSO_JIBEN
            , DLV.JUSO_DORO
            , DLV.JUSO_DTL
            , DLV.DLV_NAME
            , DLV.BASE_DLV_YN
            , NVL(ELM.EXT_LAND_CD, '99')    AS EXT_LAND_CD
        FROM DLV_ADDR_BOOK DLV
            LEFT OUTER JOIN EXT_LAND_MAP ELM ON DLV.ZIP_CD = ELM.ZIP_CD
        WHERE REG_SEQ = #{regSeq}
    </select>

    <!-- 도서산간 조회 -->
    <select id="selectExtLandMap" parameterType="string" resultType="string">
        SELECT NVL(EXT_LAND_CD, '99')   AS EXT_LAND_CD
        FROM EXT_LAND_MAP
        WHERE ZIP_CD = #{zipCd}
    </select>

    <!-- 나눔 신청 -->
    <insert id="insertProdSubmitInfo" parameterType="hashmap">
        INSERT INTO PROD_SUBMIT_INFO(PROD_CODE
                                , MBER_SEQ
                                , REQ_SEQ
                                , PROD_TYPE_CD
                                , RCV_NM
                                , ZIP_CD
                                , JUSO_DORO
                                , JUSO_JIBEN
                                , JUSO_DTL
                                , TEL
                                , ANSIM_YN      <!-- 안심번호 사용 유무 -->
                                , ANSIM_NO      <!-- 안심번호 -->
                                , MEMO          <!-- 배송 메모 -->
                                , EMAIL
                                , CALLTIME      <!-- 연락가능 시간 -->
                                , REQ_MEMO      <!-- 신청메모 -->
                                , PROC_STAT_CD  <!-- 상태코드 -->
                                , REGIST_DT
                                , UPDT_DT
        ) VALUES( #{PROD_CODE}
                , #{MBER_SEQ}
                , (SELECT NVL(MAX(REQ_SEQ), 0) + 1 FROM PROD_SUBMIT_INFO)
                , #{PROD_TYPE_CD}
                , #{RCV_NM}
                , #{ZIP_CD}
                , #{JUSO_DORO}
                , #{JUSO_JIBEN}
                , #{JUSO_DTL}
                , #{RCV_TEL}
                , #{ANSIM_YN,jdbcType=CHAR }
                , #{ANSIM_NO}
                , #{DLV_MSG}
                , #{RCV_EMAIL}
                , #{CALLTIME}
                , #{REQ_MEMO}
                , #{PROC_STAT_CD}
                , SYSDATE
                , SYSDATE
        )
    </insert>

    <!-- mini shop 영역에 보여질 상품 thumbnail 조회-->
    <select id="selectListProdInMiniShop" parameterType="hashmap" resultType="hashmap">
        SELECT X.PROD_CODE      AS PROD_CODE
            , X.PROD_NM         AS PROD_NM
            , X.PROD_TYPE_CD    AS PROD_TYPE_CD
            , X.SELL_PRCE       AS SELL_PRCE
            , X.SHAR_PRCE       AS SHAR_PRCE
            , X.PROD_IMG_URL    AS PROD_IMG_URL
        FROM (
            SELECT P.MBER_SEQ               AS MBER_SEQ
                , P.PROD_CODE               AS PROD_CODE
                , P.PROD_NM                 AS PROD_NM
                , P.PROD_TYPE_CD            AS PROD_TYPE_CD
                , NVL(P.SELL_PRCE, 0)       AS SELL_PRCE
                , NVL(P.EXP_QTY, 0)         AS EXP_QTY
                , NVL(PS.SHARING_PRICE, 0)  AS SHAR_PRCE
                , PI.PROD_IMG_URL           AS PROD_IMG_URL
            FROM PROD P
                LEFT OUTER JOIN PROD_SHARING PS ON P.PROD_CODE = PS.PROD_CODE
                LEFT OUTER JOIN PROD_IMG PI ON P.PROD_CODE = PI.PROD_CODE AND PI.PROD_IMG_GB_CD = '11'
            WHERE P.PROD_CODE <![CDATA[<>]]> #{PROD_CODE}
                AND P.MBER_SEQ = #{MBER_SEQ}
                AND P.PROD_STAT_CD = '0'
            ORDER BY P.SELL_CNT ASC
        )X
        WHERE ROWNUM <![CDATA[<=]]> 3
    </select>

    <!-- 상품정보제공고시 조회-->
    <select id="selectListProdInfoNoti" parameterType="string" resultType="hashmap">
        SELECT PIN.INFO_TITLE
            , PIN.INFO_DTL
            , PIN.EXT_SHOW_YN
            , IDI.SORT_SEQ
        FROM PROD_INFO_NOTI PIN, ITEM_DTL_INFO IDI
        WHERE PIN.PROD_CODE = #{prodCode}
            AND PIN.PROD_ITEM_CODE = IDI.ITEM_CD
            AND PIN.ENTRY_SEQ = IDI.ENTRY_SEQ
        ORDER BY IDI.SORT_SEQ ASC
    </select>

    <select id="selectOrdInfoSeq" resultType="string">
        SELECT TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI') || LPAD(SEQ_ORD_CD.NEXTVAL,4,0) AS ORD_CD FROM DUAL
    </select>

    <!-- PUSH URL-->
    <select id="selectPushIFUrl" resultType="String">
       SELECT COM_CD_NM
         FROM CODE
        WHERE GRP_CD = 'SITE_DEFAULT'
          AND COM_CD = 'PUSH_IF_URL'
    </select>

        <select id="selectProdMberSeq" resultType="String" parameterType="String">
       SELECT MBER_SEQ
         FROM PROD
        WHERE PROD_CODE = #{PROD_CODE }
    </select>
        

    <!-- 약관내용조회 -->
    <select id="selectAgrDesc" parameterType="hashmap" resultType="hashmap">
        SELECT AA.AGR_DESC
          FROM (
                SELECT B.AGR_DESC
                  FROM AGR A
                     , AGR_VER B
                 WHERE 1=1
                   AND A.AGR_SEQ = B.AGR_SEQ
                   AND A.AGR_GB_CD = #{AGR_GB_CD}
                   AND A.AGR_NAME_CD = #{AGR_NAME_CD}
                   AND B.AGR_USE_YN = 'Y'
                   AND B.AGR_SHOW_YN = 'Y'
                   AND TO_CHAR(B.START_DT, 'YYYYMMDD') <![CDATA[ <= ]]> TO_CHAR(SYSDATE, 'YYYYMMDD')
                 ORDER BY B.AGR_VER DESC
               ) AA
         WHERE 1=1
           AND ROWNUM <![CDATA[ <= ]]> 1
    </select>
    
</mapper>
