<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminSharOrderMapper">

	<!-- 셰어링 주문 검색 조건절 -->
	<sql id="SharOrdSearch">
		<if test="SEARCH_ORD_CD != null and SEARCH_ORD_CD != ''">
		   AND A.ORD_CD like '%'||<![CDATA[#{SEARCH_ORD_CD}]]>||'%'
		</if>
		<if test="SEARCH_PROD_NM != null and SEARCH_PROD_NM != ''">
		   AND C.PROD_NM like '%'||<![CDATA[#{SEARCH_PROD_NM}]]>||'%'
		</if>
		<if test="S_MBER_GB != null and S_MBER_GB != ''">
		   AND D.MBER_GB_CD = #{S_MBER_GB}
		</if>
		<if test="SEARCH_USER != '' and SEARCH_USER != null">
			<if test="SearchUserSel  == 'SEARCH_SELLER_ID'">
				AND D.MBER_EMAIL LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
			</if>
			<if test="SearchUserSel  == 'SEARCH_SELLER_NM'">
				AND D.MBER_NM LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
			</if>
			<if test="SearchUserSel  == 'SEARCH_ORD_ID'">
			    AND A.ORD_EMAIL LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
			</if>
			<if test="SearchUserSel  == 'SEARCH_ORD_NM'">
			    AND A.ORD_NM LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
			</if>
  		</if>
		<choose>
    		<when test="INS_CHK_BOX_RESULT != null">
    			AND A.PROC_STAT_CD IN
		    	<foreach item="item" index="index" collection="INS_CHK_BOX_RESULT" open="(" separator="," close=")">
					#{item}
				</foreach>
    		</when>
    		<otherwise>
    			AND A.PROC_STAT_CD IN('10', '21', '22', '23', '85', '86', '87', '88', '89', '90', '91', '92')
    		</otherwise>
    	</choose>
	</sql>
	 
	<!-- 셰어링 교환,반품 검색 조건절 -->
	<sql id="SharChgSearch">
		<if test="SEARCH_ORD_CD != null and SEARCH_ORD_CD != ''">
		   AND C.ORD_CD like '%'||<![CDATA[#{SEARCH_ORD_CD}]]>||'%'
		</if>
		<if test="SEARCH_PROD_NM != null and SEARCH_PROD_NM != ''">
		   AND E.PROD_NM like '%'||<![CDATA[#{SEARCH_PROD_NM}]]>||'%'
		</if>
		<if test="S_MBER_GB != null and S_MBER_GB != ''">
		   AND F.MBER_GB_CD = #{S_MBER_GB}
		</if>
		<if test="CHG_REASON_CD != null and CHG_REASON_CD != ''">
		   AND C.CHG_REASON_CD = #{CHG_REASON_CD}
		</if>
		<if test="SEARCH_USER != '' and SEARCH_USER != null">
			<if test="SearchUserSel  == 'SEARCH_SELLER_ID'">
				AND F.MBER_EMAIL LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
			</if>
			<if test="SearchUserSel  == 'SEARCH_SELLER_NM'">
				AND F.MBER_NM LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
			</if>
			<if test="SearchUserSel  == 'SEARCH_ORD_ID'">
			    AND C.ORD_EMAIL LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
			</if>
			<if test="SearchUserSel  == 'SEARCH_ORD_NM'">
			    AND C.ORD_NM LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
			</if>
  		</if>
     	<if test="INS_CHK_BOX_RESULT != null">
	        AND C.PROC_STAT_CD IN
	    	<foreach item="item" index="index" collection="INS_CHK_BOX_RESULT" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
	</sql>

	<!-- 셰어링 취소 검색 조건절 -->
	<sql id="SharCancelSearch">
		<if test="SEARCH_ORD_CD != null and SEARCH_ORD_CD != ''">
		   AND A.ORD_CD like '%'||<![CDATA[#{SEARCH_ORD_CD}]]>||'%'
		</if>
		<if test="SEARCH_PROD_NM != null and SEARCH_PROD_NM != ''">
		   AND D.PROD_NM like '%'||<![CDATA[#{SEARCH_PROD_NM}]]>||'%'
		</if>
		<if test="S_MBER_GB != null and S_MBER_GB != ''">
		   AND E.MBER_GB_CD = #{S_MBER_GB}
		</if>
		<if test="CANC_REASON_CD != null and CANC_REASON_CD != ''">
		   AND C.CANC_REASON_CD = #{CANC_REASON_CD}
		</if>
		<if test="SEARCH_USER != '' and SEARCH_USER != null">
			<if test="SearchUserSel  == 'SEARCH_SELLER_ID'">
				AND E.MBER_EMAIL LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
			</if>
			<if test="SearchUserSel  == 'SEARCH_SELLER_NM'">
				AND E.MBER_NM LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
			</if>
			<if test="SearchUserSel  == 'SEARCH_ORD_ID'">
			    AND A.ORD_EMAIL LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
			</if>
			<if test="SearchUserSel  == 'SEARCH_ORD_NM'">
			    AND A.ORD_NM LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
			</if>
  		</if>
	</sql>
  
 	<!-- 쉐어링 주문 관리 상품 그룹 리스트 -->
	<select id="selectListSharOrder" resultType="hashmap">
		SELECT
			  TB.*
		FROM
			(
				SELECT
					  S.ORD_CD
					, S.ORD_REG_DATE
					, S.ORD_NM
					, S.ORD_EMAIL
					, S.ORD_AMT
					, NVL(S.POINT_USE_AMT,0) AS POINT_USE_AMT
					, S.REAL_SELT_AMT
					, S.SELT_GB_CD
					, S.CREDIT_APPR_NO
					, ROW_NUMBER() OVER(ORDER BY S.ORD_REG_DATE DESC) AS NO
				FROM
					(
						SELECT
							  A.ORD_CD
							, A.ORD_REG_DATE
							, A.ORD_NM
							, A.ORD_EMAIL
							, A.ORD_AMT
							, A.POINT_USE_AMT
							, A.REAL_SELT_AMT
							, A.SELT_GB_CD
							, A.CREDIT_APPR_NO
							, A.PROC_STAT_CD
							, B.PROD_CODE
							, C.PROD_NM
							, C.MBER_SEQ AS SELLER_SEQ
							, D.MBER_EMAIL AS SELLER_ID
							, D.MBER_NM AS SELLER_NAME
							, D.MBER_GB_CD AS SELLER_TYPE
						FROM
							(
								SELECT
									  OI.ORD_CD
									, TO_CHAR(OI.ORD_REG_DATE , 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE
									, OI.ORD_NM
									, OI.ORD_EMAIL
									, OI.ORD_HP
									, OI.ORD_AMT
									, OI.POINT_USE_AMT
									, OI.REAL_SELT_AMT
									, OI.SELT_GB_CD
									, OI.CREDIT_APPR_NO
									, OI.ORD_STAT_CD
				              		, CASE WHEN OPI.PROC_STAT_CD = '85' AND TRUNC(SYSDATE) - TRUNC(II.DLV_END_DT + OPI.SHARE_TERM -1) > 0 THEN '86' ELSE OPI.PROC_STAT_CD END AS PROC_STAT_CD
								FROM
						  			ORD_INFO OI, ORD_PROD_INFO OPI, INVC_INFO II
						  		WHERE
				                    			    OI.ORD_CD = OPI.ORD_CD
				                    AND OPI.ORD_CD = II.ORD_CD(+)
				                    AND OPI.PROD_CODE = II.PROD_CODE(+)
				                    AND OPI.PROD_SEQ = II.PROD_SEQ(+)
				                    AND OPI.PROD_TYPE_CD = '2'
						  			AND TO_CHAR(OI.ORD_REG_DATE,'YYYYMMDD') BETWEEN  #{S_START_DATE} AND  #{S_END_DATE}
						  	) A , ORD_PROD_INFO B , PROD C, MBER_INFO D
						WHERE
							    A.ORD_CD = B.ORD_CD
							AND B.PROD_CODE = C.PROD_CODE
							AND C.MBER_SEQ = D.MBER_SEQ
							<include refid="SharOrdSearch"/>
					) S
				GROUP BY S.ORD_CD, S.ORD_REG_DATE, S.ORD_NM, S.ORD_EMAIL, S.ORD_AMT, S.POINT_USE_AMT, S.REAL_SELT_AMT, S.SELT_GB_CD, S.CREDIT_APPR_NO
			) TB
		WHERE
			TB.NO BETWEEN #{START_ROW} AND #{END_ROW}
        ORDER BY TB.ORD_CD DESC
	</select>
	
	<!-- 쉐어링 주문 관리 상품 그룹 카운트 -->
	<select id="selectListSharOrderCnt" resultType="Integer">
		SELECT
			  COUNT(*) AS CT
		FROM
			(
				SELECT
					  S.ORD_CD
					, S.ORD_REG_DATE
					, S.ORD_NM
					, S.ORD_EMAIL
					, S.ORD_AMT
					, S.POINT_USE_AMT
					, S.REAL_SELT_AMT
					, S.SELT_GB_CD
					, S.CREDIT_APPR_NO
				FROM
					(
						SELECT
							  A.ORD_CD
							, A.ORD_REG_DATE
							, A.ORD_NM
							, A.ORD_EMAIL
							, A.ORD_AMT
							, A.POINT_USE_AMT
							, A.REAL_SELT_AMT
							, A.SELT_GB_CD
							, A.CREDIT_APPR_NO
							, A.PROC_STAT_CD
							, B.PROD_CODE
							, C.PROD_NM
							, C.MBER_SEQ AS SELLER_SEQ
							, D.MBER_EMAIL AS SELLER_ID
							, D.MBER_NM AS SELLER_NAME
							, D.MBER_GB_CD AS SELLER_TYPE
						FROM
							(
								SELECT
									  OI.ORD_CD
									, TO_CHAR(OI.ORD_REG_DATE , 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE
									, OI.ORD_NM
									, OI.ORD_EMAIL
									, OI.ORD_HP
									, OI.ORD_AMT
									, OI.POINT_USE_AMT
									, OI.REAL_SELT_AMT
									, OI.SELT_GB_CD
									, OI.CREDIT_APPR_NO
									, OI.ORD_STAT_CD
				              		, CASE WHEN OPI.PROC_STAT_CD = '85' AND TRUNC(SYSDATE) - TRUNC(II.DLV_END_DT + OPI.SHARE_TERM -1) > 0 THEN '86' ELSE OPI.PROC_STAT_CD END AS PROC_STAT_CD
								FROM
						  			ORD_INFO OI, ORD_PROD_INFO OPI, INVC_INFO II
						  		WHERE
				                    			    OI.ORD_CD = OPI.ORD_CD
				                    AND OPI.ORD_CD = II.ORD_CD(+)
				                    AND OPI.PROD_CODE = II.PROD_CODE(+)
				                    AND OPI.PROD_SEQ = II.PROD_SEQ(+)
				                    AND OPI.PROD_TYPE_CD = '2'
						  			AND TO_CHAR(OI.ORD_REG_DATE,'YYYYMMDD') BETWEEN  #{S_START_DATE} AND  #{S_END_DATE}
						  	) A , ORD_PROD_INFO B , PROD C, MBER_INFO D
						WHERE
							    A.ORD_CD = B.ORD_CD
							AND B.PROD_CODE = C.PROD_CODE
							AND C.MBER_SEQ = D.MBER_SEQ
							<include refid="SharOrdSearch"/>
					) S
				GROUP BY S.ORD_CD, S.ORD_REG_DATE, S.ORD_NM, S.ORD_EMAIL, S.ORD_AMT, S.POINT_USE_AMT, S.REAL_SELT_AMT, S.SELT_GB_CD, S.CREDIT_APPR_NO
			) TB
	</select>
	
	<!-- 쉐어링 주문 관리 상품 그룹 리스트 -->
	<select id="selectListSharOrderProduct" resultType="hashmap">
		SELECT
			  P.ORD_CD
			, Q.PROD_CODE
			, S.MBER_GB_CD AS SELLER_TYPE
			, S.MBER_NM AS SELLER_NAME
			, S.MBER_EMAIL AS SELLER_ID
			, Q.PROC_STAT_CD
			, R.PROD_NM	
			, T.DEPOSIT
			, NVL(T.SHARING_PRICE,0) AS SHARING_PRICE
			, Q.SHARE_TERM
			, DECODE(S.MBER_GB_CD,0,0,1,(NVL(T.SHARING_PRICE,0) * Q.SHARE_TERM)) AS SHARING_PERIOD_PRICE
			, Q.ORD_QTY
			, (T.DEPOSIT+DECODE(S.MBER_GB_CD,0,0,1,NVL(T.SHARING_PRICE,0) * Q.SHARE_TERM)) * Q.ORD_QTY AS TOTAL_PROD_PRICE
			, NVL(Q.DLV_PRCE,0) AS DLV_PRCE
			, NVL(Q.CPN_USE_AMT,0) AS CPN_USE_AMT
			, (T.DEPOSIT+DECODE(S.MBER_GB_CD,0,0,1,NVL(T.SHARING_PRICE,0) * Q.SHARE_TERM)) * Q.ORD_QTY +NVL(Q.DLV_PRCE,0) -NVL(Q.CPN_USE_AMT,0) AS TOTAL_ORDER_PRICE
			, U.PROD_IMG_URL
			, NVL((SELECT TRUNC(SYSDATE) - TRUNC(DLV_END_DT) +1 AS SHARE_USING_DAY FROM INVC_INFO WHERE ORD_CD = P.ORD_CD AND PROD_CODE = Q.PROD_CODE AND PROD_SEQ = Q.PROD_SEQ),0) AS SHARE_USING_DAY
			, NVL(V.COUPON_CT,0) AS COUPON_CT
		FROM
  			(	
				SELECT
						  TB.*
					FROM
						(
							SELECT
								  S.ORD_CD
								, S.ORD_REG_DATE
								, S.ORD_NM
								, S.ORD_EMAIL
								, S.ORD_AMT
								, S.POINT_USE_AMT
								, S.REAL_SELT_AMT
								, S.SELT_GB_CD
								, S.CREDIT_APPR_NO
								, ROW_NUMBER() OVER(ORDER BY S.ORD_REG_DATE DESC) AS NO
							FROM
								(
									SELECT
										  A.ORD_CD
										, A.ORD_REG_DATE
										, A.ORD_NM
										, A.ORD_EMAIL
										, A.ORD_AMT
										, A.POINT_USE_AMT
										, A.REAL_SELT_AMT
										, A.SELT_GB_CD
										, A.CREDIT_APPR_NO
										, A.PROC_STAT_CD
										, B.PROD_CODE
										, C.PROD_NM
										, C.MBER_SEQ AS SELLER_SEQ
										, D.MBER_EMAIL AS SELLER_ID
										, D.MBER_NM AS SELLER_NAME
										, D.MBER_GB_CD AS SELLER_TYPE
									FROM
										(
											SELECT
												  OI.ORD_CD
												, TO_CHAR(OI.ORD_REG_DATE , 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE
												, OI.ORD_NM
												, OI.ORD_EMAIL
												, OI.ORD_HP
												, OI.ORD_AMT
												, OI.POINT_USE_AMT
												, OI.REAL_SELT_AMT
												, OI.SELT_GB_CD
												, OI.CREDIT_APPR_NO
												, OI.ORD_STAT_CD
							              		, CASE WHEN OPI.PROC_STAT_CD = '85' AND TRUNC(SYSDATE) - TRUNC(II.DLV_END_DT + OPI.SHARE_TERM -1) > 0 THEN '86' ELSE OPI.PROC_STAT_CD END AS PROC_STAT_CD
											FROM
									  			ORD_INFO OI, ORD_PROD_INFO OPI, INVC_INFO II
									  		WHERE
							                    			    OI.ORD_CD = OPI.ORD_CD
							                    AND OPI.ORD_CD = II.ORD_CD(+)
							                    AND OPI.PROD_CODE = II.PROD_CODE(+)
							                    AND OPI.PROD_SEQ = II.PROD_SEQ(+)
							                    AND OPI.PROD_TYPE_CD = '2'
									  			AND TO_CHAR(OI.ORD_REG_DATE,'YYYYMMDD') BETWEEN  #{S_START_DATE} AND  #{S_END_DATE}
									  	) A , ORD_PROD_INFO B , PROD C, MBER_INFO D
									WHERE
										    A.ORD_CD = B.ORD_CD
										AND B.PROD_CODE = C.PROD_CODE
										AND C.MBER_SEQ = D.MBER_SEQ
										<include refid="SharOrdSearch"/>
								) S
							GROUP BY S.ORD_CD, S.ORD_REG_DATE, S.ORD_NM, S.ORD_EMAIL, S.ORD_AMT, S.POINT_USE_AMT, S.REAL_SELT_AMT, S.SELT_GB_CD, S.CREDIT_APPR_NO
						) TB
					WHERE
						TB.NO BETWEEN #{START_ROW} AND #{END_ROW}
			        ORDER BY TB.ORD_REG_DATE DESC
			)P , ORD_PROD_INFO Q , PROD R, MBER_INFO S ,PROD_SHARING T, PROD_IMG U, (SELECT ORD_CD, PROD_CODE, PROD_SEQ, COUNT(*) AS COUPON_CT FROM ORD_PROD_CPN_INFO GROUP BY ORD_CD,PROD_CODE,PROD_SEQ) V
		WHERE
			    P.ORD_CD = Q.ORD_CD
			AND Q.PROD_CODE = R.PROD_CODE
			AND R.MBER_SEQ = S.MBER_SEQ
			AND Q.PROD_CODE = T.PROD_CODE
			AND R.PROD_CODE = U.PROD_CODE(+)
			AND U.PROD_IMG_GB_CD(+) = '11'
			AND Q.ORD_CD = V.ORD_CD(+)
      		AND Q.PROD_CODE = V.PROD_CODE(+)
      		AND Q.PROD_SEQ = V.PROD_SEQ(+)
	</select>
	
	<!-- 주문정보  -->
	<select id="selectOrdInfo" resultType="hashmap">
		SELECT 
			  TO_CHAR(ORD_REG_DATE , 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE
			, ORD_CD
			, ORD_GB_CD
			, ORD_NM
			, ORD_EMAIL
			, ORD_HP
			, CON_GB_CD
			, ADMIN_MEMO
			, DLV_SELT_AMT
			, POINT_USE_AMT
			, REAL_SELT_AMT
			, SELT_GB_CD
		FROM 
			ORD_INFO
		WHERE
			ORD_CD = #{ORD_CD}
	</select>
	
	<!-- 배송지 정보  -->
	<select id="selectOrdDlvInfo" resultType="hashmap">
	    SELECT
	    	  ORD_CD
			, RCV_NM 
			, RCV_TEL
	    	, RCV_HP
	    	, SECU_NO
	    	, ZIP_CD 
	    	, JUSO_JIBEN
	    	, JUSO_DORO
	    	, JUSO_DTL 
	    	, DLV_MSG
	    FROM 
	    	ORD_DLV_INFO
	    WHERE
	    	ORD_CD = #{ORD_CD}
	</select>
	
	<!-- 주문 정보리스트  -->
	<select id="selectListOrdProdInfo" resultType="hashmap">
		SELECT
			  D.MBER_GB_CD AS SELLER_TYPE
			, D.MBER_NM AS SELLER_NAME
			, D.MBER_EMAIL
			, NVL(A.POINT_USE_AMT,0) AS POINT_USE_AMT
			, A.REAL_SELT_AMT
			, A.SELT_GB_CD
			, A.CREDIT_APPR_NO
		FROM
  			ORD_INFO A, ORD_PROD_INFO B, PROD C, MBER_INFO D
		WHERE
			    A.ORD_CD = B.ORD_CD
			AND B.PROD_CODE = C.PROD_CODE
			AND C.MBER_SEQ = D.MBER_SEQ
			AND A.ORD_CD = #{ORD_CD}
		GROUP BY A.ORD_REG_DATE, D.MBER_GB_CD, D.MBER_NM, D.MBER_EMAIL, A.POINT_USE_AMT, A.REAL_SELT_AMT, A.SELT_GB_CD, A.CREDIT_APPR_NO
	</select>
	
	<!-- 주문 상품 정보리스트  -->
	<select id="selectListOrdProdInfoDetail" resultType="hashmap">
    	SELECT
			  D.MBER_GB_CD AS SELLER_TYPE
			, D.MBER_NM AS SELLER_NAME
			, D.MBER_EMAIL
			, D.MBER_SEQ
			, A.SELT_GB_CD
			, TRUNC(B.REGIST_DT) +6 - TRUNC(SYSDATE) AS CANCEL_ABLE_DAY
			, C.PROD_CODE
			, C.PROD_NM
			, E.DEPOSIT
			, DECODE(D.MBER_GB_CD,0,0,1,(NVL(E.SHARING_PRICE,0) * B.SHARE_TERM)) AS SHARING_PERIOD_PRICE
			, B.SHARE_TERM
			, B.ORD_QTY
			, (E.DEPOSIT+(NVL(E.SHARING_PRICE,0) * B.SHARE_TERM))*B.ORD_QTY AS TOTAL_PROD_PRICE_COMPANY
      		, E.DEPOSIT * B.ORD_QTY AS TOTAL_PROD_PRICE_PERSON
			, B.PROC_STAT_CD
			, B.DLV_PAY_F_CD
			, NVL(B.DLV_PRCE,0) AS DLV_PRCE
			, NVL(B.PROD_CPN_CD,0) AS PROD_CPN_CD
			, NVL(B.CPN_USE_AMT,0) AS CPN_USE_AMT
			, B.PROD_SEQ
			, NVL(B.DLV_GRP_CODE,'NO') AS DLV_GRP_CODE
			, (E.DEPOSIT+(NVL(E.SHARING_PRICE,0) * B.SHARE_TERM)) * B.ORD_QTY+NVL(B.DLV_PRCE,0)-NVL(B.CPN_USE_AMT,0) AS TOTAL_ORDER_PRICE_COMPANY
      		, E.DEPOSIT * B.ORD_QTY + NVL(B.DLV_PRCE,0) - NVL(B.CPN_USE_AMT,0) AS TOTAL_ORDER_PRICE_PERSON
			, (SELECT DLV_CMP_CD FROM INVC_INFO WHERE ORD_CD = A.ORD_CD AND PROD_CODE = B.PROD_CODE AND PROD_SEQ = B.PROD_SEQ) AS DLV_CMP_CD
			, (SELECT INVC_NO FROM INVC_INFO WHERE ORD_CD = A.ORD_CD AND PROD_CODE = B.PROD_CODE AND PROD_SEQ = B.PROD_SEQ) AS INVC_NO
			, (SELECT TO_CHAR(DLV_END_DT,'YYYY-MM-DD HH24:MI') AS DLV_END_DT FROM INVC_INFO WHERE ORD_CD = A.ORD_CD AND PROD_CODE = B.PROD_CODE AND PROD_SEQ = B.PROD_SEQ) AS DLV_END_DT
			, (SELECT TRUNC(SYSDATE) - TRUNC(DLV_END_DT) +1 AS SHARE_USING_DAY FROM INVC_INFO WHERE ORD_CD = A.ORD_CD AND PROD_CODE = B.PROD_CODE AND PROD_SEQ = B.PROD_SEQ) AS SHARE_USING_DAY
			, CASE
			  WHEN B.PROC_STAT_CD = '88' OR B.PROC_STAT_CD = '91' THEN (SELECT CHG_CD FROM CHG_PROD_INFO WHERE ORD_CD = A.ORD_CD AND PROD_CODE = B.PROD_CODE AND PROD_SEQ = B.PROD_SEQ AND PROC_STAT_CD = B.PROC_STAT_CD)
			  ELSE ''
			  END AS CHG_CD
        FROM
			ORD_INFO A, ORD_PROD_INFO B, PROD C, MBER_INFO D, PROD_SHARING E
        WHERE
	            A.ORD_CD = B.ORD_CD
	        AND B.PROD_CODE = C.PROD_CODE
	        AND C.MBER_SEQ = D.MBER_SEQ
	        AND B.PROD_CODE = E.PROD_CODE
	        AND A.ORD_CD = #{ORD_CD}
	</select>
	
	<!-- 쉐어링 이용 상품 정보리스트  -->
	<select id="selectSharStatList" resultType="hashmap">
		SELECT
			  TA.*
			, TO_CHAR(TA.DLV_END_DT,'YYYY-MM-DD') AS SHARE_START_DAY
			, TO_CHAR((TO_DATE(TA.DLV_END_DT) + TA.SHARE_TERM -1),'YYYY-MM-DD') AS SHARE_END_DAY
			, TRUNC(SYSDATE) - TRUNC(TA.DLV_END_DT) +1 AS SHARE_USING_DAY
			, TRUNC((TA.DEPOSIT + TA.SHARING_PERIOD_PRICE) / TA.SHARING_PRICE,0) AS SHARE_USING_LIMIT_DAY
			, TA.SHARE_TERM - (TRUNC(SYSDATE) - TRUNC(TA.DLV_END_DT) +1) AS SHARE_REMAIN_DAY
			, TA.ORD_QTY * TA.SHARING_PRICE * (TRUNC(SYSDATE) - TRUNC(TA.DLV_END_DT)+1) AS SHARE_USING_MONEY
		FROM
  			(	
				SELECT
					  D.MBER_GB_CD AS SELLER_TYPE
					, D.MBER_NM AS SELLER_NAME
					, D.MBER_EMAIL
					, B.PROC_STAT_CD
					, C.PROD_NM
					, E.DEPOSIT
		      		, B.ORD_QTY
		      		, E.SHARING_PRICE
					, (NVL(E.SHARING_PRICE,0) * B.SHARE_TERM) AS SHARING_PERIOD_PRICE
					, B.SHARE_TERM
					, (SELECT DLV_END_DT FROM INVC_INFO WHERE ORD_CD = A.ORD_CD AND PROD_CODE = B.PROD_CODE AND PROD_SEQ = B.PROD_SEQ) AS DLV_END_DT
		        FROM
					ORD_INFO A, ORD_PROD_INFO B, PROD C, MBER_INFO D, PROD_SHARING E
		        WHERE
			            A.ORD_CD = B.ORD_CD
			        AND B.PROD_CODE = C.PROD_CODE
			        AND C.MBER_SEQ = D.MBER_SEQ
			        AND B.PROD_CODE = E.PROD_CODE
			        AND A.ORD_CD = #{ORD_CD}
		            AND B.PROC_STAT_CD IN (85,86)
			) TA
	</select>
	
	<!-- 쉐어링 반납 상품 정보리스트  -->
	<select id="selectSharReturnList" resultType="hashmap">
		SELECT
			  TA.*
			, TO_CHAR(TA.RETURN_DT,'YYYY-MM-DD') AS SHARE_RETURN_DAY
			, TO_CHAR(TA.DLV_END_DT,'YYYY-MM-DD') AS SHARE_START_DAY
			, TO_CHAR((TO_DATE(TA.DLV_END_DT) + TA.SHARE_TERM -1),'YYYY-MM-DD') AS SHARE_END_DAY
			, TRUNC(TA.RETURN_DT) - TRUNC(TA.DLV_END_DT) +1 AS SHARE_USING_DAY
			, TRUNC((TA.DEPOSIT + TA.SHARING_PERIOD_PRICE) / TA.SHARING_PRICE,0) AS SHARE_USING_LIMIT_DAY
			, TA.SHARE_TERM - (TRUNC(TA.RETURN_DT) - TRUNC(TA.DLV_END_DT) +1) AS SHARE_REMAIN_DAY
			, TA.ORD_QTY * TA.SHARING_PRICE * (TRUNC(TA.RETURN_DT) - TRUNC(TA.DLV_END_DT) +1) AS SHARE_USING_MONEY
			, TA.DEPOSIT - (TA.ORD_QTY * TA.SHARING_PRICE * (TRUNC(TA.RETURN_DT) - TRUNC(TA.DLV_END_DT) +1)) AS SHARE_RETURN_MONEY
			, (SELECT DLV_CMP_CD FROM CHG_INVC_INFO WHERE ORD_CD = TA.ORD_CD AND CHG_CD = TA.CHG_CD AND PROD_CODE = TA.PROD_CODE AND PROD_SEQ = TA.PROD_SEQ) AS DLV_CMP_CD
      		, (SELECT INVC_NO FROM CHG_INVC_INFO WHERE ORD_CD = TA.ORD_CD AND CHG_CD = TA.CHG_CD AND PROD_CODE = TA.PROD_CODE AND PROD_SEQ = TA.PROD_SEQ) AS INVC_NO
      		, (SELECT TO_CHAR(DLV_END_DT,'YYYY-MM-DD HH24:MI') FROM CHG_INVC_INFO WHERE ORD_CD = TA.ORD_CD AND CHG_CD = TA.CHG_CD AND PROD_CODE = TA.PROD_CODE AND PROD_SEQ = TA.PROD_SEQ) AS R_DLV_END_DT
		FROM
  			(	
				SELECT
					  D.MBER_GB_CD AS SELLER_TYPE
					, D.MBER_NM AS SELLER_NAME
					, D.MBER_EMAIL
					, C.PROD_NM
					, B.PROC_STAT_CD
					, E.DEPOSIT
		      		, B.ORD_QTY
		      		, E.SHARING_PRICE
					, (NVL(E.SHARING_PRICE,0) * B.SHARE_TERM) AS SHARING_PERIOD_PRICE
					, B.SHARE_TERM
 					, A.ORD_CD
			        , B.PROD_CODE
			        , B.PROD_SEQ					
					, F.REGIST_DT AS RETURN_DT
				    , F.RCV_NM
				    , F.HP
				    , F.ZIP_CD
				    , F.JUSO_JIBEN
				    , F.JUSO_DORO
				    , F.JUSO_DTL
				    , F.CHG_CD
					, (SELECT DLV_END_DT FROM INVC_INFO WHERE ORD_CD = A.ORD_CD AND PROD_CODE = B.PROD_CODE AND PROD_SEQ = B.PROD_SEQ) AS DLV_END_DT
		        FROM
					ORD_INFO A, ORD_PROD_INFO B, PROD C, MBER_INFO D, PROD_SHARING E, (SELECT P.ORD_CD,P.PROD_CODE,P.PROD_SEQ,P.REGIST_DT,Q.CHG_CD,Q.RCV_NM,Q.HP,Q.ZIP_CD,Q.JUSO_JIBEN,Q.JUSO_DORO,Q.JUSO_DTL FROM CHG_PROD_INFO P , CHG_RTN_PROC_INFO Q WHERE P.CHG_CD = Q.CHG_CD(+) AND Q.CHG_GB_CD = '80') F
		        WHERE
			            A.ORD_CD = B.ORD_CD
			        AND B.PROD_CODE = C.PROD_CODE
			        AND C.MBER_SEQ = D.MBER_SEQ
			        AND B.PROD_CODE = E.PROD_CODE
			        AND A.ORD_CD = F.ORD_CD
		            AND B.PROD_CODE = F.PROD_CODE
		            AND B.PROD_SEQ = F.PROD_SEQ
			        AND A.ORD_CD = #{ORD_CD}
		            AND B.PROC_STAT_CD IN ('87','88','89')
			) TA
	</select>
		
	<!-- 쉐어링 회수 상품 정보리스트  -->
	<select id="selectSharRecoverList" resultType="hashmap">
		SELECT
			  TA.*
      		, TO_CHAR(TA.RECOVER_DT,'YYYY-MM-DD HH24:MI') AS SHARE_RECOVER_DAY
			, TO_CHAR(TA.DLV_END_DT,'YYYY-MM-DD') AS SHARE_START_DAY
			, TO_CHAR((TO_DATE(TA.DLV_END_DT) + TA.SHARE_TERM -1),'YYYY-MM-DD') AS SHARE_END_DAY
			, TRUNC(TA.RECOVER_DT) - TRUNC(TA.DLV_END_DT) +1 AS SHARE_USING_DAY
			, TRUNC((TA.DEPOSIT + TA.SHARING_PERIOD_PRICE) / TA.SHARING_PRICE,0) AS SHARE_USING_LIMIT_DAY
			, TA.SHARE_TERM - (TRUNC(TA.RECOVER_DT) - TRUNC(TA.DLV_END_DT) +1) AS SHARE_REMAIN_DAY
			, TA.ORD_QTY * TA.SHARING_PRICE * (TRUNC(TA.RECOVER_DT) - TRUNC(TA.DLV_END_DT) +1) AS SHARE_USING_MONEY
      		, (TA.DEPOSIT + SHARING_PERIOD_PRICE) * TA.ORD_QTY - (TA.ORD_QTY * TA.SHARING_PRICE * (TRUNC(TA.RECOVER_DT) - TRUNC(TA.DLV_END_DT) +1)) AS SHARE_RECOVER_MONEY
      		, (SELECT DLV_CMP_CD FROM CHG_INVC_INFO WHERE ORD_CD = TA.ORD_CD AND PROD_CODE = TA.PROD_CODE AND PROD_SEQ = TA.PROD_SEQ) AS DLV_CMP_CD
			, (SELECT INVC_NO FROM CHG_INVC_INFO WHERE ORD_CD = TA.ORD_CD AND PROD_CODE = TA.PROD_CODE AND PROD_SEQ = TA.PROD_SEQ) AS INVC_NO
			, (SELECT TO_CHAR(MAX(DLV_END_DT),'YYYY-MM-DD HH24:MI') AS DLV_END_DT FROM CHG_INVC_INFO WHERE ORD_CD = TA.ORD_CD AND PROD_CODE = TA.PROD_CODE AND PROD_SEQ = TA.PROD_SEQ AND DLV_STAT = '20') AS CHG_DLV_END_DT
		FROM
  			(	
				SELECT
					  A.ORD_CD
					, D.MBER_GB_CD AS SELLER_TYPE
					, D.MBER_NM AS SELLER_NAME
					, D.MBER_EMAIL
					, B.PROD_SEQ
					, B.PROD_CODE
					, C.PROD_NM
					, B.PROC_STAT_CD
					, E.DEPOSIT
		      		, B.ORD_QTY
		      		, E.SHARING_PRICE
					, (NVL(E.SHARING_PRICE,0) * B.SHARE_TERM) AS SHARING_PERIOD_PRICE
					, B.SHARE_TERM
					, F.REGIST_DT AS RECOVER_DT
				    , F.RCV_NM
				    , F.HP
				    , F.ZIP_CD
				    , F.JUSO_JIBEN
				    , F.JUSO_DORO
				    , F.JUSO_DTL
					, (SELECT DLV_END_DT FROM INVC_INFO WHERE ORD_CD = A.ORD_CD AND PROD_CODE = B.PROD_CODE AND PROD_SEQ = B.PROD_SEQ) AS DLV_END_DT
		        FROM
					ORD_INFO A, ORD_PROD_INFO B, PROD C, MBER_INFO D, PROD_SHARING E, (SELECT P.ORD_CD,P.PROD_CODE,P.PROD_SEQ,P.REGIST_DT,Q.RCV_NM,Q.HP,Q.ZIP_CD,Q.JUSO_JIBEN,Q.JUSO_DORO,Q.JUSO_DTL FROM CHG_PROD_INFO P , CHG_RTN_PROC_INFO Q WHERE P.CHG_CD = Q.CHG_CD(+) AND Q.CHG_GB_CD = '90') F
		        WHERE
			            A.ORD_CD = B.ORD_CD
			        AND B.PROD_CODE = C.PROD_CODE
			        AND C.MBER_SEQ = D.MBER_SEQ
			        AND B.PROD_CODE = E.PROD_CODE
			        AND A.ORD_CD = F.ORD_CD
		            AND B.PROD_CODE = F.PROD_CODE
		            AND B.PROD_SEQ = F.PROD_SEQ
			        AND A.ORD_CD = #{ORD_CD}
		            AND B.PROC_STAT_CD IN (90,91,92)
			) TA
	</select>
		
	<!-- 쉐어링 교환 그룹 리스트 -->
	<select id="selectListSharExcGroup" resultType="hashmap">
		SELECT
			  TA.*
		FROM
			(
				SELECT
					  C.CHG_CD
          			, C.ORD_CD
          			, ROW_NUMBER() OVER(ORDER BY C.CHG_CD DESC) AS NO
				FROM
					(
					    SELECT
							  A.CHG_CD
							, A.ORD_CD
							, TO_CHAR(A.REGIST_DT , 'YYYY-MM-DD HH24:MI') AS REQUEST_DT
							, A.CHG_REASON_CD
							, A.CHG_REASON
							, B.PROD_CODE
							, B.PROD_SEQ
							, B.PROC_STAT_CD
							, O.ORD_NM
							, O.ORD_EMAIL
					    FROM
							CHG_RTN_PROC_INFO A, CHG_PROD_INFO B, ORD_INFO O
					    WHERE
							    A.CHG_CD = B.CHG_CD
							AND A.ORD_CD = O.ORD_CD
							AND TO_CHAR(A.REGIST_DT,'YYYYMMDD') BETWEEN #{S_START_DATE} AND  #{S_END_DATE}
							AND B.PROC_STAT_CD IN (41, 42, 43)
					) C, ORD_PROD_INFO D , PROD E, MBER_INFO F, PROD_IMG G
				WHERE
					    C.ORD_CD = D.ORD_CD
					AND C.PROD_CODE = D.PROD_CODE
					AND C.PROD_CODE = E.PROD_CODE
					AND E.MBER_SEQ = F.MBER_SEQ
					AND C.PROD_CODE = G.PROD_CODE(+)
					AND D.PROD_TYPE_CD = '2'
					AND G.PROD_IMG_GB_CD(+) = '11'
					<include refid="SharChgSearch" />
				GROUP BY C.CHG_CD , C.ORD_CD
			) TA
		WHERE
			TA.NO BETWEEN #{START_ROW} AND #{END_ROW}
        ORDER BY TA.CHG_CD DESC
	</select>
	
	<!-- 쉐어링 교환 그룹 리스트 -->
	<select id="selectListSharExcRtn" resultType="hashmap">
		SELECT
			  TD.*
			, TO_CHAR(TE.REGIST_DT , 'YYYY-MM-DD HH24:MI') AS REGIST_DT
			, TI.ORD_NM
			, TI.ORD_EMAIL
			, TG.MBER_GB_CD AS SELLER_TYPE
			, TG.MBER_NM AS SELLER_NAME
			, TG.MBER_EMAIL
			, TE.PROC_STAT_CD
			, TF.PROD_NM
			, TH.PROD_IMG_URL
		FROM
  			(
    			SELECT
					  TB.ORD_CD
					, TB.CHG_CD
					, TB.CHG_REASON_CD
					, TB.CHG_REASON
					, TC.PROD_CODE
					, TO_CHAR(TC.REGIST_DT , 'YYYY-MM-DD HH24:MI') AS REQUEST_DT
    			FROM
      				(
						SELECT
							  TA.*
						FROM
							(
								SELECT
									  C.CHG_CD
				          			, C.ORD_CD
				          			, C.CHG_REASON_CD
				          			, C.CHG_REASON
				          			, ROW_NUMBER() OVER(ORDER BY C.CHG_CD DESC) AS NO
								FROM
									(
									    SELECT
											  A.CHG_CD
											, A.ORD_CD
											, TO_CHAR(A.REGIST_DT , 'YYYY-MM-DD HH24:MI') AS REQUEST_DT
											, A.CHG_REASON_CD
											, A.CHG_REASON
											, B.PROD_CODE
											, B.PROD_SEQ
											, B.PROC_STAT_CD
											, O.ORD_NM
											, O.ORD_EMAIL
									    FROM
											CHG_RTN_PROC_INFO A, CHG_PROD_INFO B, ORD_INFO O
									    WHERE
											    A.CHG_CD = B.CHG_CD
											AND A.ORD_CD = O.ORD_CD
											AND TO_CHAR(A.REGIST_DT,'YYYYMMDD') BETWEEN #{S_START_DATE} AND  #{S_END_DATE}
											AND B.PROC_STAT_CD IN (41, 42, 43)
									) C, ORD_PROD_INFO D , PROD E, MBER_INFO F, PROD_IMG G
								WHERE
									    C.ORD_CD = D.ORD_CD
									AND C.PROD_CODE = D.PROD_CODE
									AND C.PROD_CODE = E.PROD_CODE
									AND E.MBER_SEQ = F.MBER_SEQ
									AND C.PROD_CODE = G.PROD_CODE(+)
									AND D.PROD_TYPE_CD = '2'
									AND G.PROD_IMG_GB_CD(+) = '11'
									<include refid="SharChgSearch" />
								GROUP BY C.CHG_CD , C.ORD_CD, C.CHG_REASON_CD, C.CHG_REASON
							) TA
						WHERE
							TA.NO BETWEEN #{START_ROW} AND #{END_ROW}
				        ORDER BY TA.CHG_CD DESC
     				) TB , CHG_PROD_INFO TC
     			WHERE
      				    TB.CHG_CD = TC.CHG_CD
      				AND TB.ORD_CD = TC.ORD_CD
			) TD, ORD_PROD_INFO TE, PROD TF, MBER_INFO TG, PROD_IMG TH, ORD_INFO TI
		WHERE
			    TD.ORD_CD = TI.ORD_CD
			AND TD.ORD_CD = TE.ORD_CD
			AND TD.PROD_CODE = TE.PROD_CODE
			AND TD.PROD_CODE = TF.PROD_CODE
			AND TF.MBER_SEQ = TG.MBER_SEQ
			AND TD.PROD_CODE = TH.PROD_CODE(+)
			AND TH.PROD_IMG_GB_CD(+) = '11'
	</select>
	
	<!-- 쉐어링 교환 카운트 -->
	<select id="selectListSharExcRtnCnt" resultType="Integer">
		SELECT
			  COUNT(*) AS CT
		FROM
			(
				SELECT
					  C.CHG_CD
          			, C.ORD_CD
          			, ROW_NUMBER() OVER(ORDER BY C.CHG_CD DESC) AS NO
				FROM
					(
					    SELECT
							  A.CHG_CD
							, A.ORD_CD
							, TO_CHAR(A.REGIST_DT , 'YYYY-MM-DD HH24:MI') AS REQUEST_DT
							, A.CHG_REASON_CD
							, A.CHG_REASON
							, B.PROD_CODE
							, B.PROD_SEQ
							, B.PROC_STAT_CD
							, O.ORD_NM
							, O.ORD_EMAIL
					    FROM
							CHG_RTN_PROC_INFO A, CHG_PROD_INFO B, ORD_INFO O
					    WHERE
							    A.CHG_CD = B.CHG_CD
							AND A.ORD_CD = O.ORD_CD
							AND TO_CHAR(A.REGIST_DT,'YYYYMMDD') BETWEEN #{S_START_DATE} AND  #{S_END_DATE}
							AND B.PROC_STAT_CD IN (41, 42, 43)
					) C, ORD_PROD_INFO D , PROD E, MBER_INFO F, PROD_IMG G
				WHERE
					    C.ORD_CD = D.ORD_CD
					AND C.PROD_CODE = D.PROD_CODE
					AND C.PROD_CODE = E.PROD_CODE
					AND E.MBER_SEQ = F.MBER_SEQ
					AND C.PROD_CODE = G.PROD_CODE(+)
					AND D.PROD_TYPE_CD = '2'
					AND G.PROD_IMG_GB_CD(+) = '11'
					<include refid="SharChgSearch" />
				GROUP BY C.CHG_CD , C.ORD_CD
			) TA
	</select>
	
	<!-- 쉐어링 교환 상품 정보리스트 -->
	<select id="selectSharExcList" resultType="hashmap">
    	SELECT
			  A.ORD_CD
			, (SELECT SELT_GB_CD FROM ORD_INFO WHERE ORD_CD = A.ORD_CD) AS SELT_GB_CD
			, A.CHG_CD
			, TO_CHAR(A.REGIST_DT , 'YYYY-MM-DD HH24:MI') AS REQUEST_DT
			, A.CHG_REASON_CD
			, A.CHG_REASON
			, B.PROD_CODE
			, B.PROD_SEQ
			, B.PROC_STAT_CD
			, D.MBER_EMAIL
			, D.MBER_NM
			, C.PROD_NM
			, D.MBER_GB_CD
			, F.PROD_ORD_AMT
			, F.PROD_PRCE
		    , F.ORD_QTY
		    , NVL(F.CPN_USE_AMT,0) AS CPN_USE_AMT
			, NVL(F.PROD_CPN_CD,'NO') AS PROD_CPN_CD
      		, NVL(F.DLV_GRP_CODE,'NO') AS DLV_GRP_CODE
      		, F.SHARE_TERM
      		, F.DLV_PRCE
      		, G.DEPOSIT
      		, G.SHARING_PRICE
      		, (SELECT NVL(POINT_USE_AMT,0) AS POINT_USE_AMT FROM ORD_INFO WHERE ORD_CD = A.ORD_CD) AS POINT_USE_AMT
      		, (SELECT DLV_CMP_CD FROM CHG_INVC_INFO WHERE ORD_CD = A.ORD_CD AND CHG_CD = A.CHG_CD AND PROD_CODE = B.PROD_CODE AND PROD_SEQ = B.PROD_SEQ) AS DLV_CMP_CD
      		, (SELECT INVC_NO FROM CHG_INVC_INFO WHERE ORD_CD = A.ORD_CD AND CHG_CD = A.CHG_CD AND PROD_CODE = B.PROD_CODE AND PROD_SEQ = B.PROD_SEQ) AS INVC_NO
      		, (SELECT TO_CHAR(DLV_END_DT,'YYYY-MM-DD HH24:MI') FROM CHG_INVC_INFO WHERE ORD_CD = A.ORD_CD AND CHG_CD = A.CHG_CD AND PROD_CODE = B.PROD_CODE AND PROD_SEQ = B.PROD_SEQ) AS R_DLV_END_DT
		FROM
      		CHG_RTN_PROC_INFO A, CHG_PROD_INFO B, PROD C, MBER_INFO D, ORD_PROD_INFO F, PROD_SHARING G
		WHERE
			    A.CHG_CD = B.CHG_CD
			AND B.PROD_CODE = C.PROD_CODE
			AND C.MBER_SEQ = D.MBER_SEQ
			AND A.ORD_CD = F.ORD_CD
			AND B.PROD_CODE = F.PROD_CODE
			AND B.PROD_SEQ = F.PROD_SEQ
			AND B.PROD_CODE = G.PROD_CODE
			AND A.CHG_GB_CD = #{CHG_GB_CD}
			AND A.ORD_CD = #{ORD_CD}
			AND A.CHG_CD = #{CHG_CD}
	</select>
	
	<!-- 쉐어링 교환 상품 배송지 정보 -->
	<select id="selectExcDlvInfo" resultType="hashmap">
		SELECT
			  RCV_NM 
			, TEL
			, HP
			, ZIP_CD 
			, JUSO_JIBEN
			, JUSO_DORO
			, JUSO_DTL 
			, MEMO
			, ORD_CD
			, CHG_CD
		FROM 
  			CHG_RTN_PROC_INFO
		WHERE
			    ORD_CD = #{ORD_CD}
			AND CHG_CD = #{CHG_CD}
	</select>
	
	<!-- 쉐어링 반품 카운트 -->
	<select id="selectListSharReturnCnt" resultType="Integer">
		SELECT
			  COUNT(*) AS CT
		FROM
			(
				SELECT
					  C.CHG_CD
          			, C.ORD_CD
          			, ROW_NUMBER() OVER(ORDER BY C.CHG_CD DESC) AS NO
				FROM
					(
					    SELECT
							  A.CHG_CD
							, A.ORD_CD
							, TO_CHAR(A.REGIST_DT , 'YYYY-MM-DD HH24:MI') AS REQUEST_DT
							, A.CHG_REASON_CD
							, A.CHG_REASON
							, B.PROD_CODE
							, B.PROD_SEQ
							, B.PROC_STAT_CD
							, O.ORD_NM
							, O.ORD_EMAIL
					    FROM
							CHG_RTN_PROC_INFO A, CHG_PROD_INFO B, ORD_INFO O
					    WHERE
							    A.CHG_CD = B.CHG_CD
							AND A.ORD_CD = O.ORD_CD
							AND TO_CHAR(A.REGIST_DT,'YYYYMMDD') BETWEEN #{S_START_DATE} AND  #{S_END_DATE}
							AND B.PROC_STAT_CD IN (31, 32, 33)
					) C, ORD_PROD_INFO D , PROD E, MBER_INFO F, PROD_IMG G
				WHERE
					    C.ORD_CD = D.ORD_CD
					AND C.PROD_CODE = D.PROD_CODE
					AND C.PROD_CODE = E.PROD_CODE
					AND E.MBER_SEQ = F.MBER_SEQ
					AND C.PROD_CODE = G.PROD_CODE(+)
					AND D.PROD_TYPE_CD = '2'
					AND G.PROD_IMG_GB_CD(+) = '11'
					<include refid="SharChgSearch" />
				GROUP BY C.CHG_CD , C.ORD_CD
			) TA
	</select>

	<!-- 쉐어링 반품 그룹 리스트 -->
	<select id="selectListSharReturnGroup" resultType="hashmap">
		SELECT
			  TA.*
		FROM
			(
				SELECT
					  C.CHG_CD
          			, C.ORD_CD
          			, ROW_NUMBER() OVER(ORDER BY C.CHG_CD DESC) AS NO
				FROM
					(
					    SELECT
							  A.CHG_CD
							, A.ORD_CD
							, TO_CHAR(A.REGIST_DT , 'YYYY-MM-DD HH24:MI') AS REQUEST_DT
							, A.CHG_REASON_CD
							, A.CHG_REASON
							, B.PROD_CODE
							, B.PROD_SEQ
							, B.PROC_STAT_CD
							, O.ORD_NM
							, O.ORD_EMAIL
					    FROM
							CHG_RTN_PROC_INFO A, CHG_PROD_INFO B, ORD_INFO O
					    WHERE
							    A.CHG_CD = B.CHG_CD
							AND A.ORD_CD = O.ORD_CD
							AND TO_CHAR(A.REGIST_DT,'YYYYMMDD') BETWEEN #{S_START_DATE} AND  #{S_END_DATE}
							AND B.PROC_STAT_CD IN (31, 32, 33)
					) C, ORD_PROD_INFO D , PROD E, MBER_INFO F, PROD_IMG G
				WHERE
					    C.ORD_CD = D.ORD_CD
					AND C.PROD_CODE = D.PROD_CODE
					AND C.PROD_CODE = E.PROD_CODE
					AND E.MBER_SEQ = F.MBER_SEQ
					AND C.PROD_CODE = G.PROD_CODE(+)
					AND D.PROD_TYPE_CD = '2'
					AND G.PROD_IMG_GB_CD(+) = '11'
					<include refid="SharChgSearch" />
				GROUP BY C.CHG_CD , C.ORD_CD
			) TA
		WHERE
			TA.NO BETWEEN #{START_ROW} AND #{END_ROW}
        ORDER BY TA.CHG_CD DESC
	</select>
	
	<!-- 쉐어링 반품 그룹 상세 리스트 -->
	<select id="selectListSharReturnGroupList" resultType="hashmap">
		SELECT
			  TD.*
			, TO_CHAR(TE.REGIST_DT , 'YYYY-MM-DD HH24:MI') AS REGIST_DT
			, TI.ORD_NM
			, TI.ORD_EMAIL
			, TG.MBER_GB_CD AS SELLER_TYPE
			, TG.MBER_NM AS SELLER_NAME
			, TG.MBER_EMAIL
			, TE.PROC_STAT_CD
			, TF.PROD_NM
			, TH.PROD_IMG_URL
		FROM
  			(
    			SELECT
					  TB.ORD_CD
					, TB.CHG_CD
					, TB.CHG_REASON_CD
					, TB.CHG_REASON
					, TC.PROD_CODE
					, TO_CHAR(TC.REGIST_DT , 'YYYY-MM-DD HH24:MI') AS REQUEST_DT
    			FROM
      				(
						SELECT
							  TA.*
						FROM
							(
								SELECT
									  C.CHG_CD
				          			, C.ORD_CD
				          			, C.CHG_REASON_CD
				          			, C.CHG_REASON
				          			, ROW_NUMBER() OVER(ORDER BY C.CHG_CD DESC) AS NO
								FROM
									(
									    SELECT
											  A.CHG_CD
											, A.ORD_CD
											, TO_CHAR(A.REGIST_DT , 'YYYY-MM-DD HH24:MI') AS REQUEST_DT
											, A.CHG_REASON_CD
											, A.CHG_REASON
											, B.PROD_CODE
											, B.PROD_SEQ
											, B.PROC_STAT_CD
											, O.ORD_NM
											, O.ORD_EMAIL
									    FROM
											CHG_RTN_PROC_INFO A, CHG_PROD_INFO B, ORD_INFO O
									    WHERE
											    A.CHG_CD = B.CHG_CD
											AND A.ORD_CD = O.ORD_CD
											AND TO_CHAR(A.REGIST_DT,'YYYYMMDD') BETWEEN #{S_START_DATE} AND  #{S_END_DATE}
											AND B.PROC_STAT_CD IN (31, 32, 33)
									) C, ORD_PROD_INFO D , PROD E, MBER_INFO F, PROD_IMG G
								WHERE
									    C.ORD_CD = D.ORD_CD
									AND C.PROD_CODE = D.PROD_CODE
									AND C.PROD_CODE = E.PROD_CODE
									AND E.MBER_SEQ = F.MBER_SEQ
									AND C.PROD_CODE = G.PROD_CODE(+)
									AND D.PROD_TYPE_CD = '2'
									AND G.PROD_IMG_GB_CD(+) = '11'
									<include refid="SharChgSearch" />
								GROUP BY C.CHG_CD , C.ORD_CD, C.CHG_REASON_CD, C.CHG_REASON
							) TA
						WHERE
							TA.NO BETWEEN #{START_ROW} AND #{END_ROW}
				        ORDER BY TA.CHG_CD DESC
     				) TB , CHG_PROD_INFO TC
     			WHERE
      				    TB.CHG_CD = TC.CHG_CD
      				AND TB.ORD_CD = TC.ORD_CD
			) TD, ORD_PROD_INFO TE, PROD TF, MBER_INFO TG, PROD_IMG TH, ORD_INFO TI
		WHERE
			    TD.ORD_CD = TI.ORD_CD
			AND TD.ORD_CD = TE.ORD_CD
			AND TD.PROD_CODE = TE.PROD_CODE
			AND TD.PROD_CODE = TF.PROD_CODE
			AND TF.MBER_SEQ = TG.MBER_SEQ
			AND TD.PROD_CODE = TH.PROD_CODE(+)
			AND TH.PROD_IMG_GB_CD(+) = '11'
	</select>
	
	<!-- 쉐어링 취소 카운트 -->
	<select id="selectListSharCancelCnt" resultType="Integer">
		SELECT
			  COUNT(*) AS CT
		FROM
			(
				SELECT
					  A.ORD_CD 
					, TO_CHAR(B.UPDT_DT, 'YYYY-MM-DD HH24:MI') AS REQUEST_DT
					, A.ORD_REG_DATE
					, A.ORD_NM
					, A.ORD_EMAIL
				FROM
					ORD_INFO A, ORD_PROD_INFO B, ORD_CANC_INFO C, PROD D, MBER_INFO E, PROD_IMG F
				WHERE
					    A.ORD_CD = B.ORD_CD
					AND B.CANC_CD = C.CANC_CD
					AND B.PROD_CODE = D.PROD_CODE
					AND D.MBER_SEQ = E.MBER_SEQ
					AND B.PROD_CODE = F.PROD_CODE(+)
					AND B.PROD_TYPE_CD = '2'
					AND B.PROC_STAT_CD = '50'
					AND F.PROD_IMG_GB_CD(+) = '11'
					AND TO_CHAR(B.UPDT_DT,'YYYYMMDD') BETWEEN #{S_START_DATE} AND  #{S_END_DATE}
					<include refid="SharCancelSearch" />
				GROUP BY A.ORD_CD , TO_CHAR(B.UPDT_DT, 'YYYY-MM-DD HH24:MI'), A.ORD_REG_DATE, A.ORD_NM, A.ORD_EMAIL
			) TA
	</select>
	
	<!-- 쉐어링 취소 그룹 리스트 -->
	<select id="selectListSharCancelGroup" resultType="hashmap">
		SELECT
			  TA.ORD_CD
			, TA.REQUEST_DT
			, TO_CHAR(TA.ORD_REG_DATE, 'YYYY-MM-DD HH24:MI') AS ORDER_DT
			, TA.ORD_NM
			, TA.ORD_EMAIL
			, NO
		FROM
			(
				SELECT
					  A.ORD_CD 
					, TO_CHAR(B.UPDT_DT, 'YYYY-MM-DD HH24:MI') AS REQUEST_DT
					, A.ORD_REG_DATE
					, A.ORD_NM
					, A.ORD_EMAIL
					, ROW_NUMBER() OVER(ORDER BY TO_CHAR(B.UPDT_DT, 'YYYY-MM-DD HH24:MI') DESC) AS NO
				FROM
					ORD_INFO A, ORD_PROD_INFO B, ORD_CANC_INFO C, PROD D, MBER_INFO E, PROD_IMG F
				WHERE
					    A.ORD_CD = B.ORD_CD
					AND B.CANC_CD = C.CANC_CD
					AND B.PROD_CODE = D.PROD_CODE
					AND D.MBER_SEQ = E.MBER_SEQ
					AND B.PROD_CODE = F.PROD_CODE(+)
					AND B.PROD_TYPE_CD = '2'
					AND B.PROC_STAT_CD = '50'
					AND F.PROD_IMG_GB_CD(+) = '11'
					AND TO_CHAR(B.UPDT_DT,'YYYYMMDD') BETWEEN #{S_START_DATE} AND  #{S_END_DATE}
					<include refid="SharCancelSearch" />
				GROUP BY A.ORD_CD , TO_CHAR(B.UPDT_DT, 'YYYY-MM-DD HH24:MI'), A.ORD_REG_DATE, A.ORD_NM, A.ORD_EMAIL
			) TA
		WHERE
			TA.NO BETWEEN #{START_ROW} AND #{END_ROW}
        ORDER BY TA.REQUEST_DT DESC
	</select>
	
	<!-- 쉐어링 취소 그룹 상세 리스트 -->
	<select id="selectListSharCancelGroupList" resultType="hashmap">
		SELECT
			  TB.ORD_CD
			, TB.REQUEST_DT
			, TO_CHAR(TB.ORD_REG_DATE, 'YYYY-MM-DD HH24:MI') AS ORDER_DT
			, TB.ORD_NM
			, TB.ORD_EMAIL
			, TE.MBER_GB_CD AS SELLER_TYPE
			, TE.MBER_NM AS SELLER_NAME
			, TE.MBER_EMAIL
			, TD.PROD_CODE
			, TD.PROD_NM
			, TF.PROD_IMG_URL
			, TG.CANC_REASON_CD
			, TG.CANC_REASON
		FROM
			(
				SELECT
					  TA.*
				FROM
					(
						SELECT
							  A.ORD_CD 
							, TO_CHAR(B.UPDT_DT, 'YYYY-MM-DD HH24:MI') AS REQUEST_DT
							, A.ORD_REG_DATE
							, A.ORD_NM
							, A.ORD_EMAIL
							, ROW_NUMBER() OVER(ORDER BY TO_CHAR(B.UPDT_DT, 'YYYY-MM-DD HH24:MI') DESC) AS NO
						FROM
							ORD_INFO A, ORD_PROD_INFO B, ORD_CANC_INFO C, PROD D, MBER_INFO E, PROD_IMG F
						WHERE
							    A.ORD_CD = B.ORD_CD
							AND B.CANC_CD = C.CANC_CD
							AND B.PROD_CODE = D.PROD_CODE
							AND D.MBER_SEQ = E.MBER_SEQ
							AND B.PROD_CODE = F.PROD_CODE(+)
							AND B.PROD_TYPE_CD = '2'
							AND B.PROC_STAT_CD = '50'
							AND F.PROD_IMG_GB_CD(+) = '11'
							AND TO_CHAR(B.UPDT_DT,'YYYYMMDD') BETWEEN #{S_START_DATE} AND  #{S_END_DATE}
							<include refid="SharCancelSearch" />
						GROUP BY A.ORD_CD , TO_CHAR(B.UPDT_DT, 'YYYY-MM-DD HH24:MI'), A.ORD_REG_DATE, A.ORD_NM, A.ORD_EMAIL
					) TA
				WHERE
					TA.NO BETWEEN #{START_ROW} AND #{END_ROW}
		        ORDER BY TA.REQUEST_DT DESC
			) TB, ORD_PROD_INFO TC, PROD TD, MBER_INFO TE, PROD_IMG TF, ORD_CANC_INFO TG         
		WHERE
			    TB.ORD_CD = TC.ORD_CD
			AND TB.REQUEST_DT = TO_CHAR(TC.UPDT_DT, 'YYYY-MM-DD HH24:MI')
			AND TC.PROD_CODE = TD.PROD_CODE
			AND TD.MBER_SEQ = TE.MBER_SEQ
			AND TC.PROD_CODE = TF.PROD_CODE(+)
			AND TC.CANC_CD = TG.CANC_CD
			AND TF.PROD_IMG_GB_CD(+) = '11'		        
	</select>
	
	<!-- 쉐어링 취소 상세 리스트 -->
	<select id="selectSharCancelList" resultType="hashmap">
		SELECT
			  A.ORD_CD 
			, TO_CHAR(B.UPDT_DT, 'YYYY-MM-DD HH24:MI') AS REQUEST_DT
			, E.MBER_GB_CD AS SELLER_TYPE
			, E.MBER_NM AS SELLER_NAME
			, E.MBER_EMAIL
			, D.PROD_CODE
			, D.PROD_NM
			, C.CANC_REASON_CD
			, C.CANC_REASON
			, TO_CHAR(C.CANC_DT, 'YYYY-MM-DD HH24:MI') AS CANC_DT
			, B.PROD_ORD_AMT
			, NVL(A.POINT_USE_AMT,0) AS POINT_USE_AMT 
		FROM
			ORD_INFO A, ORD_PROD_INFO B, ORD_CANC_INFO C, PROD D, MBER_INFO E
		WHERE
			    A.ORD_CD = B.ORD_CD
			AND B.CANC_CD = C.CANC_CD
			AND B.PROD_CODE = D.PROD_CODE
			AND D.MBER_SEQ = E.MBER_SEQ
			AND B.ORD_CD = #{ORD_CD}
			AND TO_CHAR(B.UPDT_DT, 'YYYY-MM-DD HH24:MI') = #{REQUEST_DT}
		ORDER BY TO_CHAR(B.UPDT_DT, 'YYYY-MM-DD HH24:MI') DESC
	</select>
	
	<!-- 반품,교환 배송지 정보 수정  -->
	<update id="updateOrdDlvReg">
	    UPDATE 
	    	CHG_RTN_PROC_INFO 
	    SET
			  RCV_NM 		= #{RCV_NM}
			, HP 			= #{HP}
	        , ZIP_CD 		= #{ZIP_CD}
	        , JUSO_JIBEN 	= #{JUSO_JIBEN}
	        , JUSO_DORO 	= #{JUSO_DORO}
	        , JUSO_DTL 		=  #{JUSO_DTL}
		WHERE 
			    ORD_CD = #{P_ORD_CD}
			AND CHG_CD = #{P_CHG_CD}
	</update>
	
	<!-- 주문 메모 수정   -->
	<update id="updateSharAdminMemo">
	    UPDATE 
	    	ORD_INFO 
	    SET
			ADMIN_MEMO =  #{ADMIN_MEMO}
		WHERE 
			ORD_CD = #{ADMIN_ORD_CD}
	</update>
	
	<!-- 셰어링 주문 조회 엑셀다운로드   -->
	<select id="selectListSharOrderExcel" resultType="hashmap">
		SELECT
			  A.ORD_CD
			, A.ORD_REG_DATE
			, A.ORD_NM || ' ( ' || A.ORD_EMAIL || ' )' AS ORDER_INFO
			, A.ORD_HP
		    , DECODE(D.MBER_GB_CD,0,'[개인]',1,'[사업자]') || D.MBER_NM || ' ( ' || D.MBER_EMAIL || ' )' AS SELLER_INFO
		    , C.PROD_CODE
		    , E.COM_CD_NM AS PROC_STAT_CD_NAME
		    , C.PROD_NM
		    , F.DEPOSIT
		    , DECODE(D.MBER_GB_CD,0,'0 (최대' || B.SHARE_TERM || ' 일)',1,NVL(F.SHARING_PRICE,0) * B.SHARE_TERM || ' (' || B.SHARE_TERM || ' 일)') AS SHARING_PERIOD_PRICE
		    , B.ORD_QTY
		    , B.PROD_PRCE
		    , NVL(B.DLV_PRCE,0) AS DLV_PRCE
		    , NVL(B.CPN_USE_AMT,0) AS CPN_USE_AMT
		    , DECODE(D.MBER_GB_CD,0,(F.DEPOSIT*B.ORD_QTY)+NVL(B.DLV_PRCE,0)-NVL(B.CPN_USE_AMT,0),1,((F.DEPOSIT+(NVL(F.SHARING_PRICE,0) * B.SHARE_TERM))*B.ORD_QTY)+NVL(B.DLV_PRCE,0)-NVL(B.CPN_USE_AMT,0)) AS TOTAL_ORDER_PRICE
		    , A.POINT_USE_AMT
		    , A.REAL_SELT_AMT
		    , NVL(G.COM_CD_NM,'0원 결제') AS PAYMENT
		    , I.CARD_COMP_NM
		    , H.RCV_NM
		    , H.RCV_TEL
		    , H.ZIP_CD
		    , H.JUSO_DORO || ' ' || H.JUSO_DTL AS DORO_ADDR_INFO
		    , H.JUSO_JIBEN || ' ' || H.JUSO_DTL AS JIBEN_ADDR_INFO
		    , H.DLV_MSG
		    , A.DLV_COM_CD_NAME
		    , A.INVC_NO
		    , TO_CHAR(A.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS DLV_REGIST_DT
		    , TO_CHAR(A.DLV_END_DT, 'YYYY-MM-DD HH24:MI') AS DLV_END_DT
		    , TO_CHAR(J.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS CHG_REGIST_DT
		    , TO_CHAR(J.DLV_END_DT, 'YYYY-MM-DD HH24:MI') AS CHG_DLV_END_DT
		    , NVL(F.SHARING_PRICE,0) AS SHARING_PRICE
		    , CASE
		      WHEN A.DLV_END_DT IS NULL THEN ''
		      WHEN (A.PROC_STAT_CD = '85' OR A.PROC_STAT_CD = '86') AND A.DLV_END_DT IS NOT NULL AND ((TRUNC(SYSDATE) - TRUNC(A.DLV_END_DT) + 1) <![CDATA[<=]]> NVL(B.SHARE_TERM,0)) THEN TO_CHAR(A.DLV_END_DT,'YYYY-MM-DD') || ' - ' || TO_CHAR(A.DLV_END_DT + B.SHARE_TERM -1,'YYYY-MM-DD')
		           || ' (' || TO_CHAR(TRUNC(SYSDATE) - TRUNC(A.DLV_END_DT) + 1) || '/' || TO_CHAR(B.SHARE_TERM - (TRUNC(SYSDATE) - TRUNC(A.DLV_END_DT) + 1)) || ')'
		      WHEN (A.PROC_STAT_CD = '85' OR A.PROC_STAT_CD = '86') AND A.DLV_END_DT IS NOT NULL AND ((TRUNC(SYSDATE) - TRUNC(A.DLV_END_DT) + 1) <![CDATA[>]]> NVL(B.SHARE_TERM,0)) THEN TO_CHAR(A.DLV_END_DT,'YYYY-MM-DD') || ' - ' || TO_CHAR(A.DLV_END_DT + B.SHARE_TERM -1,'YYYY-MM-DD')
		           || ' (' || NVL(B.SHARE_TERM,0) || '/' || 0 || ')'
	          WHEN (A.PROC_STAT_CD = '87' OR A.PROC_STAT_CD = '88' OR A.PROC_STAT_CD = '89') AND A.DLV_END_DT IS NOT NULL THEN TO_CHAR(A.DLV_END_DT,'YYYY-MM-DD') || ' - ' || TO_CHAR(J.REGIST_DT,'YYYY-MM-DD')
			           || ' (' || TO_CHAR(TRUNC(J.REGIST_DT) - TRUNC(A.DLV_END_DT) + 1) || '/' || TO_CHAR(NVL(B.SHARE_TERM,0) - (TRUNC(J.REGIST_DT) - TRUNC(A.DLV_END_DT) + 1)) || ')'
	          WHEN (A.PROC_STAT_CD = '90' OR A.PROC_STAT_CD = '91' OR A.PROC_STAT_CD = '92') AND A.DLV_END_DT IS NOT NULL AND D.MBER_GB_CD = 0 THEN TO_CHAR(A.DLV_END_DT,'YYYY-MM-DD') || ' - ' || TO_CHAR(A.DLV_END_DT + NVL(B.SHARE_TERM,0),'YYYY-MM-DD')
			           || ' (' || NVL(B.SHARE_TERM,0) || '/' || 0 || ')'
	          WHEN (A.PROC_STAT_CD = '90' OR A.PROC_STAT_CD = '91' OR A.PROC_STAT_CD = '92') AND A.DLV_END_DT IS NOT NULL AND D.MBER_GB_CD = 1 THEN TO_CHAR(A.DLV_END_DT,'YYYY-MM-DD') || ' - ' || TO_CHAR(J.REGIST_DT,'YYYY-MM-DD')
			           || ' (' || TO_CHAR(TRUNC(J.REGIST_DT) - TRUNC(A.DLV_END_DT) + 1) || '/' || 0 || ')'
	          ELSE ''
			  END AS SHAR_PERIOD
        	, CASE
		      WHEN A.DLV_END_DT IS NULL THEN 0
		      WHEN (A.PROC_STAT_CD = '85' OR A.PROC_STAT_CD = '86') AND A.DLV_END_DT IS NOT NULL AND ((TRUNC(SYSDATE) - TRUNC(A.DLV_END_DT) + 1) <![CDATA[<=]]> NVL(B.SHARE_TERM,0)) THEN NVL(F.SHARING_PRICE,0) * (TRUNC(SYSDATE) - TRUNC(A.DLV_END_DT) + 1) * NVL(B.ORD_QTY,0)
		      WHEN (A.PROC_STAT_CD = '85' OR A.PROC_STAT_CD = '86') AND A.DLV_END_DT IS NOT NULL AND ((TRUNC(SYSDATE) - TRUNC(A.DLV_END_DT) + 1) <![CDATA[>]]> NVL(B.SHARE_TERM,0)) THEN NVL(F.SHARING_PRICE,0) * NVL(B.SHARE_TERM,0) * NVL(B.ORD_QTY,0)
	          WHEN (A.PROC_STAT_CD = '87' OR A.PROC_STAT_CD = '88' OR A.PROC_STAT_CD = '89') AND A.DLV_END_DT IS NOT NULL THEN NVL(F.SHARING_PRICE,0) * (TRUNC(J.REGIST_DT) - TRUNC(A.DLV_END_DT) + 1) * NVL(B.ORD_QTY,0)
	          WHEN (A.PROC_STAT_CD = '90' OR A.PROC_STAT_CD = '91' OR A.PROC_STAT_CD = '92') AND A.DLV_END_DT IS NOT NULL THEN NVL(F.SHARING_PRICE,0) * (TRUNC(J.REGIST_DT) - TRUNC(A.DLV_END_DT) + 1) * NVL(B.ORD_QTY,0)
	          ELSE 0
			  END AS SHAR_USING_MONEY
        	, CASE
		      WHEN A.DLV_END_DT IS NULL THEN 0
		      WHEN (A.PROC_STAT_CD = '87' OR A.PROC_STAT_CD = '88' OR A.PROC_STAT_CD = '89') AND A.DLV_END_DT IS NOT NULL THEN NVL(F.DEPOSIT,0) * NVL(B.ORD_QTY,0) - (NVL(F.SHARING_PRICE,0) *(TRUNC(J.REGIST_DT) - TRUNC(A.DLV_END_DT) + 1)* NVL(B.ORD_QTY,0))
          	  WHEN (A.PROC_STAT_CD = '90' OR A.PROC_STAT_CD = '91' OR A.PROC_STAT_CD = '92') AND A.DLV_END_DT IS NOT NULL THEN ((F.DEPOSIT+(NVL(F.SHARING_PRICE,0) * B.SHARE_TERM))*B.ORD_QTY) - (NVL(F.SHARING_PRICE,0) *(TRUNC(J.REGIST_DT) - TRUNC(A.DLV_END_DT) + 1)* NVL(B.ORD_QTY,0))
          	  ELSE 0
		      END AS SHAR_RETURN_MONEY
		FROM
			(
				SELECT
					  OI.ORD_CD
					, TO_CHAR(OI.ORD_REG_DATE , 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE
					, OI.ORD_NM
					, OI.ORD_EMAIL
					, OI.ORD_HP
					, OI.ORD_AMT
					, OI.POINT_USE_AMT
          			, OI.CPN_USE_AMT
					, OI.REAL_SELT_AMT
					, OI.SELT_GB_CD
					, OI.CREDIT_APPR_NO
					, OI.ORD_STAT_CD
					, CASE WHEN OPI.PROC_STAT_CD = '85' AND TRUNC(SYSDATE) - TRUNC(II.DLV_END_DT + OPI.SHARE_TERM -1) > 0 THEN '86' ELSE OPI.PROC_STAT_CD END AS PROC_STAT_CD
					, II.DLV_CMP_CD
					, CC.COM_CD_NM AS DLV_COM_CD_NAME
					, II.INVC_NO
					, II.REGIST_DT
					, II.DLV_END_DT
				FROM
		  			ORD_INFO OI, ORD_PROD_INFO OPI, INVC_INFO II, (SELECT COM_CD,COM_CD_NM FROM CODE WHERE GRP_CD = 'DLV_CMP_CD') CC
		  		WHERE
                    	OI.ORD_CD = OPI.ORD_CD
                    AND OPI.ORD_CD = II.ORD_CD(+)
                    AND OPI.PROD_CODE = II.PROD_CODE(+)
                    AND OPI.PROD_SEQ = II.PROD_SEQ(+)
                    AND II.DLV_CMP_CD = CC.COM_CD(+)
                    AND OPI.PROD_TYPE_CD = '2'
		  			AND TO_CHAR(OI.ORD_REG_DATE,'YYYYMMDD') BETWEEN #{S_START_DATE} AND  #{S_END_DATE}
			) A , ORD_PROD_INFO B , PROD C, MBER_INFO D, (SELECT COM_CD,COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD') E , PROD_SHARING F
          		, (SELECT COM_CD,COM_CD_NM FROM CODE WHERE GRP_CD = 'SELT_GB_CD') G, ORD_DLV_INFO H
          		, (SELECT ORD_CD, CARD_COMP_NM, CARD_NO, SETL_NM, CARRIER, DSTADDR FROM ORD_SETL_INFO WHERE TRD_GB_CD = '10') I
          		, (SELECT TC.*,TD.DLV_END_DT FROM (SELECT TA.CHG_CD, TB.ORD_CD, TB.PROD_CODE, TB.PROD_SEQ, TB.REGIST_DT FROM CHG_RTN_PROC_INFO TA , CHG_PROD_INFO TB WHERE TA.CHG_CD = TB.CHG_CD) TC LEFT OUTER JOIN CHG_INVC_INFO TD ON TC.ORD_CD = TD.ORD_CD AND TC.CHG_CD = TD.CHG_CD AND TC.PROD_CODE = TD.PROD_CODE AND TC.PROD_SEQ = TD.PROD_SEQ) J
		WHERE
			    A.ORD_CD = B.ORD_CD
			AND B.PROD_CODE = C.PROD_CODE
			AND C.MBER_SEQ = D.MBER_SEQ
			AND A.PROC_STAT_CD = E.COM_CD
			AND B.PROD_CODE = F.PROD_CODE
			AND A.SELT_GB_CD = G.COM_CD(+)
			AND A.ORD_CD = H.ORD_CD
      		AND A.ORD_CD = I.ORD_CD(+)
      		AND B.ORD_CD = J.ORD_CD(+)
      		AND B.PROD_CODE = J.PROD_CODE(+)
     		AND B.PROD_SEQ = J.PROD_SEQ(+)
			<include refid="SharOrdSearch"/>
		ORDER BY A.ORD_REG_DATE DESC
	</select>
	
	<!-- 셰어링 교환신청 조회 엑셀다운로드   -->
	<select id="selectListSharExcExcel" resultType="hashmap">
		SELECT
			  A.ORD_CD
			, A.ORD_REG_DATE
			, A.ORD_NM || ' ( ' || A.ORD_EMAIL || ' )' AS ORDER_INFO
			, A.ORD_HP
		    , DECODE(D.MBER_GB_CD,0,'[개인]',1,'[사업자]') || D.MBER_NM || ' ( ' || D.MBER_EMAIL || ' )' AS SELLER_INFO
		    , C.PROD_CODE
		    , E.COM_CD_NM AS PROC_STAT_CD_NAME
		    , C.PROD_NM
		    , F.DEPOSIT
		    , DECODE(D.MBER_GB_CD,0,'0 (최대' || B.SHARE_TERM || ' 일)',1,NVL(F.SHARING_PRICE,0) * B.SHARE_TERM || ' (' || B.SHARE_TERM || ' 일)') AS SHARING_PERIOD_PRICE
		    , B.ORD_QTY
		    , B.PROD_PRCE
		    , NVL(B.DLV_PRCE,0) AS DLV_PRCE
		    , NVL(B.CPN_USE_AMT,0) AS CPN_USE_AMT
		    , DECODE(D.MBER_GB_CD,0,(F.DEPOSIT*B.ORD_QTY)+NVL(B.DLV_PRCE,0)-NVL(B.CPN_USE_AMT,0),1,((F.DEPOSIT+(NVL(F.SHARING_PRICE,0) * B.SHARE_TERM))*B.ORD_QTY)+NVL(B.DLV_PRCE,0)-NVL(B.CPN_USE_AMT,0)) AS TOTAL_ORDER_PRICE
		    , A.POINT_USE_AMT
		    , A.REAL_SELT_AMT
		    , NVL(G.COM_CD_NM,'0원 결제') AS PAYMENT
		    , I.CARD_COMP_NM
		    , H.RCV_NM
		    , H.RCV_TEL
		    , H.ZIP_CD
		    , H.JUSO_DORO || ' ' || H.JUSO_DTL AS DORO_ADDR_INFO
		    , H.JUSO_JIBEN || ' ' || H.JUSO_DTL AS JIBEN_ADDR_INFO
		    , H.DLV_MSG
		    , A.DLV_COM_CD_NAME
		    , A.INVC_NO
		    , TO_CHAR(A.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS DLV_REGIST_DT
		    , TO_CHAR(A.DLV_END_DT, 'YYYY-MM-DD HH24:MI') AS DLV_END_DT
        	, A.REQUEST_DT
        	, A.CHG_DLV_END_DT
		    , NVL(F.SHARING_PRICE,0) AS SHARING_PRICE
		    , '' AS SHAR_PERIOD
		    , 0 AS SHAR_USING_MONEY
		    , 0 AS SHAR_RETURN_MONEY
		    , A.CHG_REASON
		FROM
			(
			    SELECT
					  OI.ORD_CD
					, TO_CHAR(OI.ORD_REG_DATE , 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE
					, OI.ORD_NM
					, OI.ORD_EMAIL
					, OI.ORD_HP
					, OI.ORD_AMT
					, OI.POINT_USE_AMT
          			, OI.CPN_USE_AMT
					, OI.REAL_SELT_AMT
					, OI.SELT_GB_CD
					, OI.CREDIT_APPR_NO
					, OI.ORD_STAT_CD
          			, CPI.PROC_STAT_CD
					, TO_CHAR(CRPI.REGIST_DT , 'YYYY-MM-DD HH24:MI') AS REQUEST_DT
		            , II.REGIST_DT
		            , II.DLV_END_DT
		            , II.INVC_NO
		            , II.DLV_CMP_CD
					, CC.COM_CD_NM AS DLV_COM_CD_NAME
					, TO_CHAR(CII.DLV_END_DT, 'YYYY-MM-DD HH24:MI') AS CHG_DLV_END_DT
          			, CRPI.CHG_REASON_CD
          			, '[' || CRC.COM_CD_NM || '] ' || CRPI.CHG_REASON AS CHG_REASON
			    FROM
					CHG_RTN_PROC_INFO CRPI, CHG_PROD_INFO CPI, ORD_INFO OI, ORD_PROD_INFO OPI, INVC_INFO II, (SELECT COM_CD,COM_CD_NM FROM CODE WHERE GRP_CD = 'CANC_REASON_CD') CRC, CHG_INVC_INFO CII, (SELECT COM_CD,COM_CD_NM FROM CODE WHERE GRP_CD = 'DLV_CMP_CD') CC
			    WHERE
					    CRPI.CHG_CD = CPI.CHG_CD
					AND CRPI.ORD_CD = OI.ORD_CD
					AND CPI.ORD_CD = OPI.ORD_CD
					AND CPI.PROD_CODE = OPI.PROD_CODE
					AND CPI.PROD_SEQ = OPI.PROD_SEQ
					AND CPI.ORD_CD = II.ORD_CD
					AND CPI.PROD_CODE = II.PROD_CODE
					AND CPI.PROD_SEQ = II.PROD_SEQ
					AND CRPI.CHG_REASON_CD = CRC.COM_CD(+)
					AND CPI.ORD_CD = CII.ORD_CD(+)
					AND CPI.CHG_CD = CII.CHG_CD(+)
					AND CPI.PROD_CODE = CII.PROD_CODE(+)
					AND CPI.PROD_SEQ = CII.PROD_SEQ(+)
					AND II.DLV_CMP_CD = CC.COM_CD(+)
					AND TO_CHAR(CRPI.REGIST_DT,'YYYYMMDD') BETWEEN #{S_START_DATE} AND  #{S_END_DATE}
          			AND OPI.PROD_TYPE_CD = '2'
					AND CPI.PROC_STAT_CD IN (41, 42, 43)
			) A , ORD_PROD_INFO B , PROD C, MBER_INFO D, (SELECT COM_CD,COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD') E , PROD_SHARING F
          , (SELECT COM_CD,COM_CD_NM FROM CODE WHERE GRP_CD = 'SELT_GB_CD') G, ORD_DLV_INFO H
          , (SELECT ORD_CD, CARD_COMP_NM, CARD_NO, SETL_NM, CARRIER, DSTADDR FROM ORD_SETL_INFO WHERE TRD_GB_CD = '10') I
		WHERE
			    A.ORD_CD = B.ORD_CD
			AND B.PROD_CODE = C.PROD_CODE
			AND C.MBER_SEQ = D.MBER_SEQ
			AND A.PROC_STAT_CD = E.COM_CD
			AND B.PROD_CODE = F.PROD_CODE
			AND A.SELT_GB_CD = G.COM_CD(+)
			AND A.ORD_CD = H.ORD_CD
      		AND A.ORD_CD = I.ORD_CD(+)
			<if test="SEARCH_ORD_CD != null and SEARCH_ORD_CD != ''">
			   AND A.ORD_CD like '%'||<![CDATA[#{SEARCH_ORD_CD}]]>||'%'
			</if>
			<if test="SEARCH_PROD_NM != null and SEARCH_PROD_NM != ''">
			   AND C.PROD_NM like '%'||<![CDATA[#{SEARCH_PROD_NM}]]>||'%'
			</if>
			<if test="S_MBER_GB != null and S_MBER_GB != ''">
			   AND D.MBER_GB_CD = #{S_MBER_GB}
			</if>
			<if test="CHG_REASON_CD != null and CHG_REASON_CD != ''">
			   AND A.CHG_REASON_CD = #{CHG_REASON_CD}
			</if>
			<if test="SEARCH_USER != '' and SEARCH_USER != null">
				<if test="SearchUserSel  == 'SEARCH_SELLER_ID'">
					AND D.MBER_EMAIL LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
				</if>
				<if test="SearchUserSel  == 'SEARCH_SELLER_NM'">
					AND D.MBER_NM LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
				</if>
				<if test="SearchUserSel  == 'SEARCH_ORD_ID'">
				    AND A.ORD_EMAIL LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
				</if>
				<if test="SearchUserSel  == 'SEARCH_ORD_NM'">
				    AND A.ORD_NM LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
				</if>
	  		</if>
	     	<if test="INS_CHK_BOX_RESULT != null">
		        AND A.PROC_STAT_CD IN
		    	<foreach item="item" index="index" collection="INS_CHK_BOX_RESULT" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		ORDER BY A.ORD_REG_DATE DESC
	</select>
	
	<!-- 셰어링 반품신청 조회 엑셀다운로드   -->
	<select id="selectListSharRtnExcel" resultType="hashmap">
		SELECT
			  A.ORD_CD
			, A.ORD_REG_DATE
			, A.ORD_NM || ' ( ' || A.ORD_EMAIL || ' )' AS ORDER_INFO
			, A.ORD_HP
		    , DECODE(D.MBER_GB_CD,0,'[개인]',1,'[사업자]') || D.MBER_NM || ' ( ' || D.MBER_EMAIL || ' )' AS SELLER_INFO
		    , C.PROD_CODE
		    , E.COM_CD_NM AS PROC_STAT_CD_NAME
		    , C.PROD_NM
		    , F.DEPOSIT
		    , DECODE(D.MBER_GB_CD,0,'0 (최대' || B.SHARE_TERM || ' 일)',1,NVL(F.SHARING_PRICE,0) * B.SHARE_TERM || ' (' || B.SHARE_TERM || ' 일)') AS SHARING_PERIOD_PRICE
		    , B.ORD_QTY
		    , B.PROD_PRCE
		    , NVL(B.DLV_PRCE,0) AS DLV_PRCE
		    , NVL(B.CPN_USE_AMT,0) AS CPN_USE_AMT
		    , DECODE(D.MBER_GB_CD,0,(F.DEPOSIT*B.ORD_QTY)+NVL(B.DLV_PRCE,0)-NVL(B.CPN_USE_AMT,0),1,((F.DEPOSIT+(NVL(F.SHARING_PRICE,0) * B.SHARE_TERM))*B.ORD_QTY)+NVL(B.DLV_PRCE,0)-NVL(B.CPN_USE_AMT,0)) AS TOTAL_ORDER_PRICE
		    , A.POINT_USE_AMT
		    , A.REAL_SELT_AMT
		    , NVL(G.COM_CD_NM,'0원 결제') AS PAYMENT
		    , I.CARD_COMP_NM
		    , H.RCV_NM
		    , H.RCV_TEL
		    , H.ZIP_CD
		    , H.JUSO_DORO || ' ' || H.JUSO_DTL AS DORO_ADDR_INFO
		    , H.JUSO_JIBEN || ' ' || H.JUSO_DTL AS JIBEN_ADDR_INFO
		    , H.DLV_MSG
		    , A.DLV_COM_CD_NAME
		    , A.INVC_NO
		    , TO_CHAR(A.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS DLV_REGIST_DT
		    , TO_CHAR(A.DLV_END_DT, 'YYYY-MM-DD HH24:MI') AS DLV_END_DT
        	, A.REQUEST_DT
        	, A.CHG_DLV_END_DT
		    , NVL(F.SHARING_PRICE,0) AS SHARING_PRICE
		    , '' AS SHAR_PERIOD
		    , 0 AS SHAR_USING_MONEY
		    , 0 AS SHAR_RETURN_MONEY
		    , A.CHG_REASON
		FROM
			(
			    SELECT
					  OI.ORD_CD
					, TO_CHAR(OI.ORD_REG_DATE , 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE
					, OI.ORD_NM
					, OI.ORD_EMAIL
					, OI.ORD_HP
					, OI.ORD_AMT
					, OI.POINT_USE_AMT
          			, OI.CPN_USE_AMT
					, OI.REAL_SELT_AMT
					, OI.SELT_GB_CD
					, OI.CREDIT_APPR_NO
					, OI.ORD_STAT_CD
          			, CPI.PROC_STAT_CD
					, TO_CHAR(CRPI.REGIST_DT , 'YYYY-MM-DD HH24:MI') AS REQUEST_DT
		            , II.REGIST_DT
		            , II.DLV_END_DT
		            , II.INVC_NO
		            , II.DLV_CMP_CD
					, CC.COM_CD_NM AS DLV_COM_CD_NAME
					, TO_CHAR(CII.DLV_END_DT, 'YYYY-MM-DD HH24:MI') AS CHG_DLV_END_DT
          			, CRPI.CHG_REASON_CD
          			, '[' || CRC.COM_CD_NM || '] ' || CRPI.CHG_REASON AS CHG_REASON
			    FROM
					CHG_RTN_PROC_INFO CRPI, CHG_PROD_INFO CPI, ORD_INFO OI, ORD_PROD_INFO OPI, INVC_INFO II, (SELECT COM_CD,COM_CD_NM FROM CODE WHERE GRP_CD = 'CANC_REASON_CD') CRC, CHG_INVC_INFO CII, (SELECT COM_CD,COM_CD_NM FROM CODE WHERE GRP_CD = 'DLV_CMP_CD') CC
			    WHERE
					    CRPI.CHG_CD = CPI.CHG_CD
					AND CRPI.ORD_CD = OI.ORD_CD
					AND CPI.ORD_CD = OPI.ORD_CD
					AND CPI.PROD_CODE = OPI.PROD_CODE
					AND CPI.PROD_SEQ = OPI.PROD_SEQ
					AND CPI.ORD_CD = II.ORD_CD
					AND CPI.PROD_CODE = II.PROD_CODE
					AND CPI.PROD_SEQ = II.PROD_SEQ
					AND CRPI.CHG_REASON_CD = CRC.COM_CD(+)
					AND CPI.ORD_CD = CII.ORD_CD(+)
					AND CPI.CHG_CD = CII.CHG_CD(+)
					AND CPI.PROD_CODE = CII.PROD_CODE(+)
					AND CPI.PROD_SEQ = CII.PROD_SEQ(+)
					AND II.DLV_CMP_CD = CC.COM_CD(+)
					AND TO_CHAR(CRPI.REGIST_DT,'YYYYMMDD') BETWEEN #{S_START_DATE} AND  #{S_END_DATE}
          			AND OPI.PROD_TYPE_CD = '2'
					AND CPI.PROC_STAT_CD IN (31, 32, 33)
			) A , ORD_PROD_INFO B , PROD C, MBER_INFO D, (SELECT COM_CD,COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD') E , PROD_SHARING F
          , (SELECT COM_CD,COM_CD_NM FROM CODE WHERE GRP_CD = 'SELT_GB_CD') G, ORD_DLV_INFO H
          , (SELECT ORD_CD, CARD_COMP_NM, CARD_NO, SETL_NM, CARRIER, DSTADDR FROM ORD_SETL_INFO WHERE TRD_GB_CD = '10') I
		WHERE
			    A.ORD_CD = B.ORD_CD
			AND B.PROD_CODE = C.PROD_CODE
			AND C.MBER_SEQ = D.MBER_SEQ
			AND A.PROC_STAT_CD = E.COM_CD
			AND B.PROD_CODE = F.PROD_CODE
			AND A.SELT_GB_CD = G.COM_CD(+)
			AND A.ORD_CD = H.ORD_CD
      		AND A.ORD_CD = I.ORD_CD(+)
			<if test="SEARCH_ORD_CD != null and SEARCH_ORD_CD != ''">
			   AND A.ORD_CD like '%'||<![CDATA[#{SEARCH_ORD_CD}]]>||'%'
			</if>
			<if test="SEARCH_PROD_NM != null and SEARCH_PROD_NM != ''">
			   AND C.PROD_NM like '%'||<![CDATA[#{SEARCH_PROD_NM}]]>||'%'
			</if>
			<if test="S_MBER_GB != null and S_MBER_GB != ''">
			   AND D.MBER_GB_CD = #{S_MBER_GB}
			</if>
			<if test="CHG_REASON_CD != null and CHG_REASON_CD != ''">
			   AND A.CHG_REASON_CD = #{CHG_REASON_CD}
			</if>
			<if test="SEARCH_USER != '' and SEARCH_USER != null">
				<if test="SearchUserSel  == 'SEARCH_SELLER_ID'">
					AND D.MBER_EMAIL LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
				</if>
				<if test="SearchUserSel  == 'SEARCH_SELLER_NM'">
					AND D.MBER_NM LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
				</if>
				<if test="SearchUserSel  == 'SEARCH_ORD_ID'">
				    AND A.ORD_EMAIL LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
				</if>
				<if test="SearchUserSel  == 'SEARCH_ORD_NM'">
				    AND A.ORD_NM LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
				</if>
	  		</if>
	     	<if test="INS_CHK_BOX_RESULT != null">
		        AND A.PROC_STAT_CD IN
		    	<foreach item="item" index="index" collection="INS_CHK_BOX_RESULT" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		ORDER BY A.ORD_REG_DATE DESC
	</select>
	
	<!-- 셰어링 주문취소 조회 엑셀다운로드   -->
	<select id="selectListSharCanExcel" resultType="hashmap">
		SELECT
			  A.ORD_CD
			, A.ORD_REG_DATE
			, A.ORD_NM || ' ( ' || A.ORD_EMAIL || ' )' AS ORDER_INFO
			, A.ORD_HP
		    , DECODE(D.MBER_GB_CD,0,'[개인]',1,'[사업자]') || D.MBER_NM || ' ( ' || D.MBER_EMAIL || ' )' AS SELLER_INFO
		    , C.PROD_CODE
		    , E.COM_CD_NM AS PROC_STAT_CD_NAME
		    , C.PROD_NM
		    , F.DEPOSIT
		    , DECODE(D.MBER_GB_CD,0,'0 (최대' || B.SHARE_TERM || ' 일)',1,NVL(F.SHARING_PRICE,0) * B.SHARE_TERM || ' (' || B.SHARE_TERM || ' 일)') AS SHARING_PERIOD_PRICE
		    , B.ORD_QTY
		    , B.PROD_PRCE
		    , NVL(B.DLV_PRCE,0) AS DLV_PRCE
		    , NVL(B.CPN_USE_AMT,0) AS CPN_USE_AMT
		    , DECODE(D.MBER_GB_CD,0,(F.DEPOSIT*B.ORD_QTY)+NVL(B.DLV_PRCE,0)-NVL(B.CPN_USE_AMT,0),1,((F.DEPOSIT+(NVL(F.SHARING_PRICE,0) * B.SHARE_TERM))*B.ORD_QTY)+NVL(B.DLV_PRCE,0)-NVL(B.CPN_USE_AMT,0)) AS TOTAL_ORDER_PRICE
		    , A.POINT_USE_AMT
		    , A.REAL_SELT_AMT
		    , NVL(G.COM_CD_NM,'0원 결제') AS PAYMENT
		    , I.CARD_COMP_NM
		    , H.RCV_NM
		    , H.RCV_TEL
		    , H.ZIP_CD
		    , H.JUSO_DORO || ' ' || H.JUSO_DTL AS DORO_ADDR_INFO
		    , H.JUSO_JIBEN || ' ' || H.JUSO_DTL AS JIBEN_ADDR_INFO
		    , H.DLV_MSG
		    , A.DLV_COM_CD_NAME
		    , A.INVC_NO
		    , TO_CHAR(A.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS DLV_REGIST_DT
		    , TO_CHAR(A.DLV_END_DT, 'YYYY-MM-DD HH24:MI') AS DLV_END_DT
		    , TO_CHAR(J.REGIST_DT, 'YYYY-MM-DD HH24:MI') AS CHG_REGIST_DT
		    , TO_CHAR(J.DLV_END_DT, 'YYYY-MM-DD HH24:MI') AS CHG_DLV_END_DT
		    , NVL(F.SHARING_PRICE,0) AS SHARING_PRICE
		    , '' AS SHAR_PERIOD
		    , 0 AS SHAR_USING_MONEY
		    , 0 AS SHAR_RETURN_MONEY
		    , A.CANC_REASON
		FROM
			(
				SELECT
					  OI.ORD_CD
					, TO_CHAR(OI.ORD_REG_DATE , 'YYYY-MM-DD HH24:MI') AS ORD_REG_DATE
					, OI.ORD_NM
					, OI.ORD_EMAIL
					, OI.ORD_HP
					, OI.ORD_AMT
					, OI.POINT_USE_AMT
          			, OI.CPN_USE_AMT
					, OI.REAL_SELT_AMT
					, OI.SELT_GB_CD
					, OI.CREDIT_APPR_NO
					, OI.ORD_STAT_CD
					, OPI.PROC_STAT_CD
					, II.DLV_CMP_CD
					, CC.COM_CD_NM AS DLV_COM_CD_NAME
					, II.INVC_NO
					, II.REGIST_DT
					, II.DLV_END_DT
					, OCI.CANC_REASON_CD
					, '[' || CRC.COM_CD_NM || '] ' || OCI.CANC_REASON AS CANC_REASON
				FROM
		  			ORD_INFO OI, ORD_PROD_INFO OPI, ORD_CANC_INFO OCI, INVC_INFO II, (SELECT COM_CD,COM_CD_NM FROM CODE WHERE GRP_CD = 'CANC_REASON_CD') CRC, (SELECT COM_CD,COM_CD_NM FROM CODE WHERE GRP_CD = 'DLV_CMP_CD') CC
		  		WHERE
                    	OI.ORD_CD = OPI.ORD_CD
                    AND OPI.CANC_CD = OCI.CANC_CD
                    AND OCI.CANC_REASON_CD = CRC.COM_CD(+)
                    AND OPI.ORD_CD = II.ORD_CD(+)
                    AND OPI.PROD_CODE = II.PROD_CODE(+)
                    AND OPI.PROD_SEQ = II.PROD_SEQ(+)
                    AND II.DLV_CMP_CD = CC.COM_CD(+)
                    AND OPI.PROD_TYPE_CD = '2'
                    AND OPI.PROC_STAT_CD = '50'
		  			AND TO_CHAR(OI.ORD_REG_DATE,'YYYYMMDD') BETWEEN #{S_START_DATE} AND  #{S_END_DATE}
			) A , ORD_PROD_INFO B , PROD C, MBER_INFO D, (SELECT COM_CD,COM_CD_NM FROM CODE WHERE GRP_CD = 'PROC_STAT_CD') E , PROD_SHARING F
          		, (SELECT COM_CD,COM_CD_NM FROM CODE WHERE GRP_CD = 'SELT_GB_CD') G, ORD_DLV_INFO H
          		, (SELECT ORD_CD, CARD_COMP_NM, CARD_NO, SETL_NM, CARRIER, DSTADDR FROM ORD_SETL_INFO WHERE TRD_GB_CD = '10') I
          		, (SELECT TC.*,TD.DLV_END_DT FROM (SELECT TA.CHG_CD, TB.ORD_CD, TB.PROD_CODE, TB.PROD_SEQ, TB.REGIST_DT FROM CHG_RTN_PROC_INFO TA , CHG_PROD_INFO TB WHERE TA.CHG_CD = TB.CHG_CD) TC LEFT OUTER JOIN CHG_INVC_INFO TD ON TC.ORD_CD = TD.ORD_CD AND TC.CHG_CD = TD.CHG_CD AND TC.PROD_CODE = TD.PROD_CODE AND TC.PROD_SEQ = TD.PROD_SEQ) J
		WHERE
			    A.ORD_CD = B.ORD_CD
			AND B.PROD_CODE = C.PROD_CODE
			AND C.MBER_SEQ = D.MBER_SEQ
			AND A.PROC_STAT_CD = E.COM_CD
			AND B.PROD_CODE = F.PROD_CODE
			AND A.SELT_GB_CD = G.COM_CD(+)
			AND A.ORD_CD = H.ORD_CD
      		AND A.ORD_CD = I.ORD_CD(+)
      		AND B.ORD_CD = J.ORD_CD(+)
      		AND B.PROD_CODE = J.PROD_CODE(+)
     		AND B.PROD_SEQ = J.PROD_SEQ(+)
			<if test="SEARCH_ORD_CD != null and SEARCH_ORD_CD != ''">
			   AND A.ORD_CD like '%'||<![CDATA[#{SEARCH_ORD_CD}]]>||'%'
			</if>
			<if test="SEARCH_PROD_NM != null and SEARCH_PROD_NM != ''">
			   AND C.PROD_NM like '%'||<![CDATA[#{SEARCH_PROD_NM}]]>||'%'
			</if>
			<if test="S_MBER_GB != null and S_MBER_GB != ''">
			   AND D.MBER_GB_CD = #{S_MBER_GB}
			</if>
			<if test="CANC_REASON_CD != null and CANC_REASON_CD != ''">
			   AND A.CANC_REASON_CD = #{CANC_REASON_CD}
			</if>
			<if test="SEARCH_USER != '' and SEARCH_USER != null">
				<if test="SearchUserSel  == 'SEARCH_SELLER_ID'">
					AND D.MBER_EMAIL LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
				</if>
				<if test="SearchUserSel  == 'SEARCH_SELLER_NM'">
					AND D.MBER_NM LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
				</if>
				<if test="SearchUserSel  == 'SEARCH_ORD_ID'">
				    AND A.ORD_EMAIL LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
				</if>
				<if test="SearchUserSel  == 'SEARCH_ORD_NM'">
				    AND A.ORD_NM LIKE '%'||<![CDATA[#{SEARCH_USER}]]>||'%'
				</if>
	  		</if>
		ORDER BY A.ORD_REG_DATE DESC
	</select>
	
	<!-- 주문상태변경 : ORD_INFO -->
	<update id="updateSharOrdState" parameterType="hashmap">
		UPDATE ORD_INFO SET 
			ORD_STAT_CD = #{NEXT_ORD_STAT_CD}
		WHERE ORD_CD = #{ORD_CD}
	</update>
	
	<!-- 주문상태변경 : ORD_PROD_INFO -->
	<update id="updateSharProcState" parameterType="hashmap">
		UPDATE ORD_PROD_INFO SET 
			PROC_STAT_CD = #{NEXT_PROC_STAT_CD}
		WHERE 
			    ORD_CD = #{ORD_CD}
			AND PROD_CODE = #{PROD_CODE}
	</update>

	<!-- 주문상태변경 : CHG_RTN_PROC_INFO -->
	<update id="updateSharOrdStateChg" parameterType="hashmap">
		UPDATE CHG_RTN_PROC_INFO SET 
			CHG_PROC_TYPE_CD = #{NEXT_CHG_PROC_TYPE_CD}
		WHERE 
			    CHG_CD = #{CHG_CD}
			AND ORD_CD = #{ORD_CD}
	</update>
	
	<!-- 주문상태변경 : CHG_PROD_INFO -->
	<update id="updateSharProcStateChg" parameterType="hashmap">
		UPDATE CHG_PROD_INFO SET 
			PROC_STAT_CD = #{NEXT_PROC_STAT_CD}
		WHERE 
			    CHG_CD = #{CHG_CD}
			AND ORD_CD = #{ORD_CD}
			AND PROD_CODE = #{PROD_CODE}
			AND PROD_SEQ = #{PROD_SEQ}
	</update>
	
	<!-- 배송완료 상태 변경 : INVC_INFO -->
	<update id="updateSharInvcState" parameterType="hashmap">
		UPDATE INVC_INFO SET 
			  DLV_STAT_CD = '20'
			, DLV_END_DT = SYSDATE
			, UPDT_DT = SYSDATE
		WHERE 
			    ORD_CD = #{ORD_CD}
			AND PROD_CODE = #{PROD_CODE}
			AND PROD_SEQ = #{PROD_SEQ}
			AND INVC_NO = #{INVC_NO}
	</update>
	
	<!-- 회수대기,교환신청,반품신청,반납신청 상태로 변경 -->
	<update id="updateSharOrderAllType" parameterType="hashmap">
		UPDATE ORD_PROD_INFO SET 
			PROC_STAT_CD = #{PROC_STAT_CD}
		WHERE 
			    ORD_CD = #{ORD_CD}
			AND PROD_CODE = #{PROD_CODE}
			AND PROD_SEQ = #{PROD_SEQ}
	</update>
	
	<!-- 회수,교환,반품,반납 접수 : CHG_CD -->
	<select id="maxSeq" parameterType="hashmap" resultType="String">
		SELECT TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI')||LPAD(SEQ_CHG_RTN_PROC_INFO.NEXTVAL, 4, 0) AS CHG_CD FROM DUAL
	</select>
	
	<!-- 회수,교환,반품,반납 접수 : CHG_RTN_PROC_INFO -->
	<insert id="insertChgRtnProcInfo" parameterType="hashmap">
		INSERT INTO CHG_RTN_PROC_INFO
			(
				CHG_CD,
				CHG_GB_CD,
				ORD_CD,
				MBER_SEQ,
				CHG_PROC_TYPE_CD,
				CHG_REG_DT,
				RCV_NM,
				TEL,
				HP,
				ZIP_CD,
				JUSO_JIBEN,
				JUSO_DORO,
				JUSO_DTL,
				ADM_ID,
				ADM_NM,
				REGIST_DT,
				UPDT_DT
			)
			SELECT
				  #{CHG_CD}
				, #{CHG_GB_CD}
				, #{ORD_CD} AS ORD_CD
				, #{MBER_SEQ} AS MBER_SEQ
				, #{CHG_PROC_TYPE_CD}
				, SYSDATE AS CHG_REG_DT
				, RCV_NM
				, RCV_TEL AS TEL
				, RCV_TEL AS HP
				, ZIP_CD
				, JUSO_JIBEN
				, JUSO_DORO
				, JUSO_DTL
				, #{ADM_ID} AS ADM_ID
				, #{ADM_NM} AS ADM_NM
				, SYSDATE AS REGIST_DT
				, SYSDATE AS UPDT_DT
			FROM
				ORD_DLV_INFO
			WHERE
				ORD_CD = #{ORD_CD}
	</insert>
	
	<!-- 회수,교환,반품,반납 접수 : CHG_RTN_PROC_INFO -->
	<insert id="insertChgProdInfo" parameterType="hashmap">
		INSERT INTO CHG_PROD_INFO
			(
				ORD_CD,
				CHG_CD,
				PROD_CODE,
				PROD_SEQ,
				PROD_GB_CD,
				PROC_STAT_CD,
				REGIST_DT,
				UPDT_DT
		 ) VALUES (
		       #{ORD_CD},
		       #{CHG_CD},
		       #{PROD_CODE},
		       #{PROD_SEQ},
		       '2',
		       #{PROC_STAT_CD},
		       SYSDATE,
		       SYSDATE
		) 
	</insert>
	
	<!-- 주문취소 - 단일,복합 상품 취소 구분 획득 -->
	<select id="selectSharOrderCancelGroupInfo" resultType="hashmap">
		SELECT
			  A.MBER_SEQ
			, A.POINT_USE_AMT
			, A.REAL_SELT_AMT
			, COUNT(*) AS CT
		FROM
			ORD_INFO A, ORD_PROD_INFO B
		WHERE
			    A.ORD_CD = B.ORD_CD
			AND A.ORD_CD = #{ORD_CD}
		GROUP BY A.MBER_SEQ, A.POINT_USE_AMT, A.REAL_SELT_AMT
	</select>
	
	<!-- 주문취소 - 사유 테이블 CANC_CD 획득 -->
	<select id="maxCancelCd" parameterType="hashmap" resultType="String">
		SELECT TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI')||LPAD(SEQ_ORD_CANC_INFO.NEXTVAL,4,0) AS CANC_CD FROM DUAL
	</select>
	
	<!-- 주문취소 - 사유 테이블에 삽입 -->
	<insert id="insertSharOrderCancelReason" parameterType="hashmap">
		INSERT INTO ORD_CANC_INFO 
			(
			  CANC_CD
			, CANC_REASON_CD
			, CANC_REASON
			, CANC_DT
			) 
		VALUES 
		(
			  #{CANC_CD}
			, #{CANC_REASON_CD}
			, #{CANC_REASON}
			, SYSDATE
		)
	</insert>
	
	<!-- 주문취소 - 주문상품 테이블에 상태코드 변경 -->
	<update id="updateSharOrderTableCancelState">
		UPDATE ORD_INFO SET 
			ORD_STAT_CD='150' 
		WHERE 
			ORD_CD = #{ORD_CD}
	</update>
	
	<!-- 주문취소 - 주문상품 테이블에 상태코드 변경 -->
	<update id="updateSharOrderProductTableCancelState">
		UPDATE ORD_PROD_INFO SET 
			  PROC_STAT_CD = '50' 
			, CANC_CD = #{CANC_CD}
			<if test="CPN_NO != ''">
				, PROD_CPN_CD = null
				, CPN_USE_AMT = null
			</if>
		WHERE 
		 	    ORD_CD = #{ORD_CD}
		 	AND PROD_CODE = #{PROD_CODE}
		 	AND PROD_SEQ = #{PROD_SEQ}
	</update>
	
	<!-- 쿠폰원복 - 쿠폰테이블 변경  -->
	<update id="updateSharOrderCouponTable">
		UPDATE MBER_CPN_INFO SET 
			  USE_YN = 'N' 
			, USE_DATE = null
			, PROD_CODE = null
		WHERE 
		 	CPN_NO = #{CPN_NO}
	</update>
	
	<!-- 포인트 원복 - 회원테이블 변경  -->
	<update id="updateMemberTableForPoint">
		UPDATE MBER_INFO SET 
			  POINT = POINT + #{POINT_USE_AMT}
		WHERE 
		 	MBER_SEQ = #{BUYER_SEQ}
	</update>
	
	<!-- 포인트 원복 - 회원테이블 변경  -->
	<insert id="insertPointLogTable" parameterType="hashmap">
		INSERT INTO POINT_USE_LOG 
			(
				  POINT_SEQ
				, MBER_SEQ
				, POINT
				, POINT_CD
				, CHG_REASON
				, REGIST_DT
				, POINT_TYPE
			) 
		VALUES 
			(
				  SEQ_POINT_USE.nextval
				, #{BUYER_SEQ}
				, #{POINT_USE_AMT}
				, '10'
				, #{POINT_COMMENT}
				, SYSDATE
				, '1'
			)
	</insert>
	
	<!-- 결제취소 - 결제 코드 획득  -->
	<select id="selectTradeNumber" resultType="hashmap">
		SELECT 
			  TRD_NO
			, ORD_NO AS PAYCO_NO
			, ORD_CER_KEY AS PAYCO_CER_KEY
		FROM 
			ORD_SETL_INFO 
		WHERE 
			    TRD_GB_CD = '10' 
			AND ORD_CD = #{ORD_CD} 
			AND ROWNUM = 1 
		ORDER BY REG_SEQ ASC
	</select>
	
	<!-- 결제취소 - 묶음배송 최종상태 유무  -->
	<select id="selectNotCancelDlvGroupCount" resultType="Integer">
		SELECT
			COUNT(*) AS CT
		FROM
  			ORD_INFO A, ORD_PROD_INFO B
		WHERE
			    A.ORD_CD = B.ORD_CD
			AND B.PROC_STAT_CD NOT IN ('33','50')
			AND A.ORD_CD = #{ORD_CD}
			AND B.DLV_GRP_CODE = #{DLV_GRP_CODE}
		GROUP BY A.ORD_CD, B.DLV_GRP_CODE		
	</select>
	
	<!-- 결제취소 - 주문 최종상태 유무  -->
	<select id="selectOrderNotCancelCount" resultType="Integer">
		SELECT
    		COUNT(*) AS CT
		FROM
  			ORD_INFO A, ORD_PROD_INFO B
		WHERE
			    A.ORD_CD = B.ORD_CD
			AND B.PROC_STAT_CD NOT IN ('33','50')
			AND A.ORD_CD = #{ORD_CD}
		GROUP BY A.ORD_CD
	</select>
	
	<!-- 결제취소 - 상품 결제 기본 정보  -->
	<select id="selectDefaultProductCancelInfo" resultType="hashmap">
		SELECT
			  A.MBER_SEQ
			, NVL(A.POINT_USE_AMT,0) AS POINT_USE_AMT
			, NVL(B.PROD_CPN_CD,'NO') AS PROD_CPN_CD
			, NVL(B.DLV_PRCE,0) AS DLV_PRCE
			, ((E.DEPOSIT+DECODE(D.MBER_GB_CD,0,0,1,(NVL(E.SHARING_PRICE,0) * B.SHARE_TERM)))*B.ORD_QTY)-NVL(B.CPN_USE_AMT,0) AS TOTAL_CANCEL_PRICE
		FROM
			ORD_INFO A, ORD_PROD_INFO B, PROD C, MBER_INFO D, PROD_SHARING E
		WHERE
			    A.ORD_CD = B.ORD_CD
			AND B.PROD_CODE = C.PROD_CODE
			AND C.MBER_SEQ = D.MBER_SEQ
			AND B.PROD_CODE = E.PROD_CODE
			AND B.PROC_STAT_CD NOT IN ('33','50')
			AND A.ORD_CD = #{ORD_CD}
			AND B.PROD_CODE = #{PROD_CODE}
			AND B.PROD_SEQ = #{PROD_SEQ}
	</select>
	
	<!-- 결제취소 정보 등록 -->
	<insert id="insertOrdCancelInfo" parameterType="hashmap">
		INSERT INTO ORD_SETL_INFO
			(
				  ORD_CD
				, REG_SEQ
				, TRD_GB_CD
				, TRD_NO
				, TRD_AMT
				, RLT_CD
				, RLT_MSG
				, REGIST_DT
			)
		VALUES
			(
				  #{ORD_CD}
				, (SELECT NVL(MAX(REG_SEQ), 0) + 1 FROM ORD_SETL_INFO WHERE ORD_CD = #{ORD_CD})
				, '20'
				, #{TRD_NO}
				, #{TRD_AMT}
				, #{RLT_CD}
				, #{RLT_MSG}
				, SYSDATE
			)
	</insert>
	
	<!-- 반납시 환불금액 -->
	<select id="selectShareReturnMoney" resultType="Integer">
		SELECT
			TA.DEPOSIT - (TA.ORD_QTY * TA.SHARING_PRICE * (TRUNC(TA.RETURN_DT) - TRUNC(TA.DLV_END_DT) +1)) AS SHARE_RETURN_MONEY
		FROM
			(
				SELECT
					  E.DEPOSIT
					, B.ORD_QTY
					, E.SHARING_PRICE
					, (SELECT DLV_END_DT FROM INVC_INFO WHERE ORD_CD = A.ORD_CD AND PROD_CODE = B.PROD_CODE AND PROD_SEQ = B.PROD_SEQ) AS DLV_END_DT
		      		, F.REGIST_DT AS RETURN_DT
				FROM
					ORD_INFO A, ORD_PROD_INFO B, PROD C, MBER_INFO D, PROD_SHARING E, (SELECT P.ORD_CD,P.PROD_CODE,P.PROD_SEQ,P.REGIST_DT,Q.RCV_NM,Q.HP,Q.ZIP_CD,Q.JUSO_JIBEN,Q.JUSO_DORO,Q.JUSO_DTL FROM CHG_PROD_INFO P , CHG_RTN_PROC_INFO Q WHERE P.CHG_CD = Q.CHG_CD(+)) F
				WHERE
					    A.ORD_CD = B.ORD_CD
					AND B.PROD_CODE = C.PROD_CODE
					AND C.MBER_SEQ = D.MBER_SEQ
					AND B.PROD_CODE = E.PROD_CODE
      				AND A.ORD_CD = F.ORD_CD
		  			AND B.PROD_CODE = F.PROD_CODE
		  			AND B.PROD_SEQ = F.PROD_SEQ
					AND A.ORD_CD = #{ORD_CD}
					AND B.PROD_CODE = #{PROD_CODE}
					AND B.PROD_SEQ = #{PROD_SEQ}
			) TA
	</select>
	
	<!-- 반품시 환불상품 정보 -->
	<select id="selectDefaultProductRejectInfo" resultType="hashmap">
		SELECT
			  A.MBER_SEQ
			, NVL(A.POINT_USE_AMT,0) AS POINT_USE_AMT
			, NVL(B.PROD_CPN_CD,'NO') AS PROD_CPN_CD
			, NVL(B.DLV_PRCE,0) AS DLV_PRCE
			, (B.PROD_PRCE * B.ORD_QTY)-NVL(B.CPN_USE_AMT,0) AS TOTAL_CANCEL_PRICE
		FROM
			ORD_INFO A, ORD_PROD_INFO B
		WHERE
			    A.ORD_CD = B.ORD_CD
			AND A.ORD_CD = #{ORD_CD}
			AND B.PROD_CODE = #{PROD_CODE}
			AND B.PROD_SEQ = #{PROD_SEQ}
	</select>
	
	<!-- 반품,교환,회수 배송정보 수정을 위한 CHG_CD 조회 -->
	<select id="getChgCd" resultType="String">
		SELECT
			CHG_CD
		FROM
			CHG_PROD_INFO
		WHERE
			    ORD_CD = #{ORD_CD}
			AND PROD_CODE = #{PROD_CODE}
			AND PROD_SEQ = #{PROD_SEQ}
	</select>
	
	<!-- 회수 요청일시 수정  -->
	<update id="updateRecoverDay">
	    UPDATE 
	    	CHG_PROD_INFO 
	    SET
			REGIST_DT = TO_DATE('${DLV_END_DT}','YYYY-MM-DDHH24MI')
		WHERE 
			    ORD_CD = #{ORD_CD}
			AND CHG_CD = #{CHG_CD}
			AND PROD_CODE = #{PROD_CODE}
			AND PROD_SEQ = #{PROD_SEQ}
	</update>
	
</mapper>
