package com.ssocio.sharing.cmmn.instance.cmmncode;

import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * <pre>
 * 정렬 Helper
 * 
 * @author D.G
 * @version 
 * @since 2015. 2. 12. 오후 7:58:59
 * @see 
 * @History 
 *  Date          |    author    | 변경내용  
 *	2015. 2. 12.  |    D.G       | 신규 
 * @Todo
 * </pre>
 */
public class CmmnCodeSortingHelper {

	// --------------------------------------------------------------------------
	// # Log 설정
	// --------------------------------------------------------------------------
	@SuppressWarnings("unused")
	private static final Logger logger = LoggerFactory.getLogger(CmmnCodeSortingHelper.class);

	private Map<String, Object> map = new LinkedHashMap<String, Object>();

	public CmmnCodeSortingHelper(List<CmmnCodeDto> list) {
		this.sort(list);
	}

	/**
	 * <pre>
	 * 정렬
	 * @param list 
	 * @exception 
	 * @date 2015. 2. 12. 오후 8:01:55
	 * @author D.G
	 * @비고
	 * 
	 * </pre>
	 */
	public void sort(List<CmmnCodeDto> list) {
		for (int i = 0, size = list.size(); i < size; i++) {
			CmmnCodeDto dto = (CmmnCodeDto) list.get(i);
			this.add(dto);
		}
	}

	/**
	 * <pre>
	 * 데이터추가
	 * @param dto 
	 * @exception 
	 * @date 2015. 2. 12. 오후 8:02:16
	 * @author D.G
	 * @비고
	 * 
	 * </pre>
	 */
	@SuppressWarnings({ "unchecked" })
	public void add(CmmnCodeDto dto) {
		String istId = dto.getGrpCd();
		// logger.debug("SortingHelper.add istId : " + istId);
		if (map.containsKey(istId)) {
			((List<CmmnCodeDto>) map.get(istId)).add(dto);
		} else {
			List<CmmnCodeDto> list = new LinkedList<CmmnCodeDto>();
			list.add(dto);
			map.put(istId, list);
		}
	}

	/**
	 * <pre>
	 * Map 반환
	 * @return 
	 * @exception 
	 * @date 2015. 2. 12. 오후 8:02:42
	 * @author Administrator
	 * @비고
	 * 
	 * </pre>
	 */
	public Map<String, Object> getCodeMap() {
		return this.map;
	}

}
