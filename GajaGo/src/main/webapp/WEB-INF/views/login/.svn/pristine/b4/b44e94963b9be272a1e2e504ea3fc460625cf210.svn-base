package com.ssocio.sharing.dao.web;

import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import com.ssocio.sharing.service.web.WebTestServiceImpl;

@Component
public class MobileMyActDao {
	
	private static final Logger logger = LoggerFactory.getLogger(WebTestServiceImpl.class);
	
	@Resource(name="sqlSessionMobile")
	private SqlSession sqlSession;

	public void setSqlSession(SqlSession sqlSession) {
		this.sqlSession = sqlSession;
	}
	
	/**
	 * 승인여부 정보조회
	 */
	public Map<String, Object> getMyAuthYnInfo(Map<String, Object> inParam) {
		return sqlSession.selectOne("MobileMyActMapper.getMyAuthYnInfo",inParam);	
	}
	
	/**
	 * 1. 상품후기
	 * @throws Exception 
	 */
	public List<Map<String, Object>> getMyActAfterList(Map<String, Object> inParam) throws Exception {
		List<Map<String, Object>> selectBrandList = null;
		try {
			selectBrandList =  sqlSession.selectList("MobileMyActMapper.getMyActAfterList",inParam);
		} catch (Exception e) {
			logger.error("selectSaleProdCnt DB Error : " + e.toString());
			throw new Exception("DB ERROR");
		}
		return selectBrandList;
	}
	/**
	 * 2. 이벤트참여
	 */
	public List<Map<String, Object>> getMyActEventList(Map<String, Object> inParam) {
		return sqlSession.selectList("MobileMyActMapper.getMyActEventList",inParam);
	}
	/**
	 * 3. 상품문의
	 */
	public List<Map<String, Object>> getMyActQuesList(Map<String, Object> inParam) {
		return sqlSession.selectList("MobileMyActMapper.getMyActQuesList",inParam);
	}
	/**
	 * 나의활동 > 3.상품문의
	 * 		- 상세조회 화면으로 이동
	 */
	public Map<String, Object> getProdAnsView(Map<String, Object> inParam) {
		return sqlSession.selectOne("MobileMyActMapper.getProdAnsView",inParam);
	}
	/**
	 * 나의활동 > 3.상품문의 > 상세화면 > 수정처리
	 * 		- [상품문의]수정처리
	 */
	public Integer updateProdAnsProcess(Map<String, Object> inParam) {
		return sqlSession.update("MobileMyActMapper.updateProdAnsProcess",inParam);
	}
	/**
	 * 4. 1:1문의
	 */
	public List<Map<String, Object>> getMyActOneList(Map<String, Object> inParam) {
		return sqlSession.selectList("MobileMyActMapper.getMyActOneList",inParam);
	}
	/**
	 * 나의활동 > 1:1문의
	 * 		- 상세조회 화면으로 이동
	 */
	public Map<String, Object> getProdQnaView(Map<String, Object> inParam) {
		return sqlSession.selectOne("MobileMyActMapper.getProdQnaView",inParam);	
	}

	public Map<String, Object> updateQnaInfo(Map<String, Object> inParam) {
		return sqlSession.selectOne("MobileMyActMapper.updateQnaInfo",inParam);	
	}

	public int updateQnaInfoReg(Map<String, Object> inParam) {
		return sqlSession.update("MobileMyActMapper.updateQnaInfoReg",inParam);
	}
	
	public int updateBoardViewCnt(Map<String, Object> inParam) {
		logger.debug("updateBoardViewCnt - inParam:"+inParam);
		return sqlSession.update("MobileMyActMapper.updateBoardViewCnt",inParam);
	}

	public Map<String, Object> selectMyEvtDtl(Map<String, Object> inParam) {
		return sqlSession.selectOne("MobileMyActMapper.selectMyEvtDtl",inParam);	
	}

	public int deleteprodQna(Map<String, Object> inParam) throws Exception {
		return sqlSession.delete("MobileMyActMapper.deleteprodQna",inParam);
	}

	public int prodQnaCheck(Map<String, Object> inParam) {
		return sqlSession.selectOne("MobileMyActMapper.prodQnaCheck",inParam);	
	}

	public int selectChkdel(Map<String, Object> inParam) {
		return sqlSession.selectOne("MobileMyActMapper.selectChkdel",inParam);	
	}

	public int selectChkConf(Map<String, Object> inParam) throws Exception {
		return sqlSession.selectOne("MobileMyActMapper.selectChkConf",inParam);	
	}
}
